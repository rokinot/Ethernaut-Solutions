{
	"id": "01337d0f7b4175d008f52210eea63d28",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.7;\r\n\r\ncontract test {\r\n\r\n    function testing () public view returns (uint) {\r\n        require(givenumber() > 0, \"wtf\");\r\n        return 2;\r\n    }\r\n\r\n    function givenumber() public view returns (uint) {\r\n        return block.number + 1;\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"test": {
					"abi": [
						{
							"inputs": [],
							"name": "givenumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "testing",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":64:308  contract test {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":64:308  contract test {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8d03b102\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe0e36863\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test.sol\":87:204  function testing () public view returns (uint) {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":491:516   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":479:481   */\n      0x20\n        /* \"#utility.yul\":464:482   */\n      add\n        /* \"test.sol\":87:204  function testing () public view returns (uint) {\r... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":212:303  function givenumber() public view returns (uint) {\r... */\n    tag_4:\n      tag_5\n      tag_10\n      jump\t// in\n        /* \"test.sol\":87:204  function testing () public view returns (uint) {\r... */\n    tag_6:\n        /* \"test.sol\":128:132  uint */\n      0x00\n        /* \"test.sol\":168:169  0 */\n      dup1\n        /* \"test.sol\":153:165  givenumber() */\n      tag_13\n        /* \"test.sol\":153:163  givenumber */\n      tag_10\n        /* \"test.sol\":153:165  givenumber() */\n      jump\t// in\n    tag_13:\n        /* \"test.sol\":153:169  givenumber() > 0 */\n      gt\n        /* \"test.sol\":145:177  require(givenumber() > 0, \"wtf\") */\n      tag_14\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"test.sol\":145:177  require(givenumber() > 0, \"wtf\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:256   */\n      0x03\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:257   */\n      mstore\n      shl(0xe9, 0x3bba33)\n        /* \"#utility.yul\":273:291   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":266:299   */\n      mstore\n        /* \"#utility.yul\":316:334   */\n      0x64\n      add\n        /* \"test.sol\":145:177  require(givenumber() > 0, \"wtf\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n      pop\n        /* \"test.sol\":195:196  2 */\n      0x02\n      swap1\n        /* \"test.sol\":87:204  function testing () public view returns (uint) {\r... */\n      jump\t// out\n        /* \"test.sol\":212:303  function givenumber() public view returns (uint) {\r... */\n    tag_10:\n        /* \"test.sol\":255:259  uint */\n      0x00\n        /* \"test.sol\":279:295  block.number + 1 */\n      tag_18\n        /* \"test.sol\":279:291  block.number */\n      number\n        /* \"test.sol\":294:295  1 */\n      0x01\n        /* \"test.sol\":279:295  block.number + 1 */\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"test.sol\":272:295  return block.number + 1 */\n      swap1\n      pop\n        /* \"test.sol\":212:303  function givenumber() public view returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":527:752   */\n    tag_19:\n        /* \"#utility.yul\":567:570   */\n      0x00\n        /* \"#utility.yul\":598:599   */\n      dup3\n        /* \"#utility.yul\":594:600   */\n      not\n        /* \"#utility.yul\":591:592   */\n      dup3\n        /* \"#utility.yul\":588:601   */\n      gt\n        /* \"#utility.yul\":585:721   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":643:653   */\n      0x4e487b71\n        /* \"#utility.yul\":638:641   */\n      0xe0\n        /* \"#utility.yul\":634:654   */\n      shl\n        /* \"#utility.yul\":631:632   */\n      0x00\n        /* \"#utility.yul\":624:655   */\n      mstore\n        /* \"#utility.yul\":678:682   */\n      0x11\n        /* \"#utility.yul\":675:676   */\n      0x04\n        /* \"#utility.yul\":668:683   */\n      mstore\n        /* \"#utility.yul\":706:710   */\n      0x24\n        /* \"#utility.yul\":703:704   */\n      0x00\n        /* \"#utility.yul\":696:711   */\n      revert\n        /* \"#utility.yul\":585:721   */\n    tag_24:\n      pop\n        /* \"#utility.yul\":737:746   */\n      add\n      swap1\n        /* \"#utility.yul\":527:752   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122038af550aaf216e3c2c063964ec0d85a903e2a8dbba08a7bfbca2b5588d92d7cd64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610105806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80638d03b102146037578063e0e3686314604f575b600080fd5b603d6055565b60405190815260200160405180910390f35b603d609a565b600080605e609a565b1160945760405162461bcd60e51b81526020600482015260036024820152623bba3360e91b604482015260640160405180910390fd5b50600290565b600060a543600160aa565b905090565b6000821982111560ca57634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122038af550aaf216e3c2c063964ec0d85a903e2a8dbba08a7bfbca2b5588d92d7cd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D03B102 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xE0E36863 EQ PUSH1 0x4F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3D PUSH1 0x9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5E PUSH1 0x9A JUMP JUMPDEST GT PUSH1 0x94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x3BBA33 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA5 NUMBER PUSH1 0x1 PUSH1 0xAA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH1 0xCA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xAF SSTORE EXP 0xAF 0x21 PUSH15 0x3C2C063964EC0D85A903E2A8DBBA08 0xA7 0xBF 0xBC LOG2 0xB5 PC DUP14 SWAP3 0xD7 0xCD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "64:244:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@givenumber_28": {
									"entryPoint": 154,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@testing_17": {
									"entryPoint": 85,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16315146b35d93995f3b91b837a0e1b3e69668e6ce0ea6c2f72b42551b763b8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:754:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "277:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "288:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "273:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "273:18:1"
																	},
																	{
																		"hexValue": "777466",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "293:5:1",
																		"type": "",
																		"value": "wtf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "266:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "266:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "266:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "308:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "320:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "331:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "316:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "308:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16315146b35d93995f3b91b837a0e1b3e69668e6ce0ea6c2f72b42551b763b8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:326:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "446:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "468:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "479:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "464:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "456:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "509:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "491:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "491:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "415:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "426:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "437:4:1",
														"type": ""
													}
												],
												"src": "345:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "575:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "610:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "631:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "638:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "643:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "634:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "634:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "624:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "624:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "624:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "675:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "678:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "668:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "668:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "668:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "703:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "696:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "696:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "696:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "591:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "598:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "594:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "588:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "588:13:1"
															},
															"nodeType": "YulIf",
															"src": "585:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "730:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "741:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "744:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "737:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "737:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "730:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "558:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "561:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "567:3:1",
														"type": ""
													}
												],
												"src": "527:225:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_16315146b35d93995f3b91b837a0e1b3e69668e6ce0ea6c2f72b42551b763b8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"wtf\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80638d03b102146037578063e0e3686314604f575b600080fd5b603d6055565b60405190815260200160405180910390f35b603d609a565b600080605e609a565b1160945760405162461bcd60e51b81526020600482015260036024820152623bba3360e91b604482015260640160405180910390fd5b50600290565b600060a543600160aa565b905090565b6000821982111560ca57634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122038af550aaf216e3c2c063964ec0d85a903e2a8dbba08a7bfbca2b5588d92d7cd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D03B102 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xE0E36863 EQ PUSH1 0x4F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3D PUSH1 0x9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5E PUSH1 0x9A JUMP JUMPDEST GT PUSH1 0x94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x3BBA33 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA5 NUMBER PUSH1 0x1 PUSH1 0xAA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH1 0xCA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xAF SSTORE EXP 0xAF 0x21 PUSH15 0x3C2C063964EC0D85A903E2A8DBBA08 0xA7 0xBF 0xBC LOG2 0xB5 PC DUP14 SWAP3 0xD7 0xCD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "64:244:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;87:117;;;:::i;:::-;;;491:25:1;;;479:2;464:18;87:117:0;;;;;;;212:91;;;:::i;87:117::-;128:4;168:1;153:12;:10;:12::i;:::-;:16;145:32;;;;-1:-1:-1;;;145:32:0;;216:2:1;145:32:0;;;198:21:1;255:1;235:18;;;228:29;-1:-1:-1;;;273:18:1;;;266:33;316:18;;145:32:0;;;;;;;;-1:-1:-1;195:1:0;;87:117::o;212:91::-;255:4;279:16;:12;294:1;279:16;:::i;:::-;272:23;;212:91;:::o;527:225:1:-;567:3;598:1;594:6;591:1;588:13;585:136;;;643:10;638:3;634:20;631:1;624:31;678:4;675:1;668:15;706:4;703:1;696:15;585:136;-1:-1:-1;737:9:1;;527:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "52200",
								"executionCost": "105",
								"totalCost": "52305"
							},
							"external": {
								"givenumber()": "269",
								"testing()": "350"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 308,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 64,
									"end": 308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 64,
									"end": 308,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 64,
									"end": 308,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 64,
									"end": 308,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 308,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 64,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 308,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 64,
									"end": 308,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 308,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 308,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 64,
									"end": 308,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 64,
									"end": 308,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 64,
									"end": 308,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 308,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 308,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 308,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 308,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 64,
									"end": 308,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 308,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038af550aaf216e3c2c063964ec0d85a903e2a8dbba08a7bfbca2b5588d92d7cd64736f6c63430008070033",
									".code": [
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "8D03B102"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "E0E36863"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 87,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 87,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 87,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 87,
											"end": 204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 87,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 87,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 87,
											"end": 204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 491,
											"end": 516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 491,
											"end": 516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 479,
											"end": 481,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 87,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 87,
											"end": 204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 87,
											"end": 204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 87,
											"end": 204,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 87,
											"end": 204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 204,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 212,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 212,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 212,
											"end": 303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 87,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 87,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 153,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 153,
											"end": 165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 153,
											"end": 165,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 153,
											"end": 165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 169,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 145,
											"end": 177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 145,
											"end": 177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 145,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 255,
											"end": 256,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 228,
											"end": 257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3BBA33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 273,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 273,
											"end": 291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 316,
											"end": 334,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 316,
											"end": 334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 145,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 145,
											"end": 177,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 145,
											"end": 177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 195,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 195,
											"end": 196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 204,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 212,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 212,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 279,
											"end": 291,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 294,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 279,
											"end": 295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 279,
											"end": 295,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 279,
											"end": 295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 272,
											"end": 295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 272,
											"end": 295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 303,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 527,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 527,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 594,
											"end": 600,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 591,
											"end": 592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 588,
											"end": 601,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 585,
											"end": 721,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 585,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 721,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 643,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 638,
											"end": 641,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 634,
											"end": 654,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 631,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 675,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 668,
											"end": 683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 706,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 703,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 711,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 585,
											"end": 721,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 737,
											"end": 746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 737,
											"end": 746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 527,
											"end": 752,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"givenumber()": "e0e36863",
							"testing()": "8d03b102"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"givenumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x98c59b36af79040a4199085e4a9b56cf07bad8b6e236c31b1d85c88c32e24b93\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://38ce249922446b619d22d24baaa2e0f4bc0a38c84a54e9e22f1d30d7b62a8741\",\"dweb:/ipfs/QmNdsxZLk5HUFfwRagXhVvoXeP3ep7upAypYXFGAU9po2b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"test": [
							29
						]
					},
					"id": 30,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "test",
							"nameLocation": "73:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "134:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 7,
																	"name": "givenumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "153:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 8,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "153:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 9,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "153:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "777466",
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "171:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16315146b35d93995f3b91b837a0e1b3e69668e6ce0ea6c2f72b42551b763b8b",
																"typeString": "literal_string \"wtf\""
															},
															"value": "wtf"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16315146b35d93995f3b91b837a0e1b3e69668e6ce0ea6c2f72b42551b763b8b",
																"typeString": "literal_string \"wtf\""
															}
														],
														"id": 6,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "145:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "145:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "145:32:0"
											},
											{
												"expression": {
													"hexValue": "32",
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "195:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"functionReturnParameters": 5,
												"id": 15,
												"nodeType": "Return",
												"src": "188:8:0"
											}
										]
									},
									"functionSelector": "8d03b102",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testing",
									"nameLocation": "96:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "104:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "127:6:0"
									},
									"scope": 29,
									"src": "87:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "261:42:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 22,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "279:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "279:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "294:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "279:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 21,
												"id": 26,
												"nodeType": "Return",
												"src": "272:23:0"
											}
										]
									},
									"functionSelector": "e0e36863",
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "givenumber",
									"nameLocation": "221:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "231:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "255:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:6:0"
									},
									"scope": 29,
									"src": "212:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 30,
							"src": "64:244:0",
							"usedErrors": []
						}
					],
					"src": "37:271:0"
				},
				"id": 0
			}
		}
	}
}