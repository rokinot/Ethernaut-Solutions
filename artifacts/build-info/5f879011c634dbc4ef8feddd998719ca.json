{
	"id": "5f879011c634dbc4ef8feddd998719ca",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.7;\r\n\r\ncontract test {\r\n\r\n    event Transfer(address to, address from, uint256 amount);\r\n\r\n    function testing (uint aux) public returns (uint) {\r\n        emit Transfer(address(0), address(1), 1);\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"test": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "aux",
									"type": "uint256"
								}
							],
							"name": "testing",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":64:266  contract test {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":64:266  contract test {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c30f765\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test.sol\":152:261  function testing (uint aux) public returns (uint) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":733:758   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":721:723   */\n      0x20\n        /* \"#utility.yul\":706:724   */\n      add\n        /* \"test.sol\":152:261  function testing (uint aux) public returns (uint) {\r... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"test.sol\":218:253  Transfer(address(0), address(1), 1) */\n      0x40\n      dup1\n      mload\n        /* \"test.sol\":196:200  uint */\n      0x00\n        /* \"#utility.yul\":447:481   */\n      dup1\n      dup3\n      mstore\n        /* \"test.sol\":247:248  1 */\n      0x01\n        /* \"#utility.yul\":512:514   */\n      0x20\n        /* \"#utility.yul\":497:515   */\n      dup4\n      add\n        /* \"#utility.yul\":490:533   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":549:567   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":542:576   */\n      mstore\n        /* \"test.sol\":218:253  Transfer(address(0), address(1), 1) */\n      swap2\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":397:399   */\n      0x60\n        /* \"test.sol\":218:253  Transfer(address(0), address(1), 1) */\n      add\n      swap1\n      log1\n        /* \"test.sol\":152:261  function testing (uint aux) public returns (uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_6:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_15\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_15:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209fd8ca4a43df417022d0c7a3deca04a491631163c2a25c0e419b68ed6f264be464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060e38061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80636c30f76514602d575b600080fd5b603c60383660046095565b604e565b60405190815260200160405180910390f35b6040805160008082526001602083018190528284015291517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1919050565b60006020828403121560a657600080fd5b503591905056fea26469706673582212209fd8ca4a43df417022d0c7a3deca04a491631163c2a25c0e419b68ed6f264be464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE3 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C30F765 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x95 JUMP JUMPDEST PUSH1 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE DUP3 DUP5 ADD MSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xD8 0xCA 0x4A NUMBER 0xDF COINBASE PUSH17 0x22D0C7A3DECA04A491631163C2A25C0E41 SWAP12 PUSH9 0xED6F264BE464736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "64:202:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@testing_29": {
									"entryPoint": 78,
									"id": 29,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:766:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "364:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "374:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "386:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "397:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "374:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "409:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "427:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "432:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "423:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "423:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "436:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "419:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "419:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "413:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "454:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "469:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "477:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "465:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "465:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "447:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "447:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "512:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "521:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "529:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "517:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "490:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "553:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "564:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "549:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "549:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "569:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "542:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "542:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "317:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "328:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "336:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "344:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "355:4:1",
														"type": ""
													}
												],
												"src": "199:383:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "688:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "698:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "710:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "721:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "706:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "698:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "740:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "733:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "657:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "668:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "679:4:1",
														"type": ""
													}
												],
												"src": "587:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80636c30f76514602d575b600080fd5b603c60383660046095565b604e565b60405190815260200160405180910390f35b6040805160008082526001602083018190528284015291517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1919050565b60006020828403121560a657600080fd5b503591905056fea26469706673582212209fd8ca4a43df417022d0c7a3deca04a491631163c2a25c0e419b68ed6f264be464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C30F765 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x95 JUMP JUMPDEST PUSH1 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE DUP3 DUP5 ADD MSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xD8 0xCA 0x4A NUMBER 0xDF COINBASE PUSH17 0x22D0C7A3DECA04A491631163C2A25C0E41 SWAP12 PUSH9 0xED6F264BE464736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "64:202:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;152:109;;;;;;:::i;:::-;;:::i;:::-;;;733:25:1;;;721:2;706:18;152:109:0;;;;;;;;218:35;;;196:4;447:34:1;;;247:1:0;512:2:1;497:18;;490:43;;;549:18;;;542:34;218:35:0;;;;;;;397:2:1;218:35:0;;;152:109;;;:::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "45400",
								"executionCost": "99",
								"totalCost": "45499"
							},
							"external": {
								"testing(uint256)": "1860"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 266,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 64,
									"end": 266,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 64,
									"end": 266,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 64,
									"end": 266,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 64,
									"end": 266,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 266,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 64,
									"end": 266,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 266,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 64,
									"end": 266,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 266,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 266,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 64,
									"end": 266,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 266,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 64,
									"end": 266,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 64,
									"end": 266,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 266,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 266,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 266,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 266,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 64,
									"end": 266,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 266,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209fd8ca4a43df417022d0c7a3deca04a491631163c2a25c0e419b68ed6f264be464736f6c63430008070033",
									".code": [
										{
											"begin": 64,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "6C30F765"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 266,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 733,
											"end": 758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 733,
											"end": 758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 721,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 152,
											"end": 261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 218,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 218,
											"end": 253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 196,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 247,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 515,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 490,
											"end": 533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 549,
											"end": 567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 549,
											"end": 567,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 549,
											"end": 567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 542,
											"end": 576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 218,
											"end": 253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 218,
											"end": 253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 218,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 218,
											"end": 253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 218,
											"end": 253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 218,
											"end": 253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 218,
											"end": 253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 397,
											"end": 399,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 218,
											"end": 253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 218,
											"end": 253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 218,
											"end": 253,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 152,
											"end": 261,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"testing(uint256)": "6c30f765"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aux\",\"type\":\"uint256\"}],\"name\":\"testing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x50d88a891e8886baba5a1fc82908990bf2fe82019cb32bab34533b192f9c918c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://12ed46d968e6c8839182ef373dfc8d82e44986ab5878e9f43b85f9c90e7e0ff0\",\"dweb:/ipfs/QmWTgspUiBpZ1PdKUdank2M2oHDW97mjmiXaYgyvyPTvgo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n --> test.sol:8:49:\n  |\n8 |     function testing (uint aux) public returns (uint) {\n  |                                                 ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 200,
					"file": "test.sol",
					"start": 196
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n --> test.sol:8:23:\n  |\n8 |     function testing (uint aux) public returns (uint) {\n  |                       ^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 178,
					"file": "test.sol",
					"start": 170
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"test": [
							30
						]
					},
					"id": 31,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "test",
							"nameLocation": "73:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 9,
									"name": "Transfer",
									"nameLocation": "93:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "110:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "102:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "122:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "114:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "136:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "101:42:0"
									},
									"src": "87:57:0"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "202:59:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "235:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "227:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 17,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "227:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "227:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 23,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "247:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "239:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 21,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "239:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "239:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "251:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 16,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "218:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "218:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "EmitStatement",
												"src": "213:40:0"
											}
										]
									},
									"functionSelector": "6c30f765",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testing",
									"nameLocation": "161:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "175:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "170:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "169:10:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "196:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "196:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:6:0"
									},
									"scope": 30,
									"src": "152:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 31,
							"src": "64:202:0",
							"usedErrors": []
						}
					],
					"src": "37:229:0"
				},
				"id": 0
			}
		}
	}
}