{
	"id": "518359559e118d965079816ac3919333",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ethernautKing.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ncontract King {\r\n\r\n  address payable king;\r\n  uint public prize;\r\n  address payable public owner;\r\n\r\n  constructor() public payable {\r\n    owner = payable(msg.sender);  \r\n    king = payable(msg.sender);\r\n    prize = msg.value;\r\n  }\r\n\r\n  receive() external payable {\r\n    require(msg.value >= prize || msg.sender == owner);\r\n    king.transfer(msg.value);\r\n    king = payable(msg.sender);\r\n    prize = msg.value;\r\n  }\r\n\r\n  function _king() public view returns (address payable) {\r\n    return king;\r\n  }\r\n}\r\n\r\n//0x557d634258B353BAC0F7d17d807DAAE74851F638\r\n\r\ncontract ethernautKing {\r\n\r\n    function solve() external payable {\r\n        address payable contractAddr = payable(0x557d634258B353BAC0F7d17d807DAAE74851F638);\r\n        contractAddr.transfer(msg.value); //1000000000000001\r\n    }\r\n\r\n    receive() external payable {\r\n        revert();\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ethernautKing.sol": {
				"King": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "_king",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "prize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernautKing.sol\":60:563  contract King {\r... */\n  mstore(0x40, 0x80)\n    /* \"ethernautKing.sol\":215:225  msg.sender */\n  caller\n    /* \"ethernautKing.sol\":199:204  owner */\n  0x02\n  0x00\n    /* \"ethernautKing.sol\":199:226  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ethernautKing.sol\":250:260  msg.sender */\n  caller\n    /* \"ethernautKing.sol\":235:239  king */\n  0x00\n  dup1\n    /* \"ethernautKing.sol\":235:261  king = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ethernautKing.sol\":276:285  msg.value */\n  callvalue\n    /* \"ethernautKing.sol\":268:273  prize */\n  0x01\n    /* \"ethernautKing.sol\":268:285  prize = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ethernautKing.sol\":60:563  contract King {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernautKing.sol\":60:563  contract King {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x29cc6d6f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe3ac5d26\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"ethernautKing.sol\":352:357  prize */\n      sload(0x01)\n        /* \"ethernautKing.sol\":339:348  msg.value */\n      callvalue\n        /* \"ethernautKing.sol\":339:357  msg.value >= prize */\n      lt\n      iszero\n        /* \"ethernautKing.sol\":339:380  msg.value >= prize || msg.sender == owner */\n      dup1\n      tag_8\n      jumpi\n      pop\n        /* \"ethernautKing.sol\":375:380  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":361:380  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":361:371  msg.sender */\n      caller\n        /* \"ethernautKing.sol\":361:380  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ethernautKing.sol\":339:380  msg.value >= prize || msg.sender == owner */\n    tag_8:\n        /* \"ethernautKing.sol\":331:381  require(msg.value >= prize || msg.sender == owner) */\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n        /* \"ethernautKing.sol\":388:392  king */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":388:401  king.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":388:412  king.transfer(msg.value) */\n      0x08fc\n        /* \"ethernautKing.sol\":402:411  msg.value */\n      callvalue\n        /* \"ethernautKing.sol\":388:412  king.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_11:\n      pop\n        /* \"ethernautKing.sol\":434:444  msg.sender */\n      caller\n        /* \"ethernautKing.sol\":419:423  king */\n      0x00\n      dup1\n        /* \"ethernautKing.sol\":419:445  king = payable(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ethernautKing.sol\":460:469  msg.value */\n      callvalue\n        /* \"ethernautKing.sol\":452:457  prize */\n      0x01\n        /* \"ethernautKing.sol\":452:469  prize = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ethernautKing.sol\":60:563  contract King {\r... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernautKing.sol\":481:560  function _king() public view returns (address payable) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernautKing.sol\":128:156  address payable public owner */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernautKing.sol\":106:123  uint public prize */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernautKing.sol\":481:560  function _king() public view returns (address payable) {\r... */\n    tag_14:\n        /* \"ethernautKing.sol\":519:534  address payable */\n      0x00\n        /* \"ethernautKing.sol\":550:554  king */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":543:554  return king */\n      swap1\n      pop\n        /* \"ethernautKing.sol\":481:560  function _king() public view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"ethernautKing.sol\":128:156  address payable public owner */\n    tag_19:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ethernautKing.sol\":106:123  uint public prize */\n    tag_23:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:149   */\n    tag_28:\n        /* \"#utility.yul\":110:142   */\n      tag_30\n        /* \"#utility.yul\":136:141   */\n      dup2\n        /* \"#utility.yul\":110:142   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":105:108   */\n      dup3\n        /* \"#utility.yul\":98:143   */\n      mstore\n        /* \"#utility.yul\":7:149   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":155:273   */\n    tag_32:\n        /* \"#utility.yul\":242:266   */\n      tag_34\n        /* \"#utility.yul\":260:265   */\n      dup2\n        /* \"#utility.yul\":242:266   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":237:240   */\n      dup3\n        /* \"#utility.yul\":230:267   */\n      mstore\n        /* \"#utility.yul\":155:273   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":279:533   */\n    tag_16:\n        /* \"#utility.yul\":388:392   */\n      0x00\n        /* \"#utility.yul\":426:428   */\n      0x20\n        /* \"#utility.yul\":415:424   */\n      dup3\n        /* \"#utility.yul\":411:429   */\n      add\n        /* \"#utility.yul\":403:429   */\n      swap1\n      pop\n        /* \"#utility.yul\":439:526   */\n      tag_37\n        /* \"#utility.yul\":523:524   */\n      0x00\n        /* \"#utility.yul\":512:521   */\n      dup4\n        /* \"#utility.yul\":508:525   */\n      add\n        /* \"#utility.yul\":499:505   */\n      dup5\n        /* \"#utility.yul\":439:526   */\n      tag_28\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":279:533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:761   */\n    tag_25:\n        /* \"#utility.yul\":632:636   */\n      0x00\n        /* \"#utility.yul\":670:672   */\n      0x20\n        /* \"#utility.yul\":659:668   */\n      dup3\n        /* \"#utility.yul\":655:673   */\n      add\n        /* \"#utility.yul\":647:673   */\n      swap1\n      pop\n        /* \"#utility.yul\":683:754   */\n      tag_39\n        /* \"#utility.yul\":751:752   */\n      0x00\n        /* \"#utility.yul\":740:749   */\n      dup4\n        /* \"#utility.yul\":736:753   */\n      add\n        /* \"#utility.yul\":727:733   */\n      dup5\n        /* \"#utility.yul\":683:754   */\n      tag_32\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":539:761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":767:871   */\n    tag_31:\n        /* \"#utility.yul\":812:819   */\n      0x00\n        /* \"#utility.yul\":841:865   */\n      tag_41\n        /* \"#utility.yul\":859:864   */\n      dup3\n        /* \"#utility.yul\":841:865   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":830:865   */\n      swap1\n      pop\n        /* \"#utility.yul\":767:871   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":877:1003   */\n    tag_42:\n        /* \"#utility.yul\":914:921   */\n      0x00\n        /* \"#utility.yul\":954:996   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":947:952   */\n      dup3\n        /* \"#utility.yul\":943:997   */\n      and\n        /* \"#utility.yul\":932:997   */\n      swap1\n      pop\n        /* \"#utility.yul\":877:1003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1009:1086   */\n    tag_35:\n        /* \"#utility.yul\":1046:1053   */\n      0x00\n        /* \"#utility.yul\":1075:1080   */\n      dup2\n        /* \"#utility.yul\":1064:1080   */\n      swap1\n      pop\n        /* \"#utility.yul\":1009:1086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fa698989812b206130fdc8ef30064ad411004b7f9331aeb21f9c118f6874b5dc64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405233600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506102f58061009b6000396000f3fe6080604052600436106100385760003560e01c806329cc6d6f146101595780638da5cb5b14610184578063e3ac5d26146101af57610154565b36610154576001543410158061009b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100a457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561010a573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550005b600080fd5b34801561016557600080fd5b5061016e6101da565b60405161017b919061024d565b60405180910390f35b34801561019057600080fd5b50610199610203565b6040516101a6919061024d565b60405180910390f35b3480156101bb57600080fd5b506101c4610229565b6040516101d19190610268565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b61023881610283565b82525050565b610247816102b5565b82525050565b6000602082019050610262600083018461022f565b92915050565b600060208201905061027d600083018461023e565b92915050565b600061028e82610295565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea2646970667358221220fa698989812b206130fdc8ef30064ad411004b7f9331aeb21f9c118f6874b5dc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x2F5 DUP1 PUSH2 0x9B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29CC6D6F EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x1AF JUMPI PUSH2 0x154 JUMP JUMPDEST CALLDATASIZE PUSH2 0x154 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO DUP1 PUSH2 0x9B JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x238 DUP2 PUSH2 0x283 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x247 DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x262 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E DUP3 PUSH2 0x295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL PUSH10 0x8989812B206130FDC8EF ADDRESS MOD 0x4A 0xD4 GT STOP 0x4B PUSH32 0x9331AEB21F9C118F6874B5DC64736F6C63430008070033000000000000000000 ",
							"sourceMap": "60:503:0:-:0;;;215:10;199:5;;:27;;;;;;;;;;;;;;;;;;250:10;235:4;;:26;;;;;;;;;;;;;;;;;;276:9;268:5;:17;;;;60:503;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_68": {
									"entryPoint": null,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_king_76": {
									"entryPoint": 474,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_7": {
									"entryPoint": 515,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@prize_5": {
									"entryPoint": 553,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1089:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "88:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "105:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "136:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "110:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "110:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "98:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "98:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "98:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "76:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "83:3:1",
														"type": ""
													}
												],
												"src": "7:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "237:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "260:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "242:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "242:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "230:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "230:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "208:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "215:3:1",
														"type": ""
													}
												],
												"src": "155:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "393:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "403:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "415:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "426:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "411:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "403:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "499:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "512:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "523:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "508:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "439:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "439:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "439:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "365:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "377:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "388:4:1",
														"type": ""
													}
												],
												"src": "279:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "637:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "647:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "659:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "670:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "655:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "647:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "727:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "740:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "736:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "736:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "683:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "683:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "609:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "621:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "632:4:1",
														"type": ""
													}
												],
												"src": "539:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "820:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "830:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "859:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "841:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "841:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "830:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "802:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "812:7:1",
														"type": ""
													}
												],
												"src": "767:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "932:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "947:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "943:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "932:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "904:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "914:7:1",
														"type": ""
													}
												],
												"src": "877:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1054:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1064:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1075:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1064:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1036:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1046:7:1",
														"type": ""
													}
												],
												"src": "1009:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c806329cc6d6f146101595780638da5cb5b14610184578063e3ac5d26146101af57610154565b36610154576001543410158061009b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100a457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561010a573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550005b600080fd5b34801561016557600080fd5b5061016e6101da565b60405161017b919061024d565b60405180910390f35b34801561019057600080fd5b50610199610203565b6040516101a6919061024d565b60405180910390f35b3480156101bb57600080fd5b506101c4610229565b6040516101d19190610268565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b61023881610283565b82525050565b610247816102b5565b82525050565b6000602082019050610262600083018461022f565b92915050565b600060208201905061027d600083018461023e565b92915050565b600061028e82610295565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea2646970667358221220fa698989812b206130fdc8ef30064ad411004b7f9331aeb21f9c118f6874b5dc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29CC6D6F EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x1AF JUMPI PUSH2 0x154 JUMP JUMPDEST CALLDATASIZE PUSH2 0x154 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO DUP1 PUSH2 0x9B JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x238 DUP2 PUSH2 0x283 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x247 DUP2 PUSH2 0x2B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x262 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E DUP3 PUSH2 0x295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL PUSH10 0x8989812B206130FDC8EF ADDRESS MOD 0x4A 0xD4 GT STOP 0x4B PUSH32 0x9331AEB21F9C118F6874B5DC64736F6C63430008070033000000000000000000 ",
							"sourceMap": "60:503:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;352:5;;339:9;:18;;:41;;;;375:5;;;;;;;;;;;361:19;;:10;:19;;;339:41;331:50;;;;;;388:4;;;;;;;;;;:13;;:24;402:9;388:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;434:10;419:4;;:26;;;;;;;;;;;;;;;;;;460:9;452:5;:17;;;;60:503;;;;;481:79;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;128:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;106:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;481:79;519:15;550:4;;;;;;;;;;;543:11;;481:79;:::o;128:28::-;;;;;;;;;;;;;:::o;106:17::-;;;;:::o;7:142:1:-;110:32;136:5;110:32;:::i;:::-;105:3;98:45;7:142;;:::o;155:118::-;242:24;260:5;242:24;:::i;:::-;237:3;230:37;155:118;;:::o;279:254::-;388:4;426:2;415:9;411:18;403:26;;439:87;523:1;512:9;508:17;499:6;439:87;:::i;:::-;279:254;;;;:::o;539:222::-;632:4;670:2;659:9;655:18;647:26;;683:71;751:1;740:9;736:17;727:6;683:71;:::i;:::-;539:222;;;;:::o;767:104::-;812:7;841:24;859:5;841:24;:::i;:::-;830:35;;767:104;;;:::o;877:126::-;914:7;954:42;947:5;943:54;932:65;;877:126;;;:::o;1009:77::-;1046:7;1075:5;1064:16;;1009:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "151400",
								"executionCost": "70817",
								"totalCost": "222217"
							},
							"external": {
								"_king()": "2500",
								"owner()": "2514",
								"prize()": "2451"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 563,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 563,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 563,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 215,
									"end": 225,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 199,
									"end": 204,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 199,
									"end": 204,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 226,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 199,
									"end": 226,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 199,
									"end": 226,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 199,
									"end": 226,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 226,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 260,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 235,
									"end": 261,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 235,
									"end": 261,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 235,
									"end": 261,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 235,
									"end": 261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 276,
									"end": 285,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 268,
									"end": 273,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 268,
									"end": 285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 268,
									"end": 285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 268,
									"end": 285,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 268,
									"end": 285,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 563,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 563,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 563,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 563,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fa698989812b206130fdc8ef30064ad411004b7f9331aeb21f9c118f6874b5dc64736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "29CC6D6F"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "E3AC5D26"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 352,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 352,
											"end": 357,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 339,
											"end": 348,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 339,
											"end": 357,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 339,
											"end": 380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 339,
											"end": 380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 375,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 375,
											"end": 380,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 380,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 375,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 375,
											"end": 380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 361,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 361,
											"end": 380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 361,
											"end": 371,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 361,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 361,
											"end": 380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 361,
											"end": 380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 339,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 339,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 331,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 331,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 331,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 388,
											"end": 392,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 392,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 388,
											"end": 392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 388,
											"end": 401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 388,
											"end": 401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 402,
											"end": 411,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 388,
											"end": 412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 412,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 388,
											"end": 412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 444,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 419,
											"end": 423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 419,
											"end": 445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 469,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 452,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 452,
											"end": 469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 481,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 519,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 550,
											"end": 554,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 554,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 550,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 543,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 543,
											"end": 554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 560,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 149,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 110,
											"end": 142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 136,
											"end": 141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 110,
											"end": 142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 110,
											"end": 142,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 110,
											"end": 142,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 110,
											"end": 142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 105,
											"end": 108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 98,
											"end": 143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 149,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 155,
											"end": 273,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 155,
											"end": 273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 242,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 242,
											"end": 266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 242,
											"end": 266,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 242,
											"end": 266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 237,
											"end": 240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 230,
											"end": 267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 155,
											"end": 273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 279,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 279,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 428,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 411,
											"end": 429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 403,
											"end": 429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 403,
											"end": 429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 439,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 523,
											"end": 524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 508,
											"end": 525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 505,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 439,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 439,
											"end": 526,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 439,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 279,
											"end": 533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 279,
											"end": 533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 279,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 533,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 539,
											"end": 761,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 539,
											"end": 761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 672,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 647,
											"end": 673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 683,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 749,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 736,
											"end": 753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 733,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 683,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 683,
											"end": 754,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 683,
											"end": 754,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 683,
											"end": 754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 539,
											"end": 761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 761,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 767,
											"end": 871,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 767,
											"end": 871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 812,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 841,
											"end": 865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 841,
											"end": 865,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 841,
											"end": 865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 830,
											"end": 865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 830,
											"end": 865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 767,
											"end": 871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 767,
											"end": 871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 767,
											"end": 871,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 877,
											"end": 1003,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 877,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 914,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 947,
											"end": 952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 943,
											"end": 997,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 932,
											"end": 997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 932,
											"end": 997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 1003,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 1003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 1003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 1003,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1009,
											"end": 1086,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1009,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1086,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1086,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_king()": "29cc6d6f",
							"owner()": "8da5cb5b",
							"prize()": "e3ac5d26"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_king\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernautKing.sol\":\"King\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernautKing.sol\":{\"keccak256\":\"0x0d2754f80c7948a5753f68689d54ddecff603a7e5a6926162aa0914183028857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f07e2b56d94a353c0040243a436c3c0815f6eee64ca7a3fbe42b5695bfffcb4\",\"dweb:/ipfs/QmSKHVGHcdtJFF7r5Dr6yEoZRLQAyB58osj52d1pnAaFkg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "ethernautKing.sol:King",
								"label": "king",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 5,
								"contract": "ethernautKing.sol:King",
								"label": "prize",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "ethernautKing.sol:King",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ethernautKing": {
					"abi": [
						{
							"inputs": [],
							"name": "solve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernautKing.sol\":615:909  contract ethernautKing {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernautKing.sol\":615:909  contract ethernautKing {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x890d6908\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"ethernautKing.sol\":890:898  revert() */\n      0x00\n      dup1\n      revert\n        /* \"ethernautKing.sol\":615:909  contract ethernautKing {\r... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernautKing.sol\":647:844  function solve() external payable {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n    tag_7:\n        /* \"ethernautKing.sol\":692:720  address payable contractAddr */\n      0x00\n        /* \"ethernautKing.sol\":731:773  0x557d634258B353BAC0F7d17d807DAAE74851F638 */\n      0x557d634258b353bac0f7d17d807daae74851f638\n        /* \"ethernautKing.sol\":692:774  address payable contractAddr = payable(0x557d634258B353BAC0F7d17d807DAAE74851F638) */\n      swap1\n      pop\n        /* \"ethernautKing.sol\":785:797  contractAddr */\n      dup1\n        /* \"ethernautKing.sol\":785:806  contractAddr.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":785:817  contractAddr.transfer(msg.value) */\n      0x08fc\n        /* \"ethernautKing.sol\":807:816  msg.value */\n      callvalue\n        /* \"ethernautKing.sol\":785:817  contractAddr.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_10\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_10:\n      pop\n        /* \"ethernautKing.sol\":681:844  {\r... */\n      pop\n        /* \"ethernautKing.sol\":647:844  function solve() external payable {\r... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220667331cfa55d4f3d3f3987a846456fef31ed98bed2ffcc716a1fbcf8851bccc964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060cd8061001f6000396000f3fe608060405260043610601f5760003560e01c8063890d690814602d576028565b36602857600080fd5b600080fd5b60336035565b005b600073557d634258b353bac0f7d17d807daae74851f63890508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156093573d6000803e3d6000fd5b505056fea2646970667358221220667331cfa55d4f3d3f3987a846456fef31ed98bed2ffcc716a1fbcf8851bccc964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH1 0x2D JUMPI PUSH1 0x28 JUMP JUMPDEST CALLDATASIZE PUSH1 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0x557D634258B353BAC0F7D17D807DAAE74851F638 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH1 0x93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x7331CFA55D4F3D EXTCODEHASH CODECOPY DUP8 0xA8 CHAINID GASLIMIT PUSH16 0xEF31ED98BED2FFCC716A1FBCF8851BCC 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "615:294:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_102": {
									"entryPoint": null,
									"id": 102,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@solve_95": {
									"entryPoint": 53,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601f5760003560e01c8063890d690814602d576028565b36602857600080fd5b600080fd5b60336035565b005b600073557d634258b353bac0f7d17d807daae74851f63890508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156093573d6000803e3d6000fd5b505056fea2646970667358221220667331cfa55d4f3d3f3987a846456fef31ed98bed2ffcc716a1fbcf8851bccc964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH1 0x2D JUMPI PUSH1 0x28 JUMP JUMPDEST CALLDATASIZE PUSH1 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0x557D634258B353BAC0F7D17D807DAAE74851F638 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH1 0x93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x7331CFA55D4F3D EXTCODEHASH CODECOPY DUP8 0xA8 CHAINID GASLIMIT PUSH16 0xEF31ED98BED2FFCC716A1FBCF8851BCC 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "615:294:0:-:0;;;;;;;;;;;;;;;;;;;;;;;890:8;;;615:294;;;;647:197;;;:::i;:::-;;;692:28;731:42;692:82;;785:12;:21;;:32;807:9;785:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:163;647:197::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "41000",
								"executionCost": "93",
								"totalCost": "41093"
							},
							"external": {
								"solve()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 615,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 615,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 615,
									"end": 909,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 615,
									"end": 909,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 615,
									"end": 909,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 615,
									"end": 909,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 615,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 615,
									"end": 909,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 615,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 615,
									"end": 909,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 615,
									"end": 909,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 615,
									"end": 909,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 615,
									"end": 909,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 615,
									"end": 909,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 615,
									"end": 909,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 615,
									"end": 909,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 615,
									"end": 909,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 615,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 615,
									"end": 909,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 615,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 615,
									"end": 909,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220667331cfa55d4f3d3f3987a846456fef31ed98bed2ffcc716a1fbcf8851bccc964736f6c63430008070033",
									".code": [
										{
											"begin": 615,
											"end": 909,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "PUSH",
											"source": 0,
											"value": "890D6908"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 890,
											"end": 898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 890,
											"end": 898,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 909,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 647,
											"end": 844,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 647,
											"end": 844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 647,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 647,
											"end": 844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 647,
											"end": 844,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 647,
											"end": 844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 844,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 647,
											"end": 844,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 647,
											"end": 844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 692,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "557D634258B353BAC0F7D17D807DAAE74851F638"
										},
										{
											"begin": 692,
											"end": 774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 785,
											"end": 806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 785,
											"end": 817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 681,
											"end": 844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 647,
											"end": 844,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"solve()": "890d6908"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"solve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernautKing.sol\":\"ethernautKing\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernautKing.sol\":{\"keccak256\":\"0x0d2754f80c7948a5753f68689d54ddecff603a7e5a6926162aa0914183028857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f07e2b56d94a353c0040243a436c3c0815f6eee64ca7a3fbe42b5695bfffcb4\",\"dweb:/ipfs/QmSKHVGHcdtJFF7r5Dr6yEoZRLQAyB58osj52d1pnAaFkg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> ethernautKing.sol:10:3:\n   |\n10 |   constructor() public payable {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 291,
					"file": "ethernautKing.sol",
					"start": 163
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ethernautKing.sol": {
				"ast": {
					"absolutePath": "ethernautKing.sol",
					"exportedSymbols": {
						"King": [
							77
						],
						"ethernautKing": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "King",
							"nameLocation": "69:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "king",
									"nameLocation": "97:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "81:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "81:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "e3ac5d26",
									"id": 5,
									"mutability": "mutable",
									"name": "prize",
									"nameLocation": "118:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "106:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "106:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 7,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "151:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "128:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "128:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "192:99:0",
										"statements": [
											{
												"expression": {
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "199:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 13,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "215:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "215:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "207:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 11,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "207:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "207:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "199:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "199:27:0"
											},
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 18,
														"name": "king",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "235:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "250:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "250:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "242:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 19,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "242:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "242:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "235:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "235:26:0"
											},
											{
												"expression": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 26,
														"name": "prize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "268:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 27,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "276:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "276:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "268:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "268:17:0"
											}
										]
									},
									"id": 32,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:0:0"
									},
									"scope": 77,
									"src": "163:128:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "324:151:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 36,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "339:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "339:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 38,
																	"name": "prize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "352:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "339:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 40,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "361:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "361:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 42,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "375:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "361:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "339:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "331:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "331:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "331:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 50,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "402:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "402:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 47,
															"name": "king",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "388:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "388:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "388:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "388:24:0"
											},
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 54,
														"name": "king",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "419:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 57,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "434:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "434:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "426:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 55,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "426:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "426:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "419:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "419:26:0"
											},
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 62,
														"name": "prize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "452:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 63,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "460:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "460:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "452:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "452:17:0"
											}
										]
									},
									"id": 68,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:0:0"
									},
									"scope": 77,
									"src": "297:178:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "536:24:0",
										"statements": [
											{
												"expression": {
													"id": 73,
													"name": "king",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "550:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 72,
												"id": 74,
												"nodeType": "Return",
												"src": "543:11:0"
											}
										]
									},
									"functionSelector": "29cc6d6f",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_king",
									"nameLocation": "490:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:2:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "519:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:17:0"
									},
									"scope": 77,
									"src": "481:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 104,
							"src": "60:503:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103
							],
							"name": "ethernautKing",
							"nameLocation": "624:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "681:163:0",
										"statements": [
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"mutability": "mutable",
														"name": "contractAddr",
														"nameLocation": "708:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "692:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 80,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "692:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307835353764363334323538423335334241433046376431376438303744414145373438353146363338",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "731:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x557d634258B353BAC0F7d17d807DAAE74851F638"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "723:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 82,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "723:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "723:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "692:82:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 90,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "807:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "807:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 87,
															"name": "contractAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "785:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "785:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "785:32:0"
											}
										]
									},
									"functionSelector": "890d6908",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solve",
									"nameLocation": "656:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "661:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:0:0"
									},
									"scope": 103,
									"src": "647:197:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "879:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "890:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "890:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "890:8:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:0:0"
									},
									"scope": 103,
									"src": "852:54:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 104,
							"src": "615:294:0",
							"usedErrors": []
						}
					],
					"src": "33:878:0"
				},
				"id": 0
			}
		}
	}
}