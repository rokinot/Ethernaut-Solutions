{
	"id": "915b9728d66877dcc288af4b174afb2f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "// SPDX-License-Identifier: CC0-1.0\r\npragma solidity ^0.8.7;\r\n\r\n//import \"./test2.sol\";\r\n//0xB9e2A2008d3A58adD8CC1cE9c15BF6D4bB9C6d72\r\n\r\ncontract contracts {\r\n    struct heavyNums {\r\n        uint256 heavyNum;\r\n    }\r\n\r\n    mapping(uint256 => heavyNums) wow;\r\n\r\n    error Test(); \r\n\r\n    constructor () {\r\n        wow[0].heavyNum = 2;\r\n    }\r\n\r\n    function test(uint256 aux) public returns (heavyNums memory) {\r\n        wow[aux].heavyNum = 1;\r\n        heavyNums storage bruh = wow[aux];\r\n        bruh.heavyNum++;\r\n        heavyNums memory aux2 = bruh;\r\n        return aux2;\r\n    }\r\n\r\n}\r\n\r\n//1658001481\r\n//4294967295"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"contracts": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "Test",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "aux",
									"type": "uint256"
								}
							],
							"name": "test",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "heavyNum",
											"type": "uint256"
										}
									],
									"internalType": "struct contracts.heavyNums",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":137:585  contract contracts {\r... */\n  mstore(0x40, 0x80)\n    /* \"test.sol\":287:340  constructor () {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"test.sol\":313:316  wow */\n  0x00\n    /* \"test.sol\":313:319  wow[0] */\n  dup1\n  dup1\n  mstore\n  0x20\n  mstore\n    /* \"test.sol\":331:332  2 */\n  0x02\n    /* \"test.sol\":313:319  wow[0] */\n  0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5\n    /* \"test.sol\":313:332  wow[0].heavyNum = 2 */\n  sstore\n    /* \"test.sol\":137:585  contract contracts {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":137:585  contract contracts {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x29e99f07\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test.sol\":348:580  function test(uint256 aux) public returns (heavyNums memory) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":411:424   */\n      swap1\n      mload\n        /* \"#utility.yul\":393:425   */\n      dup2\n      mstore\n        /* \"#utility.yul\":381:383   */\n      0x20\n        /* \"#utility.yul\":366:384   */\n      add\n        /* \"test.sol\":348:580  function test(uint256 aux) public returns (heavyNums memory) {\r... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"test.sol\":420:423  wow */\n      0x00\n        /* \"test.sol\":420:428  wow[aux] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"test.sol\":440:441  1 */\n      0x01\n        /* \"test.sol\":420:441  wow[aux].heavyNum = 1 */\n      dup1\n      dup3\n      sstore\n        /* \"test.sol\":420:428  wow[aux] */\n      swap1\n      swap2\n      dup3\n      swap1\n        /* \"test.sol\":496:511  bruh.heavyNum++ */\n      tag_13\n        /* \"test.sol\":440:441  1 */\n      dup4\n        /* \"test.sol\":496:511  bruh.heavyNum++ */\n      tag_14\n      jump\t// in\n    tag_13:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"test.sol\":522:550  heavyNums memory aux2 = bruh */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      swap1\n      sload\n      dup2\n      mstore\n      swap3\n        /* \"test.sol\":348:580  function test(uint256 aux) public returns (heavyNums memory) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_6:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_17\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_17:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":436:668   */\n    tag_14:\n        /* \"#utility.yul\":475:478   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":496:513   */\n      dup3\n      eq\n        /* \"#utility.yul\":493:633   */\n      iszero\n      tag_20\n      jumpi\n        /* \"#utility.yul\":555:565   */\n      0x4e487b71\n        /* \"#utility.yul\":550:553   */\n      0xe0\n        /* \"#utility.yul\":546:566   */\n      shl\n        /* \"#utility.yul\":543:544   */\n      0x00\n        /* \"#utility.yul\":536:567   */\n      mstore\n        /* \"#utility.yul\":590:594   */\n      0x11\n        /* \"#utility.yul\":587:588   */\n      0x04\n        /* \"#utility.yul\":580:595   */\n      mstore\n        /* \"#utility.yul\":618:622   */\n      0x24\n        /* \"#utility.yul\":615:616   */\n      0x00\n        /* \"#utility.yul\":608:623   */\n      revert\n        /* \"#utility.yul\":493:633   */\n    tag_20:\n      pop\n        /* \"#utility.yul\":660:661   */\n      0x01\n        /* \"#utility.yul\":649:662   */\n      add\n      swap1\n        /* \"#utility.yul\":436:668   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209416e5ef5e87e7e55e5d130d73205f9bb1b2fb8b8337f54670a5e013c3f651c564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080805260205260027fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb55561010c8061004c6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806329e99f0714602d575b600080fd5b603c60383660046096565b604f565b6040519051815260200160405180910390f35b6040805160208101909152600081526000828152602081905260408120600180825590918290607c8360ae565b909155505060408051602081019091529054815292915050565b60006020828403121560a757600080fd5b5035919050565b600060001982141560cf57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212209416e5ef5e87e7e55e5d130d73205f9bb1b2fb8b8337f54670a5e013c3f651c564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x2 PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 SSTORE PUSH2 0x10C DUP1 PUSH2 0x4C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29E99F07 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x96 JUMP JUMPDEST PUSH1 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP1 DUP3 SSTORE SWAP1 SWAP2 DUP3 SWAP1 PUSH1 0x7C DUP4 PUSH1 0xAE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH1 0xCF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 AND 0xE5 0xEF 0x5E DUP8 0xE7 0xE5 0x5E 0x5D SGT 0xD PUSH20 0x205F9BB1B2FB8B8337F54670A5E013C3F651C564 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "137:448:0:-:0;;;287:53;;;;;;;;;-1:-1:-1;313:3:0;:6;;;;;331:1;313:6;:19;137:448;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@test_57": {
									"entryPoint": 79,
									"id": 57,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_heavyNums_$4_memory_ptr__to_t_struct$_heavyNums_$4_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:670:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "348:83:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "358:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "370:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "381:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "366:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "358:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "400:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "417:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "411:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:13:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "393:32:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_heavyNums_$4_memory_ptr__to_t_struct$_heavyNums_$4_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "317:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "328:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "339:4:1",
														"type": ""
													}
												],
												"src": "199:232:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "483:185:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "543:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "550:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "555:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "546:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "546:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "536:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "536:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "536:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "587:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "590:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "580:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "580:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "580:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "618:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "608:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "608:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "608:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "499:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "510:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "496:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:17:1"
															},
															"nodeType": "YulIf",
															"src": "493:140:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "642:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "653:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "660:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "649:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "642:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "465:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "475:3:1",
														"type": ""
													}
												],
												"src": "436:232:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_heavyNums_$4_memory_ptr__to_t_struct$_heavyNums_$4_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, mload(value0))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c806329e99f0714602d575b600080fd5b603c60383660046096565b604f565b6040519051815260200160405180910390f35b6040805160208101909152600081526000828152602081905260408120600180825590918290607c8360ae565b909155505060408051602081019091529054815292915050565b60006020828403121560a757600080fd5b5035919050565b600060001982141560cf57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212209416e5ef5e87e7e55e5d130d73205f9bb1b2fb8b8337f54670a5e013c3f651c564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29E99F07 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x96 JUMP JUMPDEST PUSH1 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP1 DUP3 SSTORE SWAP1 SWAP2 DUP3 SWAP1 PUSH1 0x7C DUP4 PUSH1 0xAE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH1 0xCF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 AND 0xE5 0xEF 0x5E DUP8 0xE7 0xE5 0x5E 0x5D SGT 0xD PUSH20 0x205F9BB1B2FB8B8337F54670A5E013C3F651C564 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "137:448:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;348:232;;;;;;:::i;:::-;;:::i;:::-;;;411:13:1;;393:32;;381:2;366:18;348:232:0;;;;;;;;-1:-1:-1;;;;;;;;;;;;420:3:0;:8;;;;;;;;;;440:1;420:21;;;:8;;;;496:15;440:1;496:15;:::i;:::-;;;;-1:-1:-1;;522:28:0;;;;;;;;;;;;;;348:232;-1:-1:-1;;348:232:0:o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;436:232::-;475:3;-1:-1:-1;;496:17:1;;493:140;;;555:10;550:3;546:20;543:1;536:31;590:4;587:1;580:15;618:4;615:1;608:15;493:140;-1:-1:-1;660:1:1;649:13;;436:232::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "53600",
								"executionCost": "22229",
								"totalCost": "75829"
							},
							"external": {
								"test(uint256)": "29708"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 137,
									"end": 585,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 137,
									"end": 585,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 137,
									"end": 585,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 287,
									"end": 340,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 287,
									"end": 340,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 287,
									"end": 340,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 287,
									"end": 340,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 287,
									"end": 340,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 287,
									"end": 340,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 340,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 287,
									"end": 340,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 287,
									"end": 340,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 287,
									"end": 340,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 313,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 313,
									"end": 319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 313,
									"end": 319,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 313,
									"end": 319,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 313,
									"end": 319,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 331,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 313,
									"end": 319,
									"name": "PUSH",
									"source": 0,
									"value": "AD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
								},
								{
									"begin": 313,
									"end": 332,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 137,
									"end": 585,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 585,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 137,
									"end": 585,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 585,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 137,
									"end": 585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 585,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209416e5ef5e87e7e55e5d130d73205f9bb1b2fb8b8337f54670a5e013c3f651c564736f6c63430008070033",
									".code": [
										{
											"begin": 137,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "29E99F07"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 580,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 411,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 411,
											"end": 424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 381,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 348,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 580,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 580,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 420,
											"end": 423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 428,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 420,
											"end": 441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 441,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 496,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 496,
											"end": 511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 496,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 496,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 511,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 522,
											"end": 550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 550,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 522,
											"end": 550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 522,
											"end": 550,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 348,
											"end": 580,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 436,
											"end": 668,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 436,
											"end": 668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 475,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 496,
											"end": 513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 496,
											"end": 513,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 493,
											"end": 633,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 493,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 493,
											"end": 633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 565,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 550,
											"end": 553,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 546,
											"end": 566,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 590,
											"end": 594,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 587,
											"end": 588,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 580,
											"end": 595,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 618,
											"end": 622,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 615,
											"end": 616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 493,
											"end": 633,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 493,
											"end": 633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 649,
											"end": 662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 649,
											"end": 662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 436,
											"end": 668,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"test(uint256)": "29e99f07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Test\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aux\",\"type\":\"uint256\"}],\"name\":\"test\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"heavyNum\",\"type\":\"uint256\"}],\"internalType\":\"struct contracts.heavyNums\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"contracts\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x0b866a458ffb0dc7be63c88b964535b8de5f22e074f25a495e2f8954d160bdf2\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://5410b83386b94d6932c7a9cafbab3e58421e429065713d4c29b904461fc09efd\",\"dweb:/ipfs/QmWhVPofMLSn1HwPHAkDPGadf37hGWU3oNHodkk6ahc6sA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "test.sol:contracts",
								"label": "wow",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(heavyNums)4_storage)"
							}
						],
						"types": {
							"t_mapping(t_uint256,t_struct(heavyNums)4_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct contracts.heavyNums)",
								"numberOfBytes": "32",
								"value": "t_struct(heavyNums)4_storage"
							},
							"t_struct(heavyNums)4_storage": {
								"encoding": "inplace",
								"label": "struct contracts.heavyNums",
								"members": [
									{
										"astId": 3,
										"contract": "test.sol:contracts",
										"label": "heavyNum",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"contracts": [
							58
						]
					},
					"id": 59,
					"license": "CC0-1.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 58,
							"linearizedBaseContracts": [
								58
							],
							"name": "contracts",
							"nameLocation": "146:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "contracts.heavyNums",
									"id": 4,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "heavyNum",
											"nameLocation": "199:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 4,
											"src": "191:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "191:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "heavyNums",
									"nameLocation": "170:9:0",
									"nodeType": "StructDefinition",
									"scope": 58,
									"src": "163:52:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "wow",
									"nameLocation": "253:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 58,
									"src": "223:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_heavyNums_$4_storage_$",
										"typeString": "mapping(uint256 => struct contracts.heavyNums)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 5,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "231:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "223:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_heavyNums_$4_storage_$",
											"typeString": "mapping(uint256 => struct contracts.heavyNums)"
										},
										"valueType": {
											"id": 7,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 6,
												"name": "heavyNums",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4,
												"src": "242:9:0"
											},
											"referencedDeclaration": 4,
											"src": "242:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_heavyNums_$4_storage_ptr",
												"typeString": "struct contracts.heavyNums"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"id": 11,
									"name": "Test",
									"nameLocation": "271:4:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "275:2:0"
									},
									"src": "265:13:0"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "302:38:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 14,
																"name": "wow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "313:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_heavyNums_$4_storage_$",
																	"typeString": "mapping(uint256 => struct contracts.heavyNums storage ref)"
																}
															},
															"id": 16,
															"indexExpression": {
																"hexValue": "30",
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "317:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "313:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_heavyNums_$4_storage",
																"typeString": "struct contracts.heavyNums storage ref"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "heavyNum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "313:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "331:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "313:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "313:19:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:0:0"
									},
									"scope": 58,
									"src": "287:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "409:171:0",
										"statements": [
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 30,
																"name": "wow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "420:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_heavyNums_$4_storage_$",
																	"typeString": "mapping(uint256 => struct contracts.heavyNums storage ref)"
																}
															},
															"id": 32,
															"indexExpression": {
																"id": 31,
																"name": "aux",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "424:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "420:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_heavyNums_$4_storage",
																"typeString": "struct contracts.heavyNums storage ref"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "heavyNum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "420:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "440:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "420:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "420:21:0"
											},
											{
												"assignments": [
													39
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "bruh",
														"nameLocation": "470:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 56,
														"src": "452:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_heavyNums_$4_storage_ptr",
															"typeString": "struct contracts.heavyNums"
														},
														"typeName": {
															"id": 38,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 37,
																"name": "heavyNums",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4,
																"src": "452:9:0"
															},
															"referencedDeclaration": 4,
															"src": "452:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_heavyNums_$4_storage_ptr",
																"typeString": "struct contracts.heavyNums"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"baseExpression": {
														"id": 40,
														"name": "wow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "477:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_heavyNums_$4_storage_$",
															"typeString": "mapping(uint256 => struct contracts.heavyNums storage ref)"
														}
													},
													"id": 42,
													"indexExpression": {
														"id": 41,
														"name": "aux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "481:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "477:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_heavyNums_$4_storage",
														"typeString": "struct contracts.heavyNums storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "452:33:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "496:15:0",
													"subExpression": {
														"expression": {
															"id": 44,
															"name": "bruh",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "496:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_heavyNums_$4_storage_ptr",
																"typeString": "struct contracts.heavyNums storage pointer"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "heavyNum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "496:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "496:15:0"
											},
											{
												"assignments": [
													51
												],
												"declarations": [
													{
														"constant": false,
														"id": 51,
														"mutability": "mutable",
														"name": "aux2",
														"nameLocation": "539:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 56,
														"src": "522:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_heavyNums_$4_memory_ptr",
															"typeString": "struct contracts.heavyNums"
														},
														"typeName": {
															"id": 50,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 49,
																"name": "heavyNums",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4,
																"src": "522:9:0"
															},
															"referencedDeclaration": 4,
															"src": "522:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_heavyNums_$4_storage_ptr",
																"typeString": "struct contracts.heavyNums"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"id": 52,
													"name": "bruh",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 39,
													"src": "546:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_heavyNums_$4_storage_ptr",
														"typeString": "struct contracts.heavyNums storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "522:28:0"
											},
											{
												"expression": {
													"id": 54,
													"name": "aux2",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 51,
													"src": "568:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_heavyNums_$4_memory_ptr",
														"typeString": "struct contracts.heavyNums memory"
													}
												},
												"functionReturnParameters": 29,
												"id": 55,
												"nodeType": "Return",
												"src": "561:11:0"
											}
										]
									},
									"functionSelector": "29e99f07",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "357:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "370:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "362:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:13:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "391:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_heavyNums_$4_memory_ptr",
													"typeString": "struct contracts.heavyNums"
												},
												"typeName": {
													"id": 27,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 26,
														"name": "heavyNums",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4,
														"src": "391:9:0"
													},
													"referencedDeclaration": 4,
													"src": "391:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_heavyNums_$4_storage_ptr",
														"typeString": "struct contracts.heavyNums"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:18:0"
									},
									"scope": 58,
									"src": "348:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 59,
							"src": "137:448:0",
							"usedErrors": [
								11
							]
						}
					],
					"src": "37:578:0"
				},
				"id": 0
			}
		}
	}
}