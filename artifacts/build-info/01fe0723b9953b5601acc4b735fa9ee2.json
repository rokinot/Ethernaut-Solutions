{
	"id": "01fe0723b9953b5601acc4b735fa9ee2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"ethernaultVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\ncontract Vault {\r\n  bool public locked;\r\n  bytes32 private password;\r\n\r\n  constructor(bytes32 _password) public {\r\n    locked = true;\r\n    password = _password;\r\n  }\r\n\r\n  function unlock(bytes32 _password) public {\r\n    if (password == _password) {\r\n      locked = false;\r\n    }\r\n  }\r\n}\r\n\r\ncontract ethernaultVault {\r\n\r\n    function solve() external {\r\n        address contractAddr = 0x6E407Af877faaC50001D7b2e1028b1a2e233dd52;\r\n        Vault vault = Vault(contractAddr);\r\n        vault.unlock(bytes32(0x412076657279207374726f6e67207365637265742070617373776f7264203a29));\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ethernaultVault.sol": {
				"Vault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_password",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "locked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_password",
									"type": "bytes32"
								}
							],
							"name": "unlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ethernaultVault.sol\":60:346  contract Vault {\r... */\n  mstore(0x40, 0x80)\n    /* \"ethernaultVault.sol\":134:225  constructor(bytes32 _password) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"ethernaultVault.sol\":134:225  constructor(bytes32 _password) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"ethernaultVault.sol\":134:225  constructor(bytes32 _password) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"ethernaultVault.sol\":188:192  true */\n  0x01\n    /* \"ethernaultVault.sol\":179:185  locked */\n  0x00\n  dup1\n    /* \"ethernaultVault.sol\":179:192  locked = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ethernaultVault.sol\":210:219  _password */\n  dup1\n    /* \"ethernaultVault.sol\":199:207  password */\n  0x01\n    /* \"ethernaultVault.sol\":199:219  password = _password */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ethernaultVault.sol\":134:225  constructor(bytes32 _password) public {\r... */\n  pop\n    /* \"ethernaultVault.sol\":60:346  contract Vault {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernaultVault.sol\":60:346  contract Vault {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ethernaultVault.sol\":60:346  contract Vault {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcf309012\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xec9b5b3a\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernaultVault.sol\":80:98  bool public locked */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernaultVault.sol\":231:343  function unlock(bytes32 _password) public {\r... */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"ethernaultVault.sol\":231:343  function unlock(bytes32 _password) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"ethernaultVault.sol\":80:98  bool public locked */\n    tag_6:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ethernaultVault.sol\":231:343  function unlock(bytes32 _password) public {\r... */\n    tag_9:\n        /* \"ethernaultVault.sol\":296:305  _password */\n      dup1\n        /* \"ethernaultVault.sol\":284:292  password */\n      sload(0x01)\n        /* \"ethernaultVault.sol\":284:305  password == _password */\n      eq\n        /* \"ethernaultVault.sol\":280:338  if (password == _password) {\r... */\n      iszero\n      tag_11\n      jumpi\n        /* \"ethernaultVault.sol\":325:330  false */\n      0x00\n        /* \"ethernaultVault.sol\":316:322  locked */\n      dup1\n      0x00\n        /* \"ethernaultVault.sol\":316:330  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ethernaultVault.sol\":280:338  if (password == _password) {\r... */\n    tag_11:\n        /* \"ethernaultVault.sol\":231:343  function unlock(bytes32 _password) public {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205690836abead5842d6ed2d3d82d9d1763f1165e9bd90459a804bc1178a2baf7164736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516101653803806101658339818101604052602081101561003357600080fd5b810190808051906020019092919050505060016000806101000a81548160ff021916908315150217905550806001819055505060f1806100746000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063cf309012146037578063ec9b5b3a146057575b600080fd5b603d6082565b604051808215151515815260200191505060405180910390f35b608060048036036020811015606b57600080fd5b81019080803590602001909291905050506094565b005b6000809054906101000a900460ff1681565b80600154141560b85760008060006101000a81548160ff0219169083151502179055505b5056fea26469706673582212205690836abead5842d6ed2d3d82d9d1763f1165e9bd90459a804bc1178a2baf7164736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x165 CODESIZE SUB DUP1 PUSH2 0x165 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH1 0xF1 DUP1 PUSH2 0x74 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCF309012 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xEC9B5B3A EQ PUSH1 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x80 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x94 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH1 0xB8 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP SWAP1 DUP4 PUSH11 0xBEAD5842D6ED2D3D82D9D1 PUSH23 0x3F1165E9BD90459A804BC1178A2BAF7164736F6C634300 MOD STOP STOP CALLER ",
							"sourceMap": "60:286:0:-:0;;;134:91;8:9:-1;5:2;;;30:1;27;20:12;5:2;134:91:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;134:91:0;;;;;;;;;;;;;;;;188:4;179:6;;:13;;;;;;;;;;;;;;;;;;210:9;199:8;:20;;;;134:91;60:286;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c8063cf309012146037578063ec9b5b3a146057575b600080fd5b603d6082565b604051808215151515815260200191505060405180910390f35b608060048036036020811015606b57600080fd5b81019080803590602001909291905050506094565b005b6000809054906101000a900460ff1681565b80600154141560b85760008060006101000a81548160ff0219169083151502179055505b5056fea26469706673582212205690836abead5842d6ed2d3d82d9d1763f1165e9bd90459a804bc1178a2baf7164736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCF309012 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xEC9B5B3A EQ PUSH1 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x80 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x94 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH1 0xB8 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP SWAP1 DUP4 PUSH11 0xBEAD5842D6ED2D3D82D9D1 PUSH23 0x3F1165E9BD90459A804BC1178A2BAF7164736F6C634300 MOD STOP STOP CALLER ",
							"sourceMap": "60:286:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:286:0;;;;;;;;;;;;;;;;;;;;;;;;80:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;231:112;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;231:112:0;;;;;;;;;;;;;;;;;:::i;:::-;;80:18;;;;;;;;;;;;;:::o;231:112::-;296:9;284:8;;:21;280:58;;;325:5;316:6;;:14;;;;;;;;;;;;;;;;;;280:58;231:112;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "48200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"locked()": "1031",
								"unlock(bytes32)": "21921"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 346,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 60,
									"end": 346,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 60,
									"end": 346,
									"name": "MSTORE"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "POP"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "MLOAD"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "PUSHSIZE"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "CODESIZE"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "SUB"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "DUP1"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "PUSHSIZE"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "DUP4"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "CODECOPY"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "DUP2"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "DUP2"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "ADD"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "DUP2"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "ADD"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "SWAP1"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "DUP1"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "DUP1"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "MLOAD"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "SWAP1"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "ADD"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "SWAP1"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "SWAP3"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "SWAP2"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "SWAP1"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "POP"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "POP"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "POP"
								},
								{
									"begin": 188,
									"end": 192,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP1"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "EXP"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "DUP2"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "SLOAD"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "DUP2"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "MUL"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "NOT"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "AND"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "SWAP1"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "DUP4"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "ISZERO"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "ISZERO"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "MUL"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "OR"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "SWAP1"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "SSTORE"
								},
								{
									"begin": 179,
									"end": 192,
									"name": "POP"
								},
								{
									"begin": 210,
									"end": 219,
									"name": "DUP1"
								},
								{
									"begin": 199,
									"end": 207,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 199,
									"end": 219,
									"name": "DUP2"
								},
								{
									"begin": 199,
									"end": 219,
									"name": "SWAP1"
								},
								{
									"begin": 199,
									"end": 219,
									"name": "SSTORE"
								},
								{
									"begin": 199,
									"end": 219,
									"name": "POP"
								},
								{
									"begin": 134,
									"end": 225,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 346,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 346,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 346,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 346,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 346,
									"name": "CODECOPY"
								},
								{
									"begin": 60,
									"end": 346,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 346,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205690836abead5842d6ed2d3d82d9d1763f1165e9bd90459a804bc1178a2baf7164736f6c63430006000033",
									".code": [
										{
											"begin": 60,
											"end": 346,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "LT"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "SHR"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "PUSH",
											"value": "CF309012"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "PUSH",
											"value": "EC9B5B3A"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 346,
											"name": "REVERT"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "JUMPDEST"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "JUMPDEST"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "DUP1"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "ISZERO"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "ISZERO"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "ISZERO"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "ISZERO"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "DUP2"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "MSTORE"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "SWAP2"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "POP"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "POP"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "DUP1"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "SWAP2"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "SUB"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "SWAP1"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "RETURN"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "JUMPDEST"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "SWAP1"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "SWAP1"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "SWAP1"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "SWAP3"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "SWAP2"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "SWAP1"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "JUMPDEST"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "STOP"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "JUMPDEST"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "DUP1"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "SWAP1"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "SLOAD"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "SWAP1"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "EXP"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "SWAP1"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "DIV"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "AND"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "DUP2"
										},
										{
											"begin": 80,
											"end": 98,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "JUMPDEST"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP1"
										},
										{
											"begin": 284,
											"end": 292,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 284,
											"end": 292,
											"name": "SLOAD"
										},
										{
											"begin": 284,
											"end": 305,
											"name": "EQ"
										},
										{
											"begin": 280,
											"end": 338,
											"name": "ISZERO"
										},
										{
											"begin": 280,
											"end": 338,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 280,
											"end": 338,
											"name": "JUMPI"
										},
										{
											"begin": 325,
											"end": 330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 316,
											"end": 322,
											"name": "DUP1"
										},
										{
											"begin": 316,
											"end": 322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "EXP"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "DUP2"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "SLOAD"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "DUP2"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "MUL"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "NOT"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "AND"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "SWAP1"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "DUP4"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "ISZERO"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "ISZERO"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "MUL"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "OR"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "SWAP1"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "SSTORE"
										},
										{
											"begin": 316,
											"end": 330,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 338,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 280,
											"end": 338,
											"name": "JUMPDEST"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 343,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"locked()": "cf309012",
							"unlock(bytes32)": "ec9b5b3a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_password\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_password\",\"type\":\"bytes32\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ethernaultVault.sol\":\"Vault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaultVault.sol\":{\"keccak256\":\"0xd9113eff9f3b673e76de9709af00e29dd257cb3896f494b59e52f48ec05b7573\",\"urls\":[\"bzz-raw://8f9e2be4b7b229a11f1253b5534864f4150125fc4d8316c1d7addc56e9233557\",\"dweb:/ipfs/QmWn8twweTzDfyv9NVjEYbNUar7XN8yvAcjQ7t3Er7z7SA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "ethernaultVault.sol:Vault",
								"label": "locked",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 5,
								"contract": "ethernaultVault.sol:Vault",
								"label": "password",
								"offset": 0,
								"slot": "1",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"ethernaultVault": {
					"abi": [
						{
							"inputs": [],
							"name": "solve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ethernaultVault.sol\":350:641  contract ethernaultVault {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"ethernaultVault.sol\":350:641  contract ethernaultVault {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernaultVault.sol\":350:641  contract ethernaultVault {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ethernaultVault.sol\":350:641  contract ethernaultVault {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x890d6908\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernaultVault.sol\":384:638  function solve() external {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"ethernaultVault.sol\":421:441  address contractAddr */\n      0x00\n        /* \"ethernaultVault.sol\":444:486  0x6E407Af877faaC50001D7b2e1028b1a2e233dd52 */\n      0x6e407af877faac50001d7b2e1028b1a2e233dd52\n        /* \"ethernaultVault.sol\":421:486  address contractAddr = 0x6E407Af877faaC50001D7b2e1028b1a2e233dd52 */\n      swap1\n      pop\n        /* \"ethernaultVault.sol\":497:508  Vault vault */\n      0x00\n        /* \"ethernaultVault.sol\":517:529  contractAddr */\n      dup2\n        /* \"ethernaultVault.sol\":497:530  Vault vault = Vault(contractAddr) */\n      swap1\n      pop\n        /* \"ethernaultVault.sol\":541:546  vault */\n      dup1\n        /* \"ethernaultVault.sol\":541:553  vault.unlock */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xec9b5b3a\n        /* \"ethernaultVault.sol\":562:628  0x412076657279207374726f6e67207365637265742070617373776f7264203a29 */\n      0x412076657279207374726f6e67207365637265742070617373776f7264203a29\n        /* \"ethernaultVault.sol\":554:629  bytes32(0x412076657279207374726f6e67207365637265742070617373776f7264203a29) */\n      0x00\n      shl\n        /* \"ethernaultVault.sol\":541:630  vault.unlock(bytes32(0x412076657279207374726f6e67207365637265742070617373776f7264203a29)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"ethernaultVault.sol\":541:630  vault.unlock(bytes32(0x412076657279207374726f6e67207365637265742070617373776f7264203a29)) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"ethernaultVault.sol\":541:630  vault.unlock(bytes32(0x412076657279207374726f6e67207365637265742070617373776f7264203a29)) */\n      pop\n      pop\n      pop\n      pop\n        /* \"ethernaultVault.sol\":384:638  function solve() external {\r... */\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220014ec5cc6fa75078190f3e3ca2698703309a5c21a18924637eab54545a02063164736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610119806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063890d690814602d575b600080fd5b60336035565b005b6000736e407af877faac50001d7b2e1028b1a2e233dd52905060008190508073ffffffffffffffffffffffffffffffffffffffff1663ec9b5b3a7f412076657279207374726f6e67207365637265742070617373776f7264203a2960001b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801560c857600080fd5b505af115801560db573d6000803e3d6000fd5b50505050505056fea2646970667358221220014ec5cc6fa75078190f3e3ca2698703309a5c21a18924637eab54545a02063164736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0x6E407AF877FAAC50001D7B2E1028B1A2E233DD52 SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEC9B5B3A PUSH32 0x412076657279207374726F6E67207365637265742070617373776F7264203A29 PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH1 0xDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0x4E 0xC5 0xCC PUSH16 0xA75078190F3E3CA2698703309A5C21A1 DUP10 0x24 PUSH4 0x7EAB5454 GAS MUL MOD BALANCE PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "350:291:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;350:291:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063890d690814602d575b600080fd5b60336035565b005b6000736e407af877faac50001d7b2e1028b1a2e233dd52905060008190508073ffffffffffffffffffffffffffffffffffffffff1663ec9b5b3a7f412076657279207374726f6e67207365637265742070617373776f7264203a2960001b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801560c857600080fd5b505af115801560db573d6000803e3d6000fd5b50505050505056fea2646970667358221220014ec5cc6fa75078190f3e3ca2698703309a5c21a18924637eab54545a02063164736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0x6E407AF877FAAC50001D7B2E1028B1A2E233DD52 SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEC9B5B3A PUSH32 0x412076657279207374726F6E67207365637265742070617373776F7264203A29 PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH1 0xDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0x4E 0xC5 0xCC PUSH16 0xA75078190F3E3CA2698703309A5C21A1 DUP10 0x24 PUSH4 0x7EAB5454 GAS MUL MOD BALANCE PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "350:291:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;350:291:0;;;;;;;;;;;;;;;;;;;384:254;;;:::i;:::-;;;421:20;444:42;421:65;;497:11;517:12;497:33;;541:5;:12;;;562:66;554:75;;541:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;541:89:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;541:89:0;;;;384:254;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "56200",
								"executionCost": "105",
								"totalCost": "56305"
							},
							"external": {
								"solve()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 350,
									"end": 641,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 350,
									"end": 641,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 350,
									"end": 641,
									"name": "MSTORE"
								},
								{
									"begin": 350,
									"end": 641,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 350,
									"end": 641,
									"name": "POP"
								},
								{
									"begin": 350,
									"end": 641,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 350,
									"end": 641,
									"name": "DUP1"
								},
								{
									"begin": 350,
									"end": 641,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 350,
									"end": 641,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 350,
									"end": 641,
									"name": "CODECOPY"
								},
								{
									"begin": 350,
									"end": 641,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 350,
									"end": 641,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220014ec5cc6fa75078190f3e3ca2698703309a5c21a18924637eab54545a02063164736f6c63430006000033",
									".code": [
										{
											"begin": 350,
											"end": 641,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "MSTORE"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "POP"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "LT"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "JUMPI"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "SHR"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "PUSH",
											"value": "890D6908"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "EQ"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "JUMPI"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "JUMPDEST"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 350,
											"end": 641,
											"name": "REVERT"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "JUMPDEST"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "JUMPDEST"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "STOP"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "JUMPDEST"
										},
										{
											"begin": 421,
											"end": 441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 444,
											"end": 486,
											"name": "PUSH",
											"value": "6E407AF877FAAC50001D7B2E1028B1A2E233DD52"
										},
										{
											"begin": 421,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 421,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 517,
											"end": 529,
											"name": "DUP2"
										},
										{
											"begin": 497,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 541,
											"end": 546,
											"name": "DUP1"
										},
										{
											"begin": 541,
											"end": 553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 541,
											"end": 553,
											"name": "AND"
										},
										{
											"begin": 541,
											"end": 553,
											"name": "PUSH",
											"value": "EC9B5B3A"
										},
										{
											"begin": 562,
											"end": 628,
											"name": "PUSH",
											"value": "412076657279207374726F6E67207365637265742070617373776F7264203A29"
										},
										{
											"begin": 554,
											"end": 629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 554,
											"end": 629,
											"name": "SHL"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "MLOAD"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "DUP3"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "AND"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "SHL"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "DUP2"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "MSTORE"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "ADD"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "DUP1"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "DUP3"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "DUP2"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "MSTORE"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "ADD"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "SWAP2"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "MLOAD"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "DUP1"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "DUP4"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "SUB"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "DUP2"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "DUP8"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "DUP1"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "GAS"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "CALL"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 541,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "POP"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "POP"
										},
										{
											"begin": 384,
											"end": 638,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"solve()": "890d6908"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"solve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ethernaultVault.sol\":\"ethernaultVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaultVault.sol\":{\"keccak256\":\"0xd9113eff9f3b673e76de9709af00e29dd257cb3896f494b59e52f48ec05b7573\",\"urls\":[\"bzz-raw://8f9e2be4b7b229a11f1253b5534864f4150125fc4d8316c1d7addc56e9233557\",\"dweb:/ipfs/QmWn8twweTzDfyv9NVjEYbNUar7XN8yvAcjQ7t3Er7z7SA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"ethernaultVault.sol": {
				"ast": {
					"absolutePath": "ethernaultVault.sol",
					"exportedSymbols": {
						"Vault": [
							35
						],
						"ethernaultVault": [
							59
						]
					},
					"id": 60,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "Vault",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "cf309012",
									"id": 3,
									"name": "locked",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 35,
									"src": "80:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "80:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"name": "password",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 35,
									"src": "103:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "103:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "172:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 10,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "179:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "188:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "179:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "179:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 14,
														"name": "password",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "199:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 15,
														"name": "_password",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "210:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "199:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "199:20:0"
											}
										]
									},
									"documentation": null,
									"id": 19,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"name": "_password",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "146:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 6,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "145:19:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "172:0:0"
									},
									"scope": 35,
									"src": "134:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "273:70:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 24,
														"name": "password",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "284:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 25,
														"name": "_password",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "296:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "284:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 32,
												"nodeType": "IfStatement",
												"src": "280:58:0",
												"trueBody": {
													"id": 31,
													"nodeType": "Block",
													"src": "307:31:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 27,
																	"name": "locked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "316:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "325:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "316:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 30,
															"nodeType": "ExpressionStatement",
															"src": "316:14:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "ec9b5b3a",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unlock",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"name": "_password",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 34,
												"src": "247:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 20,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "246:19:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:0:0"
									},
									"scope": 35,
									"src": "231:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 60,
							"src": "60:286:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 59,
							"linearizedBaseContracts": [
								59
							],
							"name": "ethernaultVault",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "410:228:0",
										"statements": [
											{
												"assignments": [
													39
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"name": "contractAddr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 57,
														"src": "421:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 38,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "421:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307836453430374166383737666161433530303031443762326531303238623161326532333364643532",
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "444:42:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"value": "0x6E407Af877faaC50001D7b2e1028b1a2e233dd52"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "421:65:0"
											},
											{
												"assignments": [
													43
												],
												"declarations": [
													{
														"constant": false,
														"id": 43,
														"name": "vault",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 57,
														"src": "497:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Vault_$35",
															"typeString": "contract Vault"
														},
														"typeName": {
															"contractScope": null,
															"id": 42,
															"name": "Vault",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 35,
															"src": "497:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Vault_$35",
																"typeString": "contract Vault"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 47,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 45,
															"name": "contractAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "517:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 44,
														"name": "Vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "511:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Vault_$35_$",
															"typeString": "type(contract Vault)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "511:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Vault_$35",
														"typeString": "contract Vault"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "497:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "307834313230373636353732373932303733373437323666366536373230373336353633373236353734323037303631373337333737366637323634323033613239",
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "562:66:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_29457691405064188121368146564401373537695763716936415088691546795584102873641_by_1",
																		"typeString": "int_const 2945...(69 digits omitted)...3641"
																	},
																	"value": "0x412076657279207374726f6e67207365637265742070617373776f7264203a29"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_29457691405064188121368146564401373537695763716936415088691546795584102873641_by_1",
																		"typeString": "int_const 2945...(69 digits omitted)...3641"
																	}
																],
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "554:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 51,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "554:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "554:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 48,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "541:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Vault_$35",
																"typeString": "contract Vault"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "unlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "541:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) external"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "541:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "541:89:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "890d6908",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:2:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:0:0"
									},
									"scope": 59,
									"src": "384:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 60,
							"src": "350:291:0"
						}
					],
					"src": "33:608:0"
				},
				"id": 0
			}
		}
	}
}