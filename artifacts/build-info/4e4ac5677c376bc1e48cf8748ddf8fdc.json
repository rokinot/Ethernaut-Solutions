{
	"id": "4e4ac5677c376bc1e48cf8748ddf8fdc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"ethernautKing.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\ncontract King {\r\n\r\n  address payable king;\r\n  uint public prize;\r\n  address payable public owner;\r\n\r\n  constructor() public payable {\r\n    owner = msg.sender;  \r\n    king = msg.sender;\r\n    prize = msg.value;\r\n  }\r\n\r\n  receive() external payable {\r\n    require(msg.value >= prize || msg.sender == owner);\r\n    king.transfer(msg.value);\r\n    king = msg.sender;\r\n    prize = msg.value;\r\n  }\r\n\r\n  function _king() public view returns (address payable) {\r\n    return king;\r\n  }\r\n}\r\n\r\n//0x557d634258B353BAC0F7d17d807DAAE74851F638\r\n\r\ncontract ethernautKing {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ethernautKing.sol": {
				"King": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "_king",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "prize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ethernautKing.sol\":60:536  contract King {\r... */\n  mstore(0x40, 0x80)\n    /* \"ethernautKing.sol\":207:217  msg.sender */\n  caller\n    /* \"ethernautKing.sol\":199:204  owner */\n  0x02\n  0x00\n    /* \"ethernautKing.sol\":199:217  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ethernautKing.sol\":233:243  msg.sender */\n  caller\n    /* \"ethernautKing.sol\":226:230  king */\n  0x00\n  dup1\n    /* \"ethernautKing.sol\":226:243  king = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ethernautKing.sol\":258:267  msg.value */\n  callvalue\n    /* \"ethernautKing.sol\":250:255  prize */\n  0x01\n    /* \"ethernautKing.sol\":250:267  prize = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ethernautKing.sol\":60:536  contract King {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernautKing.sol\":60:536  contract King {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x29cc6d6f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe3ac5d26\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"ethernautKing.sol\":334:339  prize */\n      sload(0x01)\n        /* \"ethernautKing.sol\":321:330  msg.value */\n      callvalue\n        /* \"ethernautKing.sol\":321:339  msg.value >= prize */\n      lt\n      iszero\n        /* \"ethernautKing.sol\":321:362  msg.value >= prize || msg.sender == owner */\n      dup1\n      tag_8\n      jumpi\n      pop\n        /* \"ethernautKing.sol\":357:362  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":343:362  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":343:353  msg.sender */\n      caller\n        /* \"ethernautKing.sol\":343:362  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ethernautKing.sol\":321:362  msg.value >= prize || msg.sender == owner */\n    tag_8:\n        /* \"ethernautKing.sol\":313:363  require(msg.value >= prize || msg.sender == owner) */\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n        /* \"ethernautKing.sol\":370:374  king */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":370:383  king.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":370:394  king.transfer(msg.value) */\n      0x08fc\n        /* \"ethernautKing.sol\":384:393  msg.value */\n      callvalue\n        /* \"ethernautKing.sol\":370:394  king.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"ethernautKing.sol\":370:394  king.transfer(msg.value) */\n      pop\n        /* \"ethernautKing.sol\":408:418  msg.sender */\n      caller\n        /* \"ethernautKing.sol\":401:405  king */\n      0x00\n      dup1\n        /* \"ethernautKing.sol\":401:418  king = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ethernautKing.sol\":433:442  msg.value */\n      callvalue\n        /* \"ethernautKing.sol\":425:430  prize */\n      0x01\n        /* \"ethernautKing.sol\":425:442  prize = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ethernautKing.sol\":60:536  contract King {\r... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernautKing.sol\":454:533  function _king() public view returns (address payable) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"ethernautKing.sol\":454:533  function _king() public view returns (address payable) {\r... */\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernautKing.sol\":128:156  address payable public owner */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"ethernautKing.sol\":128:156  address payable public owner */\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernautKing.sol\":106:123  uint public prize */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"ethernautKing.sol\":106:123  uint public prize */\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernautKing.sol\":454:533  function _king() public view returns (address payable) {\r... */\n    tag_14:\n        /* \"ethernautKing.sol\":492:507  address payable */\n      0x00\n        /* \"ethernautKing.sol\":523:527  king */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":516:527  return king */\n      swap1\n      pop\n        /* \"ethernautKing.sol\":454:533  function _king() public view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"ethernautKing.sol\":128:156  address payable public owner */\n    tag_17:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ethernautKing.sol\":106:123  uint public prize */\n    tag_20:\n      sload(0x01)\n      dup2\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204c56b3080f9fb920e47f05358b8b68782db236e9ad9527ac21259d3116e04e2c64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405233600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506102be8061009b6000396000f3fe6080604052600436106100385760003560e01c806329cc6d6f1461015a5780638da5cb5b146101b1578063e3ac5d261461020857610155565b36610155576001543410158061009b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100a457600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561010b573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550005b600080fd5b34801561016657600080fd5b5061016f610233565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101bd57600080fd5b506101c661025c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021457600080fd5b5061021d610282565b6040518082815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001548156fea26469706673582212204c56b3080f9fb920e47f05358b8b68782db236e9ad9527ac21259d3116e04e2c64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x2BE DUP1 PUSH2 0x9B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29CC6D6F EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x208 JUMPI PUSH2 0x155 JUMP JUMPDEST CALLDATASIZE PUSH2 0x155 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO DUP1 PUSH2 0x9B JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x25C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C JUMP 0xB3 ADDMOD 0xF SWAP16 0xB9 KECCAK256 0xE4 PUSH32 0x5358B8B68782DB236E9AD9527AC21259D3116E04E2C64736F6C634300060000 CALLER ",
							"sourceMap": "60:476:0:-:0;;;207:10;199:5;;:18;;;;;;;;;;;;;;;;;;233:10;226:4;;:17;;;;;;;;;;;;;;;;;;258:9;250:5;:17;;;;60:476;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c806329cc6d6f1461015a5780638da5cb5b146101b1578063e3ac5d261461020857610155565b36610155576001543410158061009b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100a457600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561010b573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550005b600080fd5b34801561016657600080fd5b5061016f610233565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101bd57600080fd5b506101c661025c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021457600080fd5b5061021d610282565b6040518082815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001548156fea26469706673582212204c56b3080f9fb920e47f05358b8b68782db236e9ad9527ac21259d3116e04e2c64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29CC6D6F EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x208 JUMPI PUSH2 0x155 JUMP JUMPDEST CALLDATASIZE PUSH2 0x155 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO DUP1 PUSH2 0x9B JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x25C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C JUMP 0xB3 ADDMOD 0xF SWAP16 0xB9 KECCAK256 0xE4 PUSH32 0x5358B8B68782DB236E9AD9527AC21259D3116E04E2C64736F6C634300060000 CALLER ",
							"sourceMap": "60:476:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;334:5;;321:9;:18;;:41;;;;357:5;;;;;;;;;;;343:19;;:10;:19;;;321:41;313:50;;;;;;370:4;;;;;;;;;;;:13;;:24;384:9;370:24;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;370:24:0;408:10;401:4;;:17;;;;;;;;;;;;;;;;;;433:9;425:5;:17;;;;60:476;;;;;454:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:79:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;128:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;128:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;106:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;106:17:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;454:79;492:15;523:4;;;;;;;;;;;516:11;;454:79;:::o;128:28::-;;;;;;;;;;;;;:::o;106:17::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "140400",
								"executionCost": "61904",
								"totalCost": "202304"
							},
							"external": {
								"_king()": "1039",
								"owner()": "1053",
								"prize()": "1027"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 536,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 60,
									"end": 536,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 60,
									"end": 536,
									"name": "MSTORE"
								},
								{
									"begin": 207,
									"end": 217,
									"name": "CALLER"
								},
								{
									"begin": 199,
									"end": 204,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 199,
									"end": 204,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "EXP"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "DUP2"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "SLOAD"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "DUP2"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "MUL"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "NOT"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "AND"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "SWAP1"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "DUP4"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "AND"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "MUL"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "OR"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "SWAP1"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "SSTORE"
								},
								{
									"begin": 199,
									"end": 217,
									"name": "POP"
								},
								{
									"begin": 233,
									"end": 243,
									"name": "CALLER"
								},
								{
									"begin": 226,
									"end": 230,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 226,
									"end": 230,
									"name": "DUP1"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "EXP"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "DUP2"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "SLOAD"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "DUP2"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "MUL"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "NOT"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "AND"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "SWAP1"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "DUP4"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "AND"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "MUL"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "OR"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "SWAP1"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "SSTORE"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "POP"
								},
								{
									"begin": 258,
									"end": 267,
									"name": "CALLVALUE"
								},
								{
									"begin": 250,
									"end": 255,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 250,
									"end": 267,
									"name": "DUP2"
								},
								{
									"begin": 250,
									"end": 267,
									"name": "SWAP1"
								},
								{
									"begin": 250,
									"end": 267,
									"name": "SSTORE"
								},
								{
									"begin": 250,
									"end": 267,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 536,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 536,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 536,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 536,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 536,
									"name": "CODECOPY"
								},
								{
									"begin": 60,
									"end": 536,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 536,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c56b3080f9fb920e47f05358b8b68782db236e9ad9527ac21259d3116e04e2c64736f6c63430006000033",
									".code": [
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "LT"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "SHR"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH",
											"value": "29CC6D6F"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH",
											"value": "E3AC5D26"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "JUMP"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "JUMPI"
										},
										{
											"begin": 334,
											"end": 339,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 334,
											"end": 339,
											"name": "SLOAD"
										},
										{
											"begin": 321,
											"end": 330,
											"name": "CALLVALUE"
										},
										{
											"begin": 321,
											"end": 339,
											"name": "LT"
										},
										{
											"begin": 321,
											"end": 339,
											"name": "ISZERO"
										},
										{
											"begin": 321,
											"end": 362,
											"name": "DUP1"
										},
										{
											"begin": 321,
											"end": 362,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 321,
											"end": 362,
											"name": "JUMPI"
										},
										{
											"begin": 321,
											"end": 362,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 362,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 357,
											"end": 362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 357,
											"end": 362,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 362,
											"name": "SLOAD"
										},
										{
											"begin": 357,
											"end": 362,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 362,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 357,
											"end": 362,
											"name": "EXP"
										},
										{
											"begin": 357,
											"end": 362,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 362,
											"name": "DIV"
										},
										{
											"begin": 357,
											"end": 362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 362,
											"name": "AND"
										},
										{
											"begin": 343,
											"end": 362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 343,
											"end": 362,
											"name": "AND"
										},
										{
											"begin": 343,
											"end": 353,
											"name": "CALLER"
										},
										{
											"begin": 343,
											"end": 362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 343,
											"end": 362,
											"name": "AND"
										},
										{
											"begin": 343,
											"end": 362,
											"name": "EQ"
										},
										{
											"begin": 321,
											"end": 362,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 321,
											"end": 362,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 363,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 313,
											"end": 363,
											"name": "JUMPI"
										},
										{
											"begin": 313,
											"end": 363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 313,
											"end": 363,
											"name": "DUP1"
										},
										{
											"begin": 313,
											"end": 363,
											"name": "REVERT"
										},
										{
											"begin": 313,
											"end": 363,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 313,
											"end": 363,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 370,
											"end": 374,
											"name": "DUP1"
										},
										{
											"begin": 370,
											"end": 374,
											"name": "SWAP1"
										},
										{
											"begin": 370,
											"end": 374,
											"name": "SLOAD"
										},
										{
											"begin": 370,
											"end": 374,
											"name": "SWAP1"
										},
										{
											"begin": 370,
											"end": 374,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 370,
											"end": 374,
											"name": "EXP"
										},
										{
											"begin": 370,
											"end": 374,
											"name": "SWAP1"
										},
										{
											"begin": 370,
											"end": 374,
											"name": "DIV"
										},
										{
											"begin": 370,
											"end": 374,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 370,
											"end": 374,
											"name": "AND"
										},
										{
											"begin": 370,
											"end": 383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 370,
											"end": 383,
											"name": "AND"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 384,
											"end": 393,
											"name": "CALLVALUE"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "SWAP1"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "DUP2"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "ISZERO"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "MUL"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "SWAP1"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "MLOAD"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "MLOAD"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "DUP1"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "DUP4"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "SUB"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "DUP2"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "DUP6"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "DUP9"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "DUP9"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "CALL"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "SWAP4"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 418,
											"name": "CALLER"
										},
										{
											"begin": 401,
											"end": 405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 401,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "EXP"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "SLOAD"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "MUL"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "NOT"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "AND"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "DUP4"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "AND"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "MUL"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "OR"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "SSTORE"
										},
										{
											"begin": 401,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 442,
											"name": "CALLVALUE"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "SSTORE"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "STOP"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 536,
											"name": "REVERT"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "JUMPDEST"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "JUMPDEST"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "MLOAD"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "DUP1"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "DUP3"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "AND"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "AND"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "DUP2"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "MSTORE"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "ADD"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "SWAP2"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "MLOAD"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "DUP1"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "SWAP2"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "SUB"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "SWAP1"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "RETURN"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "POP"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "MLOAD"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP1"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP3"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "AND"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "AND"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP2"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "MSTORE"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "ADD"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP2"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "POP"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "POP"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "MLOAD"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP1"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP2"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SUB"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "RETURN"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "POP"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "MLOAD"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "DUP3"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "DUP2"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "MSTORE"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "ADD"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "SWAP2"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "POP"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "POP"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "MLOAD"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "SWAP2"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "SUB"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "RETURN"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "JUMPDEST"
										},
										{
											"begin": 492,
											"end": 507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "DUP1"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "SWAP1"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "SLOAD"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "SWAP1"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "EXP"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "SWAP1"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "DIV"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 527,
											"name": "AND"
										},
										{
											"begin": 516,
											"end": 527,
											"name": "SWAP1"
										},
										{
											"begin": 516,
											"end": 527,
											"name": "POP"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "SWAP1"
										},
										{
											"begin": 454,
											"end": 533,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMPDEST"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SLOAD"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "EXP"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "SWAP1"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DIV"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "AND"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "DUP2"
										},
										{
											"begin": 128,
											"end": 156,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "SLOAD"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "DUP2"
										},
										{
											"begin": 106,
											"end": 123,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_king()": "29cc6d6f",
							"owner()": "8da5cb5b",
							"prize()": "e3ac5d26"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_king\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ethernautKing.sol\":\"King\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernautKing.sol\":{\"keccak256\":\"0xe3a121b203699e660fdf5ac33f2e8f0bc93fb3b702f57e1903e81f977565e8db\",\"urls\":[\"bzz-raw://e7146f57ed3665633f226b5cc22504bff5f59bbf0322158bba5b805b92a8139f\",\"dweb:/ipfs/QmeqnQAPhkCSZ6JgPNiauA3wjc9kVujdoR8HbZKbymtRBd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "ethernautKing.sol:King",
								"label": "king",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 5,
								"contract": "ethernautKing.sol:King",
								"label": "prize",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "ethernautKing.sol:King",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"ethernautKing": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ethernautKing.sol\":588:621  contract ethernautKing {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"ethernautKing.sol\":588:621  contract ethernautKing {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernautKing.sol\":588:621  contract ethernautKing {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200073f977b231f64b3abcb0600c08f7dee121033e6e15d9d3d94c79f6800abd2564736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200073f977b231f64b3abcb0600c08f7dee121033e6e15d9d3d94c79f6800abd2564736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP PUSH20 0xF977B231F64B3ABCB0600C08F7DEE121033E6E15 0xD9 0xD3 0xD9 0x4C PUSH26 0xF6800ABD2564736F6C6343000600003300000000000000000000 ",
							"sourceMap": "588:33:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;588:33:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212200073f977b231f64b3abcb0600c08f7dee121033e6e15d9d3d94c79f6800abd2564736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP PUSH20 0xF977B231F64B3ABCB0600C08F7DEE121033E6E15 0xD9 0xD3 0xD9 0x4C PUSH26 0xF6800ABD2564736F6C6343000600003300000000000000000000 ",
							"sourceMap": "588:33:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 588,
									"end": 621,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 588,
									"end": 621,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 588,
									"end": 621,
									"name": "MSTORE"
								},
								{
									"begin": 588,
									"end": 621,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 588,
									"end": 621,
									"name": "POP"
								},
								{
									"begin": 588,
									"end": 621,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 588,
									"end": 621,
									"name": "DUP1"
								},
								{
									"begin": 588,
									"end": 621,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 588,
									"end": 621,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 588,
									"end": 621,
									"name": "CODECOPY"
								},
								{
									"begin": 588,
									"end": 621,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 588,
									"end": 621,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200073f977b231f64b3abcb0600c08f7dee121033e6e15d9d3d94c79f6800abd2564736f6c63430006000033",
									".code": [
										{
											"begin": 588,
											"end": 621,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 588,
											"end": 621,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 588,
											"end": 621,
											"name": "MSTORE"
										},
										{
											"begin": 588,
											"end": 621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 588,
											"end": 621,
											"name": "DUP1"
										},
										{
											"begin": 588,
											"end": 621,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ethernautKing.sol\":\"ethernautKing\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernautKing.sol\":{\"keccak256\":\"0xe3a121b203699e660fdf5ac33f2e8f0bc93fb3b702f57e1903e81f977565e8db\",\"urls\":[\"bzz-raw://e7146f57ed3665633f226b5cc22504bff5f59bbf0322158bba5b805b92a8139f\",\"dweb:/ipfs/QmeqnQAPhkCSZ6JgPNiauA3wjc9kVujdoR8HbZKbymtRBd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"ethernautKing.sol": {
				"ast": {
					"absolutePath": "ethernautKing.sol",
					"exportedSymbols": {
						"King": [
							68
						],
						"ethernautKing": [
							69
						]
					},
					"id": 70,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "King",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "king",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 68,
									"src": "81:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "81:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "e3ac5d26",
									"id": 5,
									"name": "prize",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 68,
									"src": "106:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "106:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 7,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 68,
									"src": "128:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "128:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "192:81:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "199:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "207:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "207:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "199:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "199:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 15,
														"name": "king",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "226:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 16,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "233:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "233:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "226:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "226:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "prize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "250:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 21,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "258:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "258:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "250:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "250:17:0"
											}
										]
									},
									"documentation": null,
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:0:0"
									},
									"scope": 68,
									"src": "163:110:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "306:142:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 30,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "321:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "321:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 32,
																	"name": "prize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "334:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "321:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 34,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "343:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 35,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "343:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "357:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "343:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "321:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 29,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															87,
															88
														],
														"referencedDeclaration": 87,
														"src": "313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "313:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "313:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 44,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "384:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "384:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 41,
															"name": "king",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "370:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "370:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "370:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "370:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 48,
														"name": "king",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "401:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 49,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "408:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "408:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "401:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "401:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 53,
														"name": "prize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "425:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 54,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "433:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "433:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "425:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "425:17:0"
											}
										]
									},
									"documentation": null,
									"id": 59,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:0:0"
									},
									"scope": 68,
									"src": "279:169:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "509:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"name": "king",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "523:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "516:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "29cc6d6f",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_king",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "468:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "492:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "492:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "491:17:0"
									},
									"scope": 68,
									"src": "454:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 70,
							"src": "60:476:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 69,
							"linearizedBaseContracts": [
								69
							],
							"name": "ethernautKing",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 70,
							"src": "588:33:0"
						}
					],
					"src": "33:588:0"
				},
				"id": 0
			}
		}
	}
}