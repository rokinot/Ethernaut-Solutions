{
	"id": "fa00fd367260caf69832bd54cc6656f3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"trailOfBits.sol": {
				"content": "pragma solidity 0.8.10;\r\n\r\n// The goal of this challenge is to be able to sign offchain a message\r\n// with an address stored in winners.\r\ninterface IChallenge{\r\n    function exploit_me(address winner) external;\r\n    function lock_me() external;\r\n}\r\n\r\ncontract hackingTrail {\r\n\r\n    address private constant challengeAddr = 0xcD7AB80Da7C893f86fA8deDDf862b74D94f4478E;\r\n\r\n    modifier onlyRoki {\r\n        require(msg.sender == address(0x798349E06c67272465123B91bd88C5d19b8c7878), \"lol how did you even find this?\");\r\n        _;\r\n    }\r\n\r\n    function hackTrail() external onlyRoki {\r\n        IChallenge challenge = IChallenge(challengeAddr);\r\n        challenge.lock_me();\r\n        selfdestruct(payable(0x798349E06c67272465123B91bd88C5d19b8c7878));\r\n    }\r\n\r\n    receive() external payable {\r\n        assembly {\r\n            let check := call(gas(),challengeAddr,0,0,0,0,0)\r\n            if eq(check, 0) {\r\n                revert(0, returndatasize())\r\n            }\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"trailOfBits.sol": {
				"IChallenge": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "winner",
									"type": "address"
								}
							],
							"name": "exploit_me",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lock_me",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exploit_me(address)": "548853a0",
							"lock_me()": "4c228cc7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"exploit_me\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock_me\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"trailOfBits.sol\":\"IChallenge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"trailOfBits.sol\":{\"keccak256\":\"0x342ceeffe5808bcfa2734b4acf19c976e292f623e00cec5f7fe5bad6c3118f29\",\"urls\":[\"bzz-raw://d9c2a36741fde954abe1d4cf58460c1d3f55aa52a23be33b4cdc3e4ea22773aa\",\"dweb:/ipfs/QmUbF2oHtQzJdjWTdm9rgMhNDj3zPffz2Z9TUaS5hBduQW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"hackingTrail": {
					"abi": [
						{
							"inputs": [],
							"name": "hackTrail",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"trailOfBits.sol\":251:982  contract hackingTrail {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"trailOfBits.sol\":251:982  contract hackingTrail {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x157bca60\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"trailOfBits.sol\":868:869  0 */\n      0x00\n        /* \"trailOfBits.sol\":866:867  0 */\n      dup1\n        /* \"trailOfBits.sol\":864:865  0 */\n      0x00\n        /* \"trailOfBits.sol\":862:863  0 */\n      dup1\n        /* \"trailOfBits.sol\":860:861  0 */\n      0x00\n        /* \"trailOfBits.sol\":846:859  challengeAddr */\n      0xcd7ab80da7c893f86fa8deddf862b74d94f4478e\n        /* \"trailOfBits.sol\":840:845  gas() */\n      gas\n        /* \"trailOfBits.sol\":835:870  call(gas(),challengeAddr,0,0,0,0,0) */\n      call\n        /* \"trailOfBits.sol\":897:898  0 */\n      0x00\n        /* \"trailOfBits.sol\":890:895  check */\n      dup2\n        /* \"trailOfBits.sol\":887:899  eq(check, 0) */\n      eq\n        /* \"trailOfBits.sol\":884:961  if eq(check, 0) {... */\n      iszero\n      tag_6\n      jumpi\n        /* \"trailOfBits.sol\":929:945  returndatasize() */\n      returndatasize\n        /* \"trailOfBits.sol\":926:927  0 */\n      0x00\n        /* \"trailOfBits.sol\":919:946  revert(0, returndatasize()) */\n      revert\n        /* \"trailOfBits.sol\":884:961  if eq(check, 0) {... */\n    tag_6:\n        /* \"trailOfBits.sol\":807:972  {... */\n      pop\n        /* \"trailOfBits.sol\":251:982  contract hackingTrail {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"trailOfBits.sol\":540:752  function hackTrail() external onlyRoki {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n    tag_9:\n        /* \"trailOfBits.sol\":433:475  0x798349E06c67272465123B91bd88C5d19b8c7878 */\n      0x798349e06c67272465123b91bd88c5d19b8c7878\n        /* \"trailOfBits.sol\":411:476  msg.sender == address(0x798349E06c67272465123B91bd88C5d19b8c7878) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trailOfBits.sol\":411:421  msg.sender */\n      caller\n        /* \"trailOfBits.sol\":411:476  msg.sender == address(0x798349E06c67272465123B91bd88C5d19b8c7878) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"trailOfBits.sol\":403:512  require(msg.sender == address(0x798349E06c67272465123B91bd88C5d19b8c7878), \"lol how did you even find this?\") */\n      tag_11\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_12\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_11:\n        /* \"trailOfBits.sol\":590:610  IChallenge challenge */\n      0x00\n        /* \"trailOfBits.sol\":323:365  0xcD7AB80Da7C893f86fA8deDDf862b74D94f4478E */\n      0xcd7ab80da7c893f86fa8deddf862b74d94f4478e\n        /* \"trailOfBits.sol\":590:638  IChallenge challenge = IChallenge(challengeAddr) */\n      swap1\n      pop\n        /* \"trailOfBits.sol\":649:658  challenge */\n      dup1\n        /* \"trailOfBits.sol\":649:666  challenge.lock_me */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c228cc7\n        /* \"trailOfBits.sol\":649:668  challenge.lock_me() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n        /* \"trailOfBits.sol\":700:742  0x798349E06c67272465123B91bd88C5d19b8c7878 */\n      0x798349e06c67272465123b91bd88c5d19b8c7878\n        /* \"trailOfBits.sol\":679:744  selfdestruct(payable(0x798349E06c67272465123B91bd88C5d19b8c7878)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"#utility.yul\":7:176   */\n    tag_18:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:363   */\n    tag_19:\n        /* \"#utility.yul\":322:355   */\n      0x6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f00\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:356   */\n      mstore\n        /* \"#utility.yul\":182:363   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":369:735   */\n    tag_20:\n        /* \"#utility.yul\":511:514   */\n      0x00\n        /* \"#utility.yul\":532:599   */\n      tag_25\n        /* \"#utility.yul\":596:598   */\n      0x1f\n        /* \"#utility.yul\":591:594   */\n      dup4\n        /* \"#utility.yul\":532:599   */\n      tag_18\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":525:599   */\n      swap2\n      pop\n        /* \"#utility.yul\":608:701   */\n      tag_26\n        /* \"#utility.yul\":697:700   */\n      dup3\n        /* \"#utility.yul\":608:701   */\n      tag_19\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":726:728   */\n      0x20\n        /* \"#utility.yul\":721:724   */\n      dup3\n        /* \"#utility.yul\":717:729   */\n      add\n        /* \"#utility.yul\":710:729   */\n      swap1\n      pop\n        /* \"#utility.yul\":369:735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":741:1160   */\n    tag_13:\n        /* \"#utility.yul\":907:911   */\n      0x00\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup3\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":922:948   */\n      swap1\n      pop\n        /* \"#utility.yul\":994:1003   */\n      dup2\n        /* \"#utility.yul\":988:992   */\n      dup2\n        /* \"#utility.yul\":984:1004   */\n      sub\n        /* \"#utility.yul\":980:981   */\n      0x00\n        /* \"#utility.yul\":969:978   */\n      dup4\n        /* \"#utility.yul\":965:982   */\n      add\n        /* \"#utility.yul\":958:1005   */\n      mstore\n        /* \"#utility.yul\":1022:1153   */\n      tag_28\n        /* \"#utility.yul\":1148:1152   */\n      dup2\n        /* \"#utility.yul\":1022:1153   */\n      tag_20\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":1014:1153   */\n      swap1\n      pop\n        /* \"#utility.yul\":741:1160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f4ee5cdcbadc43da6ffbac384cdfa5f44cd097cba37c84294f030da75cb5059864736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061024e806100206000396000f3fe6080604052600436106100225760003560e01c8063157bca601461005c57610057565b3661005757600080600080600073cd7ab80da7c893f86fa8deddf862b74d94f4478e5af16000811415610054573d6000fd5b50005b600080fd5b34801561006857600080fd5b50610071610073565b005b73798349e06c67272465123b91bd88c5d19b8c787873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ec906101f8565b60405180910390fd5b600073cd7ab80da7c893f86fa8deddf862b74d94f4478e90508073ffffffffffffffffffffffffffffffffffffffff16634c228cc76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561015657600080fd5b505af115801561016a573d6000803e3d6000fd5b5050505073798349e06c67272465123b91bd88c5d19b8c787873ffffffffffffffffffffffffffffffffffffffff16ff5b600082825260208201905092915050565b7f6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f00600082015250565b60006101e2601f8361019b565b91506101ed826101ac565b602082019050919050565b60006020820190508181036000830152610211816101d5565b905091905056fea2646970667358221220f4ee5cdcbadc43da6ffbac384cdfa5f44cd097cba37c84294f030da75cb5059864736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x157BCA60 EQ PUSH2 0x5C JUMPI PUSH2 0x57 JUMP JUMPDEST CALLDATASIZE PUSH2 0x57 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH20 0xCD7AB80DA7C893F86FA8DEDDF862B74D94F4478E GAS CALL PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x54 JUMPI RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0x73 JUMP JUMPDEST STOP JUMPDEST PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xCD7AB80DA7C893F86FA8DEDDF862B74D94F4478E SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4C228CC7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6C6F6C20686F772064696420796F75206576656E2066696E6420746869733F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2 PUSH1 0x1F DUP4 PUSH2 0x19B JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED DUP3 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211 DUP2 PUSH2 0x1D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xEE 0x5C 0xDC 0xBA 0xDC NUMBER 0xDA PUSH16 0xFBAC384CDFA5F44CD097CBA37C84294F SUB 0xD 0xA7 0x5C 0xB5 SDIV SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "251:731:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_58": {
									"entryPoint": null,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hackTrail_53": {
									"entryPoint": 115,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1163:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:1",
														"type": ""
													}
												],
												"src": "7:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:75:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:1"
																	},
																	{
																		"hexValue": "6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:33:1",
																		"type": "",
																		"value": "lol how did you even find this?"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:57:1"
														}
													]
												},
												"name": "store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"src": "182:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "515:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "525:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "591:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "596:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "532:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "697:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22",
																	"nodeType": "YulIdentifier",
																	"src": "608:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "608:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "608:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "710:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "721:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "726:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "717:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "710:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "503:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "511:3:1",
														"type": ""
													}
												],
												"src": "369:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "912:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "922:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "934:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "945:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "930:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "930:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "922:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "980:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "965:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "988:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "994:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "984:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "958:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1014:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1148:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1022:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1022:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1014:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "907:4:1",
														"type": ""
													}
												],
												"src": "741:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22(memPtr) {\n\n        mstore(add(memPtr, 0), \"lol how did you even find this?\")\n\n    }\n\n    function abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c8063157bca601461005c57610057565b3661005757600080600080600073cd7ab80da7c893f86fa8deddf862b74d94f4478e5af16000811415610054573d6000fd5b50005b600080fd5b34801561006857600080fd5b50610071610073565b005b73798349e06c67272465123b91bd88c5d19b8c787873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ec906101f8565b60405180910390fd5b600073cd7ab80da7c893f86fa8deddf862b74d94f4478e90508073ffffffffffffffffffffffffffffffffffffffff16634c228cc76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561015657600080fd5b505af115801561016a573d6000803e3d6000fd5b5050505073798349e06c67272465123b91bd88c5d19b8c787873ffffffffffffffffffffffffffffffffffffffff16ff5b600082825260208201905092915050565b7f6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f00600082015250565b60006101e2601f8361019b565b91506101ed826101ac565b602082019050919050565b60006020820190508181036000830152610211816101d5565b905091905056fea2646970667358221220f4ee5cdcbadc43da6ffbac384cdfa5f44cd097cba37c84294f030da75cb5059864736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x157BCA60 EQ PUSH2 0x5C JUMPI PUSH2 0x57 JUMP JUMPDEST CALLDATASIZE PUSH2 0x57 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH20 0xCD7AB80DA7C893F86FA8DEDDF862B74D94F4478E GAS CALL PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x54 JUMPI RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0x73 JUMP JUMPDEST STOP JUMPDEST PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xCD7AB80DA7C893F86FA8DEDDF862B74D94F4478E SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4C228CC7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6C6F6C20686F772064696420796F75206576656E2066696E6420746869733F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2 PUSH1 0x1F DUP4 PUSH2 0x19B JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED DUP3 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211 DUP2 PUSH2 0x1D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xEE 0x5C 0xDC 0xBA 0xDC NUMBER 0xDA PUSH16 0xFBAC384CDFA5F44CD097CBA37C84294F SUB 0xD 0xA7 0x5C 0xB5 SDIV SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "251:731:0:-:0;;;;;;;;;;;;;;;;;;;;;;;868:1;866;864;862;860;846:13;840:5;835:35;897:1;890:5;887:12;884:77;;;929:16;926:1;919:27;884:77;807:165;251:731;;;;;540:212;;;;;;;;;;;;;:::i;:::-;;;433:42;411:65;;:10;:65;;;403:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;590:20:::1;323:42;590:48;;649:9;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;700:42;679:65;;;7:169:1::0;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:181::-;322:33;318:1;310:6;306:14;299:57;182:181;:::o;369:366::-;511:3;532:67;596:2;591:3;532:67;:::i;:::-;525:74;;608:93;697:3;608:93;:::i;:::-;726:2;721:3;717:12;710:19;;369:366;;;:::o;741:419::-;907:4;945:2;934:9;930:18;922:26;;994:9;988:4;984:20;980:1;969:9;965:17;958:47;1022:131;1148:4;1022:131;:::i;:::-;1014:139;;741:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "118000",
								"executionCost": "165",
								"totalCost": "118165"
							},
							"external": {
								"hackTrail()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 982,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 251,
									"end": 982,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 251,
									"end": 982,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 982,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 982,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 982,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 251,
									"end": 982,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 982,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 251,
									"end": 982,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 982,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 982,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 251,
									"end": 982,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 982,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 251,
									"end": 982,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 251,
									"end": 982,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 982,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 982,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 982,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 982,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 251,
									"end": 982,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 982,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4ee5cdcbadc43da6ffbac384cdfa5f44cd097cba37c84294f030da75cb5059864736f6c634300080a0033",
									".code": [
										{
											"begin": 251,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "157BCA60"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 868,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "CD7AB80DA7C893F86FA8DEDDF862B74D94F4478E"
										},
										{
											"begin": 840,
											"end": 845,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 835,
											"end": 870,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 897,
											"end": 898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 887,
											"end": 899,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 884,
											"end": 961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 884,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 884,
											"end": 961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 929,
											"end": 945,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 946,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 884,
											"end": 961,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 884,
											"end": 961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 807,
											"end": 972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 982,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 540,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 540,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 752,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 540,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 540,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 540,
											"end": 752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 540,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 752,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 540,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 540,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 540,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 540,
											"end": 752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 540,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 540,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 752,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 540,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 0,
											"value": "798349E06C67272465123B91BD88C5D19B8C7878"
										},
										{
											"begin": 411,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 411,
											"end": 476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 411,
											"end": 421,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 411,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 411,
											"end": 476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 411,
											"end": 476,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 403,
											"end": 512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 403,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 403,
											"end": 512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 403,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 403,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 403,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 403,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 590,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "CD7AB80DA7C893F86FA8DEDDF862B74D94F4478E"
										},
										{
											"begin": 590,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 649,
											"end": 658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 649,
											"end": 666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "PUSH",
											"source": 0,
											"value": "4C228CC7"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 649,
											"end": 668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 649,
											"end": 668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "798349E06C67272465123B91BD88C5D19B8C7878"
										},
										{
											"begin": 679,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 679,
											"end": 744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 679,
											"end": 744,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 182,
											"end": 363,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 182,
											"end": 363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 322,
											"end": 355,
											"name": "PUSH",
											"source": 1,
											"value": "6C6F6C20686F772064696420796F75206576656E2066696E6420746869733F00"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 299,
											"end": 356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 182,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 363,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 369,
											"end": 735,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 596,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 591,
											"end": 594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 532,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 532,
											"end": 599,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 599,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 532,
											"end": 599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 608,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 697,
											"end": 700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 608,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 608,
											"end": 701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 608,
											"end": 701,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 608,
											"end": 701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 726,
											"end": 728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 717,
											"end": 729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 369,
											"end": 735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 369,
											"end": 735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 369,
											"end": 735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 369,
											"end": 735,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 741,
											"end": 1160,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 741,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 907,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 922,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 922,
											"end": 948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1004,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 980,
											"end": 981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 965,
											"end": 982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1148,
											"end": 1152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1022,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1022,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 741,
											"end": 1160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 741,
											"end": 1160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 1160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 741,
											"end": 1160,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"hackTrail()": "157bca60"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"hackTrail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"trailOfBits.sol\":\"hackingTrail\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"trailOfBits.sol\":{\"keccak256\":\"0x342ceeffe5808bcfa2734b4acf19c976e292f623e00cec5f7fe5bad6c3118f29\",\"urls\":[\"bzz-raw://d9c2a36741fde954abe1d4cf58460c1d3f55aa52a23be33b4cdc3e4ea22773aa\",\"dweb:/ipfs/QmUbF2oHtQzJdjWTdm9rgMhNDj3zPffz2Z9TUaS5hBduQW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> trailOfBits.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "trailOfBits.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"trailOfBits.sol": {
				"ast": {
					"absolutePath": "trailOfBits.sol",
					"exportedSymbols": {
						"IChallenge": [
							10
						],
						"hackingTrail": [
							59
						]
					},
					"id": 60,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IChallenge",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "IChallenge",
							"nameLocation": "148:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "548853a0",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exploit_me",
									"nameLocation": "174:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "193:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "184:16:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:0:0"
									},
									"scope": 10,
									"src": "165:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4c228cc7",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lock_me",
									"nameLocation": "225:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:0:0"
									},
									"scope": 10,
									"src": "216:28:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 60,
							"src": "138:109:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "hackingTrail",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 59,
							"linearizedBaseContracts": [
								59
							],
							"name": "hackingTrail",
							"nameLocation": "260:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "challengeAddr",
									"nameLocation": "307:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 59,
									"src": "282:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "282:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863443741423830446137433839336638366641386465444466383632623734443934663434373845",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "323:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xcD7AB80Da7C893f86fA8deDDf862b74D94f4478E"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "392:140:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 16,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "411:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "411:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837393833343945303663363732373234363531323342393162643838433564313962386337383738",
																		"id": 20,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "433:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"value": "0x798349E06c67272465123B91bd88C5d19b8c7878"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "425:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 18,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "425:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "425:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "411:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "478:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22",
																"typeString": "literal_string \"lol how did you even find this?\""
															},
															"value": "lol how did you even find this?"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22",
																"typeString": "literal_string \"lol how did you even find this?\""
															}
														],
														"id": 15,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "403:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "403:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "403:109:0"
											},
											{
												"id": 26,
												"nodeType": "PlaceholderStatement",
												"src": "523:1:0"
											}
										]
									},
									"id": 28,
									"name": "onlyRoki",
									"nameLocation": "383:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:0:0"
									},
									"src": "374:158:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "579:173:0",
										"statements": [
											{
												"assignments": [
													35
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"mutability": "mutable",
														"name": "challenge",
														"nameLocation": "601:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "590:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IChallenge_$10",
															"typeString": "contract IChallenge"
														},
														"typeName": {
															"id": 34,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 33,
																"name": "IChallenge",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "590:10:0"
															},
															"referencedDeclaration": 10,
															"src": "590:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IChallenge_$10",
																"typeString": "contract IChallenge"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 39,
												"initialValue": {
													"arguments": [
														{
															"id": 37,
															"name": "challengeAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "624:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 36,
														"name": "IChallenge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "613:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IChallenge_$10_$",
															"typeString": "type(contract IChallenge)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "613:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IChallenge_$10",
														"typeString": "contract IChallenge"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "590:48:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 40,
															"name": "challenge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "649:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IChallenge_$10",
																"typeString": "contract IChallenge"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lock_me",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "649:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "649:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "649:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307837393833343945303663363732373234363531323342393162643838433564313962386337383738",
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "700:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x798349E06c67272465123B91bd88C5d19b8c7878"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "692:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 46,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "692:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "692:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 45,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "679:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "679:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "679:65:0"
											}
										]
									},
									"functionSelector": "157bca60",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 31,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 30,
												"name": "onlyRoki",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "570:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "570:8:0"
										}
									],
									"name": "hackTrail",
									"nameLocation": "549:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "558:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "579:0:0"
									},
									"scope": 59,
									"src": "540:212:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "787:192:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "807:165:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "822:48:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:5:0"
																	},
																	{
																		"name": "challengeAddr",
																		"nodeType": "YulIdentifier",
																		"src": "846:13:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "860:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "862:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "864:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "866:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "868:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "835:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:35:0"
															},
															"variables": [
																{
																	"name": "check",
																	"nodeType": "YulTypedName",
																	"src": "826:5:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "900:61:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "926:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "929:14:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "929:16:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "919:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "919:27:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "919:27:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "check",
																		"nodeType": "YulIdentifier",
																		"src": "890:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "897:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "887:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "887:12:0"
															},
															"nodeType": "YulIf",
															"src": "884:77:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "846:13:0",
														"valueSize": 1
													}
												],
												"id": 56,
												"nodeType": "InlineAssembly",
												"src": "798:174:0"
											}
										]
									},
									"id": 58,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "787:0:0"
									},
									"scope": 59,
									"src": "760:219:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 60,
							"src": "251:731:0",
							"usedErrors": []
						}
					],
					"src": "0:982:0"
				},
				"id": 0
			}
		}
	}
}