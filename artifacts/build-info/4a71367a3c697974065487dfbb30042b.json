{
	"id": "4a71367a3c697974065487dfbb30042b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "pragma solidity 0.8.7;\r\n\r\ncontract contracts_proper {\r\n\r\n    address immutable a;\r\n    address immutable b;\r\n    address immutable c;\r\n    uint8 immutable f;\r\n    uint256 immutable d;\r\n    uint256 e;\r\n\r\n    constructor (){\r\n        a = address(0);\r\n        b = address(0);\r\n        c = address(0);\r\n        d = 1;\r\n        e = 1;\r\n        f = 1;\r\n    }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"contracts_proper": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":26:357  contract contracts_proper {\r... */\n  mstore(0x40, 0x0120)\n    /* \"test.sol\":207:352  constructor (){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"test.sol\":244:245  0 */\n  0x00\n    /* \"test.sol\":232:246  a = address(0) */\n  0x80\n  dup2\n  swap1\n  mstore\n    /* \"test.sol\":257:271  b = address(0) */\n  0xa0\n  dup2\n  swap1\n  mstore\n    /* \"test.sol\":282:296  c = address(0) */\n  0xc0\n  dup2\n  swap1\n  mstore\n    /* \"test.sol\":311:312  1 */\n  0x01\n    /* \"test.sol\":307:312  d = 1 */\n  0x0100\n  dup2\n  swap1\n  mstore\n    /* \"test.sol\":323:328  e = 1 */\n  dup1\n  dup3\n  sstore\n  shl(0xf8, 0x01)\n    /* \"test.sol\":339:344  f = 1 */\n  0xe0\n  mstore\n    /* \"test.sol\":244:245  0 */\n  dup2\n  swap1\n  dup2\n  swap1\n    /* \"test.sol\":311:312  1 */\n  dup1\n    /* \"test.sol\":26:357  contract contracts_proper {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"test.sol\":244:245  0 */\n  dup5\n    /* \"test.sol\":26:357  contract contracts_proper {\r... */\n  codecopy\n  0x00\n  assignImmutable(\"0x7880aec93413f117ef14bd4e6d130875ab2c7d7d55a064fac3c2f7bd51516380\")\n  0x00\n  assignImmutable(\"0xd2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb\")\n  0x00\n  assignImmutable(\"0x52f1a9b320cab38e5da8a8f97989383aab0a49165fc91c737310e4f7e9821021\")\n  0x00\n  assignImmutable(\"0xceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c1\")\n  0x00\n  assignImmutable(\"0x2a80e1ef1d7842f27f2e6be0972bb708b9a135c38860dbe73c27c3486c34f4de\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":26:357  contract contracts_proper {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208ad1dfb51521e7f24ba42174f761d3d495a611c5cf7958210ff545f107704bb264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "610120604052348015601057600080fd5b506000608081905260a081905260c08190526001610100819052808255600160f81b60e0528190819080603f605b84396000505060005050600050506000505060005050603f6000f3fe6080604052600080fdfea26469706673582212208ad1dfb51521e7f24ba42174f761d3d495a611c5cf7958210ff545f107704bb264736f6c63430008070033",
							"opcodes": "PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH2 0x100 DUP2 SWAP1 MSTORE DUP1 DUP3 SSTORE PUSH1 0x1 PUSH1 0xF8 SHL PUSH1 0xE0 MSTORE DUP2 SWAP1 DUP2 SWAP1 DUP1 PUSH1 0x3F PUSH1 0x5B DUP5 CODECOPY PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x0 POP POP PUSH1 0x3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD1 0xDF 0xB5 ISZERO 0x21 0xE7 CALLCODE 0x4B LOG4 0x21 PUSH21 0xF761D3D495A611C5CF7958210FF545F107704BB264 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "26:331:0:-:0;;;207:145;;;;;;;;;-1:-1:-1;244:1:0;232:14;;;;257;;;;282;;;;311:1;307:5;;;;323;;;-1:-1:-1;;;339:5:0;;244:1;;;;311;26:331;;244:1;26:331;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212208ad1dfb51521e7f24ba42174f761d3d495a611c5cf7958210ff545f107704bb264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD1 0xDF 0xB5 ISZERO 0x21 0xE7 CALLCODE 0x4B LOG4 0x21 PUSH21 0xF761D3D495A611C5CF7958210FF545F107704BB264 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "26:331:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 207,
									"end": 352,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 207,
									"end": 352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 207,
									"end": 352,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 207,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 352,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 207,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 207,
									"end": 352,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 207,
									"end": 352,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 352,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 244,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 246,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 246,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 232,
									"end": 246,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 232,
									"end": 246,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 257,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 257,
									"end": 271,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 257,
									"end": 271,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 271,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 282,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 282,
									"end": 296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 282,
									"end": 296,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 282,
									"end": 296,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 311,
									"end": 312,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 307,
									"end": 312,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 307,
									"end": 312,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 307,
									"end": 312,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 307,
									"end": 312,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 323,
									"end": 328,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 323,
									"end": 328,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 323,
									"end": 328,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 339,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 339,
									"end": 344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 244,
									"end": 245,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 244,
									"end": 245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 244,
									"end": 245,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 311,
									"end": 312,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 357,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 245,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 26,
									"end": 357,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 357,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ad1dfb51521e7f24ba42174f761d3d495a611c5cf7958210ff545f107704bb264736f6c63430008070033",
									".code": [
										{
											"begin": 26,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 357,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"contracts_proper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x3a995b7b2b6e3207cd54216dea825cf08767ca09adae896d893f1ff37188ce08\",\"urls\":[\"bzz-raw://470ad4e6129fc4406a2ad2664a4649e783451c100b76ca80d7ec642d48a5311d\",\"dweb:/ipfs/QmacaHJhNpFsJ6Be6Wqykdq26LH44omq4aWeo7vmBXDtaK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "test.sol:contracts_proper",
								"label": "e",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"contracts_proper": [
							51
						]
					},
					"id": 52,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 51,
							"linearizedBaseContracts": [
								51
							],
							"name": "contracts_proper",
							"nameLocation": "35:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "immutable",
									"name": "a",
									"nameLocation": "79:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "61:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "61:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "immutable",
									"name": "b",
									"nameLocation": "105:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "87:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "87:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "immutable",
									"name": "c",
									"nameLocation": "131:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "113:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "113:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "immutable",
									"name": "f",
									"nameLocation": "155:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "139:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 8,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "139:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "immutable",
									"name": "d",
									"nameLocation": "181:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "163:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "163:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "e",
									"nameLocation": "197:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "189:9:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "189:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "221:131:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "232:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "244:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "236:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 17,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "236:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "236:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "232:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "232:14:0"
											},
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 23,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "257:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "269:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 24,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "261:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "261:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "257:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "257:14:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 30,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "282:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "294:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "286:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "286:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "286:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "282:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "282:14:0"
											},
											{
												"expression": {
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 37,
														"name": "d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "307:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "311:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "307:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "307:5:0"
											},
											{
												"expression": {
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 41,
														"name": "e",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "323:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "327:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "323:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "323:5:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 45,
														"name": "f",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "339:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "343:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "339:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "339:5:0"
											}
										]
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "219:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "221:0:0"
									},
									"scope": 51,
									"src": "207:145:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 52,
							"src": "26:331:0",
							"usedErrors": []
						}
					],
					"src": "0:359:0"
				},
				"id": 0
			}
		}
	}
}