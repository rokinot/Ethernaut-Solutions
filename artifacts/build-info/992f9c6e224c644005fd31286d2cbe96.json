{
	"id": "992f9c6e224c644005fd31286d2cbe96",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "pragma solidity 0.8.7;\r\n\r\ncontract contracts {\r\n\r\n    uint16 public constant TEST = 0x4;\r\n    uint16 public constant TEST2 = 0x8;\r\n    uint16 public constant TEST3 = 0xc0;\r\n\r\n    /*function test (uint256 aux) external pure returns (bool success) {\r\n        assembly {\r\n            success := or(TEST, aux)\r\n        }\r\n    }*/\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"contracts": {
					"abi": [
						{
							"inputs": [],
							"name": "TEST",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TEST2",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TEST3",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":26:330  contract contracts {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":26:330  contract contracts {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02dc02d5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x51d977a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc026b5e9\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test.sol\":135:170  uint16 public constant TEST3 = 0xc0 */\n    tag_3:\n      tag_6\n        /* \"test.sol\":166:170  0xc0 */\n      0xc0\n        /* \"test.sol\":135:170  uint16 public constant TEST3 = 0xc0 */\n      dup2\n      jump\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":188:194   */\n      0xffff\n        /* \"#utility.yul\":176:195   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":158:196   */\n      dup2\n      mstore\n        /* \"#utility.yul\":146:148   */\n      0x20\n        /* \"#utility.yul\":131:149   */\n      add\n        /* \"test.sol\":135:170  uint16 public constant TEST3 = 0xc0 */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":54:87  uint16 public constant TEST = 0x4 */\n    tag_4:\n      tag_6\n        /* \"test.sol\":84:87  0x4 */\n      0x04\n        /* \"test.sol\":54:87  uint16 public constant TEST = 0x4 */\n      dup2\n      jump\n        /* \"test.sol\":94:128  uint16 public constant TEST2 = 0x8 */\n    tag_5:\n      tag_6\n        /* \"test.sol\":125:128  0x8 */\n      0x08\n        /* \"test.sol\":94:128  uint16 public constant TEST2 = 0x8 */\n      dup2\n      jump\n\n    auxdata: 0xa2646970667358221220d65a876edcae094c237c4f25558e2f4d7c03ab66607dee84afa197bb2b04f1e564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060a38061001e6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806302dc02d514604157806351d977a614605f578063c026b5e9146066575b600080fd5b604860c081565b60405161ffff909116815260200160405180910390f35b6048600481565b604860088156fea2646970667358221220d65a876edcae094c237c4f25558e2f4d7c03ab66607dee84afa197bb2b04f1e564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA3 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DC02D5 EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x51D977A6 EQ PUSH1 0x5F JUMPI DUP1 PUSH4 0xC026B5E9 EQ PUSH1 0x66 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x48 PUSH1 0xC0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x48 PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH1 0x48 PUSH1 0x8 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 GAS DUP8 PUSH15 0xDCAE094C237C4F25558E2F4D7C03AB PUSH7 0x607DEE84AFA197 0xBB 0x2B DIV CALL 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "26:304:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TEST2_7": {
									"entryPoint": null,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TEST3_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TEST_4": {
									"entryPoint": null,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:204:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "113:89:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "123:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "131:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "188:6:1",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "176:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "158:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "158:38:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "82:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "104:4:1",
														"type": ""
													}
												],
												"src": "14:188:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060043610603c5760003560e01c806302dc02d514604157806351d977a614605f578063c026b5e9146066575b600080fd5b604860c081565b60405161ffff909116815260200160405180910390f35b6048600481565b604860088156fea2646970667358221220d65a876edcae094c237c4f25558e2f4d7c03ab66607dee84afa197bb2b04f1e564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DC02D5 EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x51D977A6 EQ PUSH1 0x5F JUMPI DUP1 PUSH4 0xC026B5E9 EQ PUSH1 0x66 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x48 PUSH1 0xC0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x48 PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH1 0x48 PUSH1 0x8 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 GAS DUP8 PUSH15 0xDCAE094C237C4F25558E2F4D7C03AB PUSH7 0x607DEE84AFA197 0xBB 0x2B DIV CALL 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "26:304:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;135:35;;166:4;135:35;;;;;188:6:1;176:19;;;158:38;;146:2;131:18;135:35:0;;;;;;;54:33;;84:3;54:33;;94:34;;125:3;94:34;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "32600",
								"executionCost": "87",
								"totalCost": "32687"
							},
							"external": {
								"TEST()": "192",
								"TEST2()": "214",
								"TEST3()": "170"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 330,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 330,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 330,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 330,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 330,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 330,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 330,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 330,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 330,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 330,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 330,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 330,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 330,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 330,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 330,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 330,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d65a876edcae094c237c4f25558e2f4d7c03ab66607dee84afa197bb2b04f1e564736f6c63430008070033",
									".code": [
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "2DC02D5"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "51D977A6"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "C026B5E9"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 330,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 135,
											"end": 170,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 135,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 166,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 135,
											"end": 170,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 135,
											"end": 170,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 135,
											"end": 170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 135,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 188,
											"end": 194,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 176,
											"end": 195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 176,
											"end": 195,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 158,
											"end": 196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 158,
											"end": 196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 135,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 135,
											"end": 170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 135,
											"end": 170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 135,
											"end": 170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 135,
											"end": 170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 135,
											"end": 170,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 54,
											"end": 87,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54,
											"end": 87,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54,
											"end": 87,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 84,
											"end": 87,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54,
											"end": 87,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54,
											"end": 87,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 94,
											"end": 128,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 94,
											"end": 128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 94,
											"end": 128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 125,
											"end": 128,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 94,
											"end": 128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 94,
											"end": 128,
											"name": "JUMP",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"TEST()": "51d977a6",
							"TEST2()": "c026b5e9",
							"TEST3()": "02dc02d5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TEST\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEST2\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEST3\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"contracts\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x58bb2f9283c3a127d6b1eec1efee8a89e3a65eeebef893a3c77d4f1edfb57f8f\",\"urls\":[\"bzz-raw://3edefb5290ab528a54b271261c7bbffe9ada8a618b45aa035cfc2f94a0d8bea7\",\"dweb:/ipfs/QmdhhVMPJKhuyFN9FtnD8WQu7H1R9iho7X9oi93nwBirgr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"contracts": [
							11
						]
					},
					"id": 12,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "contracts",
							"nameLocation": "35:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "51d977a6",
									"id": 4,
									"mutability": "constant",
									"name": "TEST",
									"nameLocation": "77:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "54:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 2,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "54:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "307834",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "84:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "0x4"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c026b5e9",
									"id": 7,
									"mutability": "constant",
									"name": "TEST2",
									"nameLocation": "117:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "94:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 5,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "94:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "307838",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "125:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "0x8"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "02dc02d5",
									"id": 10,
									"mutability": "constant",
									"name": "TEST3",
									"nameLocation": "158:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "135:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 8,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "135:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "30786330",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "166:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "public"
								}
							],
							"scope": 12,
							"src": "26:304:0",
							"usedErrors": []
						}
					],
					"src": "0:332:0"
				},
				"id": 0
			}
		}
	}
}