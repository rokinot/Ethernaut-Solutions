{
	"id": "bc48c2b373d0207929b8d04a8698a20c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\ncontract NFTEscrow {\r\n\r\n    struct PoolInfo {\r\n        uint256 allocPoint;\r\n        uint256 lastRewardBlock;\r\n        uint256 accRewardPerShare;\r\n    }\r\n\r\n    PoolInfo[] public poolInfo;\r\n\r\n    function add(uint256 _allocPoint) external {\r\n\r\n        uint256 lastRewardBlock = _blockNumber(); //90240\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: lastRewardBlock,\r\n                accRewardPerShare: 0\r\n            })\r\n        );\r\n    }\r\n\r\n    function _blockNumber() internal view returns (uint256) {\r\n        return _normalizeBlockNumber(block.number);\r\n    }\r\n\r\n    /// @dev Normalizes `blockNumber` to fit within the bounds of an epoch.\r\n    /// This is done to ensure that no rewards are distributed for staking outside of an epoch without modifying the reward logic.\r\n    /// For example:\r\n    /// `blockNumber` is 1100, the epoch's `endBlock` is 1000. In this case the function would return 1000. If this value were to be used\r\n    /// in the {_updatePool} function, where the pool's `lastRewardBlock` is 990, only the rewards from block 990 to block 1000 would be distributed\r\n    /// @return Normalized `blockNumber`\r\n    function _normalizeBlockNumber(uint256 blockNumber)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        if (blockNumber < 5) return 5;\r\n\r\n        if (blockNumber > 10) return 10;\r\n\r\n        return blockNumber;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"NFTEscrow": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accRewardPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":64:1514  contract NFTEscrow {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":64:1514  contract NFTEscrow {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1003e2d2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test.sol\":258:577  function add(uint256 _allocPoint) external {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"test.sol\":223:249  PoolInfo[] public poolInfo */\n    tag_4:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_10:\n      tag_11\n      jump\t// in\n    tag_9:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":401:426   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":457:459   */\n      0x20\n        /* \"#utility.yul\":442:460   */\n      dup5\n      add\n        /* \"#utility.yul\":435:469   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":485:503   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":478:512   */\n      mstore\n        /* \"#utility.yul\":389:391   */\n      0x60\n        /* \"#utility.yul\":374:392   */\n      add\n        /* \"test.sol\":223:249  PoolInfo[] public poolInfo */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":258:577  function add(uint256 _allocPoint) external {\r... */\n    tag_8:\n        /* \"test.sol\":314:337  uint256 lastRewardBlock */\n      0x00\n        /* \"test.sol\":340:354  _blockNumber() */\n      tag_15\n        /* \"test.sol\":340:352  _blockNumber */\n      tag_16\n        /* \"test.sol\":340:354  _blockNumber() */\n      jump\t// in\n    tag_15:\n        /* \"test.sol\":401:558  PoolInfo({\r... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      swap4\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n      swap2\n      dup3\n      mstore\n      0x00\n      swap1\n      dup5\n      add\n      dup2\n      dup2\n      mstore\n        /* \"test.sol\":373:569  poolInfo.push(\r... */\n      dup2\n      sload\n      0x01\n      dup2\n      add\n      dup4\n      sstore\n      swap2\n      dup1\n      mstore\n      swap4\n      mload\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n      0x03\n      swap1\n      swap3\n      mul\n      swap2\n      dup3\n      add\n      sstore\n      swap1\n      mload\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564\n      dup3\n      add\n      sstore\n      swap2\n      mload\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"test.sol\":258:577  function add(uint256 _allocPoint) external {\r... */\n      jump\t// out\n        /* \"test.sol\":223:249  PoolInfo[] public poolInfo */\n    tag_11:\n      0x00\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap3\n      pop\n      dup4\n      jump\t// out\n        /* \"test.sol\":585:702  function _blockNumber() internal view returns (uint256) {\r... */\n    tag_16:\n        /* \"test.sol\":632:639  uint256 */\n      0x00\n        /* \"test.sol\":659:694  _normalizeBlockNumber(block.number) */\n      tag_21\n        /* \"test.sol\":681:693  block.number */\n      number\n        /* \"test.sol\":659:680  _normalizeBlockNumber */\n      tag_22\n        /* \"test.sol\":659:694  _normalizeBlockNumber(block.number) */\n      jump\t// in\n    tag_21:\n        /* \"test.sol\":652:694  return _normalizeBlockNumber(block.number) */\n      swap1\n      pop\n        /* \"test.sol\":585:702  function _blockNumber() internal view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"test.sol\":1272:1511  function _normalizeBlockNumber(uint256 blockNumber)\r... */\n    tag_22:\n        /* \"test.sol\":1374:1381  uint256 */\n      0x00\n        /* \"test.sol\":1417:1418  5 */\n      0x05\n        /* \"test.sol\":1403:1414  blockNumber */\n      dup3\n        /* \"test.sol\":1403:1418  blockNumber < 5 */\n      lt\n        /* \"test.sol\":1399:1428  if (blockNumber < 5) return 5 */\n      iszero\n      tag_24\n      jumpi\n      pop\n        /* \"test.sol\":1427:1428  5 */\n      0x05\n      swap2\n        /* \"test.sol\":1272:1511  function _normalizeBlockNumber(uint256 blockNumber)\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"test.sol\":1399:1428  if (blockNumber < 5) return 5 */\n    tag_24:\n        /* \"test.sol\":1459:1461  10 */\n      0x0a\n        /* \"test.sol\":1445:1456  blockNumber */\n      dup3\n        /* \"test.sol\":1445:1461  blockNumber > 10 */\n      gt\n        /* \"test.sol\":1441:1472  if (blockNumber > 10) return 10 */\n      iszero\n      tag_25\n      jumpi\n      pop\n        /* \"test.sol\":1470:1472  10 */\n      0x0a\n      swap2\n        /* \"test.sol\":1272:1511  function _normalizeBlockNumber(uint256 blockNumber)\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"test.sol\":1441:1472  if (blockNumber > 10) return 10 */\n    tag_25:\n      pop\n        /* \"test.sol\":1492:1503  blockNumber */\n      swap1\n        /* \"test.sol\":1272:1511  function _normalizeBlockNumber(uint256 blockNumber)\r... */\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_7:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_28:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206d623acc7b09686cc06ed0b2e99a7850caa7de9c9e040d4abc2edca2ffa45bbc64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101ec806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631003e2d21461003b5780631526fe2714610050575b600080fd5b61004e61004936600461019d565b610082565b005b61006361005e36600461019d565b610132565b6040805193845260208401929092529082015260600160405180910390f35b600061008c610165565b60408051606081018252938452602084019182526000908401818152815460018101835591805293517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56360039092029182015590517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56482015591517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5659092019190915550565b6000818154811061014257600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600061017043610175565b905090565b6000600582101561018857506005919050565b600a8211156101995750600a919050565b5090565b6000602082840312156101af57600080fd5b503591905056fea26469706673582212206d623acc7b09686cc06ed0b2e99a7850caa7de9c9e040d4abc2edca2ffa45bbc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1003E2D2 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x8C PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP5 ADD DUP2 DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE SWAP2 DUP1 MSTORE SWAP4 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP3 ADD SSTORE SWAP2 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170 NUMBER PUSH2 0x175 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x188 JUMPI POP PUSH1 0x5 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA DUP3 GT ISZERO PUSH2 0x199 JUMPI POP PUSH1 0xA SWAP2 SWAP1 POP JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x623ACC7B09686CC06ED0B2E99A78 POP 0xCA 0xA7 0xDE SWAP13 SWAP15 DIV 0xD 0x4A 0xBC 0x2E 0xDC LOG2 SELFDESTRUCT LOG4 JUMPDEST 0xBC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "64:1450:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_blockNumber_44": {
									"entryPoint": 357,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_normalizeBlockNumber_67": {
									"entryPoint": 373,
									"id": 67,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_33": {
									"entryPoint": 130,
									"id": 33,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@poolInfo_12": {
									"entryPoint": 306,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:520:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "356:162:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "366:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "378:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "389:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "374:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "374:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "366:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "408:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "401:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "446:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "457:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "442:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "442:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "462:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "435:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "435:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "500:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "485:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "505:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "478:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "478:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "478:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "309:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "320:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "328:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "336:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "347:4:1",
														"type": ""
													}
												],
												"src": "199:319:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631003e2d21461003b5780631526fe2714610050575b600080fd5b61004e61004936600461019d565b610082565b005b61006361005e36600461019d565b610132565b6040805193845260208401929092529082015260600160405180910390f35b600061008c610165565b60408051606081018252938452602084019182526000908401818152815460018101835591805293517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56360039092029182015590517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56482015591517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5659092019190915550565b6000818154811061014257600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600061017043610175565b905090565b6000600582101561018857506005919050565b600a8211156101995750600a919050565b5090565b6000602082840312156101af57600080fd5b503591905056fea26469706673582212206d623acc7b09686cc06ed0b2e99a7850caa7de9c9e040d4abc2edca2ffa45bbc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1003E2D2 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x8C PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP5 ADD DUP2 DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE SWAP2 DUP1 MSTORE SWAP4 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP3 ADD SSTORE SWAP2 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170 NUMBER PUSH2 0x175 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x188 JUMPI POP PUSH1 0x5 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA DUP3 GT ISZERO PUSH2 0x199 JUMPI POP PUSH1 0xA SWAP2 SWAP1 POP JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x623ACC7B09686CC06ED0B2E99A78 POP 0xCA 0xA7 0xDE SWAP13 SWAP15 DIV 0xD 0x4A 0xBC 0x2E 0xDC LOG2 SELFDESTRUCT LOG4 JUMPDEST 0xBC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "64:1450:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;258:319;;;;;;:::i;:::-;;:::i;:::-;;223:26;;;;;;:::i;:::-;;:::i;:::-;;;;401:25:1;;;457:2;442:18;;435:34;;;;485:18;;;478:34;389:2;374:18;223:26:0;;;;;;;258:319;314:23;340:14;:12;:14::i;:::-;401:157;;;;;;;;;;;;;;;;;-1:-1:-1;401:157:0;;;;;;373:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;258:319:0:o;223:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;223:26:0;:::o;585:117::-;632:7;659:35;681:12;659:21;:35::i;:::-;652:42;;585:117;:::o;1272:239::-;1374:7;1417:1;1403:11;:15;1399:29;;;-1:-1:-1;1427:1:0;;1272:239;-1:-1:-1;1272:239:0:o;1399:29::-;1459:2;1445:11;:16;1441:31;;;-1:-1:-1;1470:2:0;;1272:239;-1:-1:-1;1272:239:0:o;1441:31::-;-1:-1:-1;1492:11:0;1272:239::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "98400",
								"executionCost": "147",
								"totalCost": "98547"
							},
							"external": {
								"add(uint256)": "73914",
								"poolInfo(uint256)": "8846"
							},
							"internal": {
								"_blockNumber()": "113",
								"_normalizeBlockNumber(uint256)": "76"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 1514,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1514,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d623acc7b09686cc06ed0b2e99a7850caa7de9c9e040d4abc2edca2ffa45bbc64736f6c63430008070033",
									".code": [
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH",
											"source": 0,
											"value": "1003E2D2"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 258,
											"end": 577,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 258,
											"end": 577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 258,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 258,
											"end": 577,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 258,
											"end": 577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 577,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 258,
											"end": 577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 258,
											"end": 577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 577,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 258,
											"end": 577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 577,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 426,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 401,
											"end": 426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 401,
											"end": 426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 442,
											"end": 460,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 442,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 435,
											"end": 469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 435,
											"end": 469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 435,
											"end": 469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 485,
											"end": 503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 478,
											"end": 512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 389,
											"end": 391,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 374,
											"end": 392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 258,
											"end": 577,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 258,
											"end": 577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 314,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 340,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 340,
											"end": 354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 340,
											"end": 354,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 340,
											"end": 354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 401,
											"end": 558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
										},
										{
											"begin": 373,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564"
										},
										{
											"begin": 373,
											"end": 569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565"
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 569,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 258,
											"end": 577,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 585,
											"end": 702,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 585,
											"end": 702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 681,
											"end": 693,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 659,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 659,
											"end": 694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 659,
											"end": 694,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 659,
											"end": 694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 652,
											"end": 694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 702,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1272,
											"end": 1511,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1272,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 1414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1418,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1428,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1399,
											"end": 1428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1511,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1399,
											"end": 1428,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1399,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1445,
											"end": 1456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1461,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1441,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1470,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1470,
											"end": 1472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1511,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1441,
											"end": 1472,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1441,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1492,
											"end": 1503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1511,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"add(uint256)": "1003e2d2",
							"poolInfo(uint256)": "1526fe27"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accRewardPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"NFTEscrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0xc0e1a3d2a80a0fc76d460889531a3a1a0d8082b08986fa13cb768b3e661786c5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cbff54a4abcc2efdbe9208baea758510b085ee3bf2762e2a91964ac042f04bbe\",\"dweb:/ipfs/QmVNahWWUrWfGL1cMAvKn5HxQFL9Kcz74puxVMpM88sAWZ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> test.sol:36:5:\n   |\n36 |     function _normalizeBlockNumber(uint256 blockNumber)\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1511,
					"file": "test.sol",
					"start": 1272
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"NFTEscrow": [
							68
						]
					},
					"id": 69,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "NFTEscrow",
							"nameLocation": "73:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "NFTEscrow.PoolInfo",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "127:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "119:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "119:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "156:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "148:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "148:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "accRewardPerShare",
											"nameLocation": "190:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "182:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "182:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "99:8:0",
									"nodeType": "StructDefinition",
									"scope": 68,
									"src": "92:123:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 12,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "241:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 68,
									"src": "223:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$8_storage_$dyn_storage",
										"typeString": "struct NFTEscrow.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 10,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 9,
												"name": "PoolInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 8,
												"src": "223:8:0"
											},
											"referencedDeclaration": 8,
											"src": "223:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$8_storage_ptr",
												"typeString": "struct NFTEscrow.PoolInfo"
											}
										},
										"id": 11,
										"nodeType": "ArrayTypeName",
										"src": "223:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$8_storage_$dyn_storage_ptr",
											"typeString": "struct NFTEscrow.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "301:276:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "322:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 32,
														"src": "314:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "314:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "340:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "340:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "314:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 26,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "441:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 27,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "488:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "541:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 25,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "401:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$8_storage_ptr_$",
																	"typeString": "type(struct NFTEscrow.PoolInfo storage pointer)"
																}
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"allocPoint",
																"lastRewardBlock",
																"accRewardPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "401:157:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$8_memory_ptr",
																"typeString": "struct NFTEscrow.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$8_memory_ptr",
																"typeString": "struct NFTEscrow.PoolInfo memory"
															}
														],
														"expression": {
															"id": 22,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "373:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$8_storage_$dyn_storage",
																"typeString": "struct NFTEscrow.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "373:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$8_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$8_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$8_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTEscrow.PoolInfo storage ref[] storage pointer,struct NFTEscrow.PoolInfo storage ref)"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:196:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "373:196:0"
											}
										]
									},
									"functionSelector": "1003e2d2",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "267:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "279:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "271:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:21:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:0:0"
									},
									"scope": 68,
									"src": "258:319:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "641:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 39,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "681:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "681:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 38,
														"name": "_normalizeBlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "659:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "659:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 42,
												"nodeType": "Return",
												"src": "652:42:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_blockNumber",
									"nameLocation": "594:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "632:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:9:0"
									},
									"scope": 68,
									"src": "585:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1388:123:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 52,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1403:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "35",
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1417:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "1403:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 57,
												"nodeType": "IfStatement",
												"src": "1399:29:0",
												"trueBody": {
													"expression": {
														"hexValue": "35",
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1427:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"functionReturnParameters": 51,
													"id": 56,
													"nodeType": "Return",
													"src": "1420:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1445:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1459:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1445:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 63,
												"nodeType": "IfStatement",
												"src": "1441:31:0",
												"trueBody": {
													"expression": {
														"hexValue": "3130",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1470:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"functionReturnParameters": 51,
													"id": 62,
													"nodeType": "Return",
													"src": "1463:9:0"
												}
											},
											{
												"expression": {
													"id": 64,
													"name": "blockNumber",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 47,
													"src": "1492:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 51,
												"id": 65,
												"nodeType": "Return",
												"src": "1485:18:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "710:556:0",
										"text": "@dev Normalizes `blockNumber` to fit within the bounds of an epoch.\n This is done to ensure that no rewards are distributed for staking outside of an epoch without modifying the reward logic.\n For example:\n `blockNumber` is 1100, the epoch's `endBlock` is 1000. In this case the function would return 1000. If this value were to be used\n in the {_updatePool} function, where the pool's `lastRewardBlock` is 990, only the rewards from block 990 to block 1000 would be distributed\n @return Normalized `blockNumber`"
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_normalizeBlockNumber",
									"nameLocation": "1281:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "1311:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1303:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1302:21:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1374:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:9:0"
									},
									"scope": 68,
									"src": "1272:239:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 69,
							"src": "64:1450:0",
							"usedErrors": []
						}
					],
					"src": "37:1477:0"
				},
				"id": 0
			}
		}
	}
}