{
	"id": "3efc6fb4c47503b0f1ff194dd05a7fdd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\ncontract NFTEscrow {\r\n\r\n    struct PoolInfo {\r\n        uint256 allocPoint;\r\n        uint256 lastRewardBlock;\r\n        uint256 accRewardPerShare;\r\n    }\r\n\r\n    PoolInfo[] public poolInfo;\r\n\r\n    function addTest(uint256 _allocPoint) external {\r\n\r\n        //uint256 lastRewardBlock = _blockNumber(); //90240\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: _blockNumber(),\r\n                accRewardPerShare: 0\r\n            })\r\n        );\r\n    }\r\n\r\n    function _blockNumber() internal view returns (uint256) {\r\n        return _normalizeBlockNumber(block.number);\r\n    }\r\n\r\n    /// @dev Normalizes `blockNumber` to fit within the bounds of an epoch.\r\n    /// This is done to ensure that no rewards are distributed for staking outside of an epoch without modifying the reward logic.\r\n    /// For example:\r\n    /// `blockNumber` is 1100, the epoch's `endBlock` is 1000. In this case the function would return 1000. If this value were to be used\r\n    /// in the {_updatePool} function, where the pool's `lastRewardBlock` is 990, only the rewards from block 990 to block 1000 would be distributed\r\n    /// @return Normalized `blockNumber`\r\n    function _normalizeBlockNumber(uint256 blockNumber)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        if (blockNumber < 5) return 5;\r\n\r\n        if (blockNumber > 10) return 10;\r\n\r\n        return blockNumber;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"NFTEscrow": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								}
							],
							"name": "addTest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accRewardPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":64:1519  contract NFTEscrow {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":64:1519  contract NFTEscrow {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1526fe27\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa3dac5c7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test.sol\":223:249  PoolInfo[] public poolInfo */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":401:426   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":457:459   */\n      0x20\n        /* \"#utility.yul\":442:460   */\n      dup5\n      add\n        /* \"#utility.yul\":435:469   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":485:503   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":478:512   */\n      mstore\n        /* \"#utility.yul\":389:391   */\n      0x60\n        /* \"#utility.yul\":374:392   */\n      add\n        /* \"test.sol\":223:249  PoolInfo[] public poolInfo */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test.sol\":258:582  function addTest(uint256 _allocPoint) external {\r... */\n    tag_4:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      stop\n        /* \"test.sol\":223:249  PoolInfo[] public poolInfo */\n    tag_8:\n      0x00\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap3\n      pop\n      dup4\n      jump\t// out\n        /* \"test.sol\":258:582  function addTest(uint256 _allocPoint) external {\r... */\n    tag_13:\n        /* \"test.sol\":379:387  poolInfo */\n      0x00\n        /* \"test.sol\":407:563  PoolInfo({\r... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"test.sol\":447:458  _allocPoint */\n      dup4\n        /* \"test.sol\":407:563  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"test.sol\":494:508  _blockNumber() */\n      tag_17\n        /* \"test.sol\":494:506  _blockNumber */\n      tag_18\n        /* \"test.sol\":494:508  _blockNumber() */\n      jump\t// in\n    tag_17:\n        /* \"test.sol\":407:563  PoolInfo({\r... */\n      dup2\n      mstore\n        /* \"test.sol\":546:547  0 */\n      0x00\n        /* \"test.sol\":407:563  PoolInfo({\r... */\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"test.sol\":379:574  poolInfo.push(\r... */\n      dup4\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup7\n      sstore\n      swap5\n      dup3\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n      dup4\n      mload\n      0x03\n      swap1\n      swap3\n      mul\n      add\n      swap1\n      dup2\n      sstore\n      swap1\n      dup3\n      add\n      mload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n      0x40\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n      pop\n        /* \"test.sol\":258:582  function addTest(uint256 _allocPoint) external {\r... */\n      jump\t// out\n        /* \"test.sol\":590:707  function _blockNumber() internal view returns (uint256) {\r... */\n    tag_18:\n        /* \"test.sol\":637:644  uint256 */\n      0x00\n        /* \"test.sol\":664:699  _normalizeBlockNumber(block.number) */\n      tag_21\n        /* \"test.sol\":686:698  block.number */\n      number\n        /* \"test.sol\":664:685  _normalizeBlockNumber */\n      tag_22\n        /* \"test.sol\":664:699  _normalizeBlockNumber(block.number) */\n      jump\t// in\n    tag_21:\n        /* \"test.sol\":657:699  return _normalizeBlockNumber(block.number) */\n      swap1\n      pop\n        /* \"test.sol\":590:707  function _blockNumber() internal view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"test.sol\":1277:1516  function _normalizeBlockNumber(uint256 blockNumber)\r... */\n    tag_22:\n        /* \"test.sol\":1379:1386  uint256 */\n      0x00\n        /* \"test.sol\":1422:1423  5 */\n      0x05\n        /* \"test.sol\":1408:1419  blockNumber */\n      dup3\n        /* \"test.sol\":1408:1423  blockNumber < 5 */\n      lt\n        /* \"test.sol\":1404:1433  if (blockNumber < 5) return 5 */\n      iszero\n      tag_24\n      jumpi\n      pop\n        /* \"test.sol\":1432:1433  5 */\n      0x05\n      swap2\n        /* \"test.sol\":1277:1516  function _normalizeBlockNumber(uint256 blockNumber)\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"test.sol\":1404:1433  if (blockNumber < 5) return 5 */\n    tag_24:\n        /* \"test.sol\":1464:1466  10 */\n      0x0a\n        /* \"test.sol\":1450:1461  blockNumber */\n      dup3\n        /* \"test.sol\":1450:1466  blockNumber > 10 */\n      gt\n        /* \"test.sol\":1446:1477  if (blockNumber > 10) return 10 */\n      iszero\n      tag_25\n      jumpi\n      pop\n        /* \"test.sol\":1475:1477  10 */\n      0x0a\n      swap2\n        /* \"test.sol\":1277:1516  function _normalizeBlockNumber(uint256 blockNumber)\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"test.sol\":1446:1477  if (blockNumber > 10) return 10 */\n    tag_25:\n      pop\n        /* \"test.sol\":1497:1508  blockNumber */\n      swap1\n        /* \"test.sol\":1277:1516  function _normalizeBlockNumber(uint256 blockNumber)\r... */\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_7:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_28:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122077e935590c8bbc3c851584302afaf28e12337bdf51471324458dc9033bd242a664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610196806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631526fe271461003b578063a3dac5c71461006d575b600080fd5b61004e610049366004610147565b610082565b6040805193845260208401929092529082015260600160405180910390f35b61008061007b366004610147565b6100b5565b005b6000818154811061009257600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600060405180606001604052808381526020016100d061010f565b81526000602091820181905283546001818101865594825290829020835160039092020190815590820151928101929092556040015160029091015550565b600061011a4361011f565b905090565b6000600582101561013257506005919050565b600a8211156101435750600a919050565b5090565b60006020828403121561015957600080fd5b503591905056fea264697066735822122077e935590c8bbc3c851584302afaf28e12337bdf51471324458dc9033bd242a664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA3DAC5C7 EQ PUSH2 0x6D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x147 JUMP JUMPDEST PUSH2 0x82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x80 PUSH2 0x7B CALLDATASIZE PUSH1 0x4 PUSH2 0x147 JUMP JUMPDEST PUSH2 0xB5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD0 PUSH2 0x10F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A NUMBER PUSH2 0x11F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x132 JUMPI POP PUSH1 0x5 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA DUP3 GT ISZERO PUSH2 0x143 JUMPI POP PUSH1 0xA SWAP2 SWAP1 POP JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xE935590C8BBC3C851584302AFAF28E12337BDF5147132445 DUP14 0xC9 SUB EXTCODESIZE 0xD2 TIMESTAMP 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "64:1455:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_blockNumber_40": {
									"entryPoint": 271,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_normalizeBlockNumber_63": {
									"entryPoint": 287,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@addTest_29": {
									"entryPoint": 181,
									"id": 29,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@poolInfo_12": {
									"entryPoint": 130,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:520:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "356:162:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "366:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "378:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "389:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "374:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "374:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "366:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "408:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "401:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "446:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "457:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "442:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "442:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "462:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "435:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "435:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "500:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "485:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "505:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "478:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "478:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "478:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "309:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "320:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "328:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "336:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "347:4:1",
														"type": ""
													}
												],
												"src": "199:319:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631526fe271461003b578063a3dac5c71461006d575b600080fd5b61004e610049366004610147565b610082565b6040805193845260208401929092529082015260600160405180910390f35b61008061007b366004610147565b6100b5565b005b6000818154811061009257600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600060405180606001604052808381526020016100d061010f565b81526000602091820181905283546001818101865594825290829020835160039092020190815590820151928101929092556040015160029091015550565b600061011a4361011f565b905090565b6000600582101561013257506005919050565b600a8211156101435750600a919050565b5090565b60006020828403121561015957600080fd5b503591905056fea264697066735822122077e935590c8bbc3c851584302afaf28e12337bdf51471324458dc9033bd242a664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA3DAC5C7 EQ PUSH2 0x6D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x147 JUMP JUMPDEST PUSH2 0x82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x80 PUSH2 0x7B CALLDATASIZE PUSH1 0x4 PUSH2 0x147 JUMP JUMPDEST PUSH2 0xB5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD0 PUSH2 0x10F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A NUMBER PUSH2 0x11F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x132 JUMPI POP PUSH1 0x5 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA DUP3 GT ISZERO PUSH2 0x143 JUMPI POP PUSH1 0xA SWAP2 SWAP1 POP JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xE935590C8BBC3C851584302AFAF28E12337BDF5147132445 DUP14 0xC9 SUB EXTCODESIZE 0xD2 TIMESTAMP 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "64:1455:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;223:26;;;;;;:::i;:::-;;:::i;:::-;;;;401:25:1;;;457:2;442:18;;435:34;;;;485:18;;;478:34;389:2;374:18;223:26:0;;;;;;;258:324;;;;;;:::i;:::-;;:::i;:::-;;223:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;223:26:0;:::o;258:324::-;379:8;407:156;;;;;;;;447:11;407:156;;;;494:14;:12;:14::i;:::-;407:156;;546:1;407:156;;;;;;;379:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;258:324:0:o;590:117::-;637:7;664:35;686:12;664:21;:35::i;:::-;657:42;;590:117;:::o;1277:239::-;1379:7;1422:1;1408:11;:15;1404:29;;;-1:-1:-1;1432:1:0;;1277:239;-1:-1:-1;1277:239:0:o;1404:29::-;1464:2;1450:11;:16;1446:31;;;-1:-1:-1;1475:2:0;;1277:239;-1:-1:-1;1277:239:0:o;1446:31::-;-1:-1:-1;1497:11:0;1277:239::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "81200",
								"executionCost": "129",
								"totalCost": "81329"
							},
							"external": {
								"addTest(uint256)": "73987",
								"poolInfo(uint256)": "8824"
							},
							"internal": {
								"_blockNumber()": "113",
								"_normalizeBlockNumber(uint256)": "76"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 1519,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 1519,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122077e935590c8bbc3c851584302afaf28e12337bdf51471324458dc9033bd242a664736f6c63430008070033",
									".code": [
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "A3DAC5C7"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64,
											"end": 1519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 426,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 401,
											"end": 426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 401,
											"end": 426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 442,
											"end": 460,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 442,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 435,
											"end": 469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 435,
											"end": 469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 435,
											"end": 469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 485,
											"end": 503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 478,
											"end": 512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 389,
											"end": 391,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 374,
											"end": 392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 258,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 258,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 582,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 258,
											"end": 582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 258,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 582,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 223,
											"end": 249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 223,
											"end": 249,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 258,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 379,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 407,
											"end": 563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 494,
											"end": 508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 494,
											"end": 508,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 494,
											"end": 508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 546,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 407,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 379,
											"end": 574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 258,
											"end": 582,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 707,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 590,
											"end": 707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 637,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 686,
											"end": 698,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 664,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 664,
											"end": 699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 664,
											"end": 699,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 664,
											"end": 699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 657,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 707,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1277,
											"end": 1516,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1277,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1408,
											"end": 1419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1423,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1404,
											"end": 1433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1516,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1404,
											"end": 1433,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1404,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1450,
											"end": 1461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1466,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1446,
											"end": 1477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1475,
											"end": 1477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1516,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1446,
											"end": 1477,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1446,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1497,
											"end": 1508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1516,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addTest(uint256)": "a3dac5c7",
							"poolInfo(uint256)": "1526fe27"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"addTest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accRewardPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"NFTEscrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x1ea92197c042eb27feab51e017ea8246c909234e17b18e25dd72f61645c0fe11\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b59e81add9f0338c3798d50a2da83be6bd72124e72a542ec3500fc0e230d9b9a\",\"dweb:/ipfs/QmeXd6Qz1Sa4u7w2Nxri446cSKYnzi56yKcZ8Aza28BtTD\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> test.sol:36:5:\n   |\n36 |     function _normalizeBlockNumber(uint256 blockNumber)\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1516,
					"file": "test.sol",
					"start": 1277
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"NFTEscrow": [
							64
						]
					},
					"id": 65,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "NFTEscrow",
							"nameLocation": "73:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "NFTEscrow.PoolInfo",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "127:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "119:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "119:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "156:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "148:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "148:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "accRewardPerShare",
											"nameLocation": "190:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "182:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "182:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "99:8:0",
									"nodeType": "StructDefinition",
									"scope": 64,
									"src": "92:123:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 12,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "241:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "223:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$8_storage_$dyn_storage",
										"typeString": "struct NFTEscrow.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 10,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 9,
												"name": "PoolInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 8,
												"src": "223:8:0"
											},
											"referencedDeclaration": 8,
											"src": "223:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$8_storage_ptr",
												"typeString": "struct NFTEscrow.PoolInfo"
											}
										},
										"id": 11,
										"nodeType": "ArrayTypeName",
										"src": "223:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$8_storage_$dyn_storage_ptr",
											"typeString": "struct NFTEscrow.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "305:277:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 21,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "447:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 22,
																		"name": "_blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "494:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 23,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "494:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 24,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "546:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 20,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "407:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$8_storage_ptr_$",
																	"typeString": "type(struct NFTEscrow.PoolInfo storage pointer)"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"allocPoint",
																"lastRewardBlock",
																"accRewardPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "407:156:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$8_memory_ptr",
																"typeString": "struct NFTEscrow.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$8_memory_ptr",
																"typeString": "struct NFTEscrow.PoolInfo memory"
															}
														],
														"expression": {
															"id": 17,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "379:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$8_storage_$dyn_storage",
																"typeString": "struct NFTEscrow.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "379:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$8_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$8_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$8_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTEscrow.PoolInfo storage ref[] storage pointer,struct NFTEscrow.PoolInfo storage ref)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "379:195:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "379:195:0"
											}
										]
									},
									"functionSelector": "a3dac5c7",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addTest",
									"nameLocation": "267:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "283:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "275:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:21:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:0:0"
									},
									"scope": 64,
									"src": "258:324:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "646:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 35,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "686:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "686:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 34,
														"name": "_normalizeBlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "664:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "664:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 38,
												"nodeType": "Return",
												"src": "657:42:0"
											}
										]
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_blockNumber",
									"nameLocation": "599:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "637:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:9:0"
									},
									"scope": 64,
									"src": "590:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1393:123:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 48,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1408:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "35",
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1422:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "1408:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 53,
												"nodeType": "IfStatement",
												"src": "1404:29:0",
												"trueBody": {
													"expression": {
														"hexValue": "35",
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1432:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"functionReturnParameters": 47,
													"id": 52,
													"nodeType": "Return",
													"src": "1425:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 54,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1450:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130",
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1464:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1450:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 59,
												"nodeType": "IfStatement",
												"src": "1446:31:0",
												"trueBody": {
													"expression": {
														"hexValue": "3130",
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1475:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"functionReturnParameters": 47,
													"id": 58,
													"nodeType": "Return",
													"src": "1468:9:0"
												}
											},
											{
												"expression": {
													"id": 60,
													"name": "blockNumber",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 43,
													"src": "1497:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 47,
												"id": 61,
												"nodeType": "Return",
												"src": "1490:18:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "715:556:0",
										"text": "@dev Normalizes `blockNumber` to fit within the bounds of an epoch.\n This is done to ensure that no rewards are distributed for staking outside of an epoch without modifying the reward logic.\n For example:\n `blockNumber` is 1100, the epoch's `endBlock` is 1000. In this case the function would return 1000. If this value were to be used\n in the {_updatePool} function, where the pool's `lastRewardBlock` is 990, only the rewards from block 990 to block 1000 would be distributed\n @return Normalized `blockNumber`"
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_normalizeBlockNumber",
									"nameLocation": "1286:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "1316:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1308:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:21:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1379:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:9:0"
									},
									"scope": 64,
									"src": "1277:239:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "64:1455:0",
							"usedErrors": []
						}
					],
					"src": "37:1482:0"
				},
				"id": 0
			}
		}
	}
}