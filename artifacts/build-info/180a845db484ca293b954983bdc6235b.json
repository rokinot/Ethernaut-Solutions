{
	"id": "180a845db484ca293b954983bdc6235b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ethernautTelephone.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ninterface ITelephone {\r\n    function changeOwner(address _owner) external;\r\n}\r\n\r\ncontract Telephone {\r\n\r\n  address public owner;\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function changeOwner(address _owner) public {\r\n    if (tx.origin != msg.sender) {\r\n      owner = _owner;\r\n    }\r\n  }\r\n}\r\n\r\ncontract telephoneSolver {\r\n\r\n    function solve() external returns (bytes memory) {\r\n        address contractAddr = address(0x03cbED7039bDA6ae4523C6E7BB6579718A584f83);\r\n        \r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ethernautTelephone.sol": {
				"ITelephone": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"changeOwner(address)": "a6f9dae1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernautTelephone.sol\":\"ITelephone\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernautTelephone.sol\":{\"keccak256\":\"0xadb58fec41bfb74031e293999af60df0f59ead53385324f347f43359e99f3890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecca8c6da1f46544f415cf8a0b7e328276864bb898088c2b00f048338a370e52\",\"dweb:/ipfs/QmbN3Jnsyj7FrpL6ax29zZJYdESNyciBxTSRpRtfyQYtqt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Telephone": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernautTelephone.sol\":141:371  contract Telephone {\r... */\n  mstore(0x40, 0x80)\n    /* \"ethernautTelephone.sol\":194:246  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ethernautTelephone.sol\":230:240  msg.sender */\n  caller\n    /* \"ethernautTelephone.sol\":222:227  owner */\n  0x00\n  dup1\n    /* \"ethernautTelephone.sol\":222:240  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ethernautTelephone.sol\":141:371  contract Telephone {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernautTelephone.sol\":141:371  contract Telephone {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa6f9dae1\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernautTelephone.sol\":167:187  address public owner */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernautTelephone.sol\":252:368  function changeOwner(address _owner) public {\r... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"ethernautTelephone.sol\":167:187  address public owner */\n    tag_6:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ethernautTelephone.sol\":252:368  function changeOwner(address _owner) public {\r... */\n    tag_12:\n        /* \"ethernautTelephone.sol\":320:330  msg.sender */\n      caller\n        /* \"ethernautTelephone.sol\":307:330  tx.origin != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautTelephone.sol\":307:316  tx.origin */\n      origin\n        /* \"ethernautTelephone.sol\":307:330  tx.origin != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ethernautTelephone.sol\":303:363  if (tx.origin != msg.sender) {\r... */\n      tag_14\n      jumpi\n        /* \"ethernautTelephone.sol\":349:355  _owner */\n      dup1\n        /* \"ethernautTelephone.sol\":341:346  owner */\n      0x00\n      dup1\n        /* \"ethernautTelephone.sol\":341:355  owner = _owner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ethernautTelephone.sol\":303:363  if (tx.origin != msg.sender) {\r... */\n    tag_14:\n        /* \"ethernautTelephone.sol\":252:368  function changeOwner(address _owner) public {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_16:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_18\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_11:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_21\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":228:347   */\n    tag_21:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_24\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_16\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_25:\n        /* \"#utility.yul\":574:598   */\n      tag_27\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:833   */\n    tag_8:\n        /* \"#utility.yul\":704:708   */\n      0x00\n        /* \"#utility.yul\":742:744   */\n      0x20\n        /* \"#utility.yul\":731:740   */\n      dup3\n        /* \"#utility.yul\":727:745   */\n      add\n        /* \"#utility.yul\":719:745   */\n      swap1\n      pop\n        /* \"#utility.yul\":755:826   */\n      tag_30\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":812:821   */\n      dup4\n        /* \"#utility.yul\":808:825   */\n      add\n        /* \"#utility.yul\":799:805   */\n      dup5\n        /* \"#utility.yul\":755:826   */\n      tag_25\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":611:833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1016   */\n    tag_28:\n        /* \"#utility.yul\":957:964   */\n      0x00\n        /* \"#utility.yul\":986:1010   */\n      tag_34\n        /* \"#utility.yul\":1004:1009   */\n      dup3\n        /* \"#utility.yul\":986:1010   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":975:1010   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1022:1148   */\n    tag_35:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1099:1141   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1092:1097   */\n      dup3\n        /* \"#utility.yul\":1088:1142   */\n      and\n        /* \"#utility.yul\":1077:1142   */\n      swap1\n      pop\n        /* \"#utility.yul\":1022:1148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1277:1394   */\n    tag_23:\n        /* \"#utility.yul\":1386:1387   */\n      0x00\n        /* \"#utility.yul\":1383:1384   */\n      dup1\n        /* \"#utility.yul\":1376:1388   */\n      revert\n        /* \"#utility.yul\":1400:1522   */\n    tag_19:\n        /* \"#utility.yul\":1473:1497   */\n      tag_41\n        /* \"#utility.yul\":1491:1496   */\n      dup2\n        /* \"#utility.yul\":1473:1497   */\n      tag_28\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1466:1471   */\n      dup2\n        /* \"#utility.yul\":1463:1498   */\n      eq\n        /* \"#utility.yul\":1453:1516   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1509:1510   */\n      dup1\n        /* \"#utility.yul\":1502:1514   */\n      revert\n        /* \"#utility.yul\":1453:1516   */\n    tag_42:\n        /* \"#utility.yul\":1400:1522   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202a229cf2b00857889b92688f38ad6b6328ed8be9fa6dbef85a7d07124d7e4f9064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610200806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063a6f9dae114610059575b600080fd5b610043610075565b6040516100509190610161565b60405180910390f35b610073600480360381019061006e9190610125565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161461010d57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008135905061011f816101b3565b92915050565b60006020828403121561013b5761013a6101ae565b5b600061014984828501610110565b91505092915050565b61015b8161017c565b82525050565b60006020820190506101766000830184610152565b92915050565b60006101878261018e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101bc8161017c565b81146101c757600080fd5b5056fea26469706673582212202a229cf2b00857889b92688f38ad6b6328ed8be9fa6dbef85a7d07124d7e4f9064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x200 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x125 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10D JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11F DUP2 PUSH2 0x1B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B JUMPI PUSH2 0x13A PUSH2 0x1AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x149 DUP5 DUP3 DUP6 ADD PUSH2 0x110 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B DUP2 PUSH2 0x17C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187 DUP3 PUSH2 0x18E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC DUP2 PUSH2 0x17C JUMP JUMPDEST DUP2 EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0x22 SWAP13 CALLCODE 0xB0 ADDMOD JUMPI DUP9 SWAP12 SWAP3 PUSH9 0x8F38AD6B6328ED8BE9 STATICCALL PUSH14 0xBEF85A7D07124D7E4F9064736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "141:230:0:-:0;;;194:52;;;;;;;;;;230:10;222:5;;:18;;;;;;;;;;;;;;;;;;141:230;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@changeOwner_35": {
									"entryPoint": 153,
									"id": 35,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_9": {
									"entryPoint": 117,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1525:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:1",
														"type": ""
													}
												],
												"src": "487:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "727:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "719:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "799:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "823:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "808:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "755:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "755:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "681:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "693:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "704:4:1",
														"type": ""
													}
												],
												"src": "611:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "889:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "899:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "872:6:1",
														"type": ""
													}
												],
												"src": "839:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "965:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "975:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "986:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "975:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "947:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "957:7:1",
														"type": ""
													}
												],
												"src": "920:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1067:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1077:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1092:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1099:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1049:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1059:7:1",
														"type": ""
													}
												],
												"src": "1022:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1260:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1263:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1253:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1154:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1366:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1386:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1376:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1376:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1277:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1443:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1500:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1509:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1512:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1502:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1502:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1502:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1466:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1491:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1473:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1463:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1463:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:43:1"
															},
															"nodeType": "YulIf",
															"src": "1453:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1436:5:1",
														"type": ""
													}
												],
												"src": "1400:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063a6f9dae114610059575b600080fd5b610043610075565b6040516100509190610161565b60405180910390f35b610073600480360381019061006e9190610125565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161461010d57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008135905061011f816101b3565b92915050565b60006020828403121561013b5761013a6101ae565b5b600061014984828501610110565b91505092915050565b61015b8161017c565b82525050565b60006020820190506101766000830184610152565b92915050565b60006101878261018e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101bc8161017c565b81146101c757600080fd5b5056fea26469706673582212202a229cf2b00857889b92688f38ad6b6328ed8be9fa6dbef85a7d07124d7e4f9064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x125 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10D JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11F DUP2 PUSH2 0x1B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B JUMPI PUSH2 0x13A PUSH2 0x1AE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x149 DUP5 DUP3 DUP6 ADD PUSH2 0x110 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B DUP2 PUSH2 0x17C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187 DUP3 PUSH2 0x18E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC DUP2 PUSH2 0x17C JUMP JUMPDEST DUP2 EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0x22 SWAP13 CALLCODE 0xB0 ADDMOD JUMPI DUP9 SWAP12 SWAP3 PUSH9 0x8F38AD6B6328ED8BE9 STATICCALL PUSH14 0xBEF85A7D07124D7E4F9064736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "141:230:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;167:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;252:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;167:20;;;;;;;;;;;;:::o;252:116::-;320:10;307:23;;:9;:23;;;303:60;;349:6;341:5;;:14;;;;;;;;;;;;;;;;;;303:60;252:116;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:222::-;704:4;742:2;731:9;727:18;719:26;;755:71;823:1;812:9;808:17;799:6;755:71;:::i;:::-;611:222;;;;:::o;920:96::-;957:7;986:24;1004:5;986:24;:::i;:::-;975:35;;920:96;;;:::o;1022:126::-;1059:7;1099:42;1092:5;1088:54;1077:65;;1022:126;;;:::o;1277:117::-;1386:1;1383;1376:12;1400:122;1473:24;1491:5;1473:24;:::i;:::-;1466:5;1463:35;1453:63;;1512:1;1509;1502:12;1453:63;1400:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "102400",
								"executionCost": "24413",
								"totalCost": "126813"
							},
							"external": {
								"changeOwner(address)": "24755",
								"owner()": "2489"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 141,
									"end": 371,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 141,
									"end": 371,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 141,
									"end": 371,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 246,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 246,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 194,
									"end": 246,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 194,
									"end": 246,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 246,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 194,
									"end": 246,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 246,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 194,
									"end": 246,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 194,
									"end": 246,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 246,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 194,
									"end": 246,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 230,
									"end": 240,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 222,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 222,
									"end": 227,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 222,
									"end": 240,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 222,
									"end": 240,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 222,
									"end": 240,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 222,
									"end": 240,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 141,
									"end": 371,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 141,
									"end": 371,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 371,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 141,
									"end": 371,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 141,
									"end": 371,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 141,
									"end": 371,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 141,
									"end": 371,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a229cf2b00857889b92688f38ad6b6328ed8be9fa6dbef85a7d07124d7e4f9064736f6c63430008070033",
									".code": [
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "A6F9DAE1"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 371,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 252,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 368,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 368,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 252,
											"end": 368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 252,
											"end": 368,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 330,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 307,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 307,
											"end": 330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 316,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 307,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 307,
											"end": 330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 303,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 303,
											"end": 363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 349,
											"end": 355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 341,
											"end": 355,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 341,
											"end": 355,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 341,
											"end": 355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 341,
											"end": 355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 363,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 303,
											"end": 363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 252,
											"end": 368,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 727,
											"end": 745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 719,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 808,
											"end": 825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1092,
											"end": 1097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1142,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1277,
											"end": 1394,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1277,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1388,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1400,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1491,
											"end": 1496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1453,
											"end": 1516,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1514,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1516,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1453,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeOwner(address)": "a6f9dae1",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernautTelephone.sol\":\"Telephone\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernautTelephone.sol\":{\"keccak256\":\"0xadb58fec41bfb74031e293999af60df0f59ead53385324f347f43359e99f3890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecca8c6da1f46544f415cf8a0b7e328276864bb898088c2b00f048338a370e52\",\"dweb:/ipfs/QmbN3Jnsyj7FrpL6ax29zZJYdESNyciBxTSRpRtfyQYtqt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "ethernautTelephone.sol:Telephone",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"telephoneSolver": {
					"abi": [
						{
							"inputs": [],
							"name": "solve",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernautTelephone.sol\":375:564  contract telephoneSolver {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernautTelephone.sol\":375:564  contract telephoneSolver {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x890d6908\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernautTelephone.sol\":409:561  function solve() external returns (bytes memory) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"ethernautTelephone.sol\":444:456  bytes memory */\n      0x60\n        /* \"ethernautTelephone.sol\":469:489  address contractAddr */\n      0x00\n        /* \"ethernautTelephone.sol\":500:542  0x03cbED7039bDA6ae4523C6E7BB6579718A584f83 */\n      0x03cbed7039bda6ae4523c6e7bb6579718a584f83\n        /* \"ethernautTelephone.sol\":469:543  address contractAddr = address(0x03cbED7039bDA6ae4523C6E7BB6579718A584f83) */\n      swap1\n      pop\n        /* \"ethernautTelephone.sol\":458:561  {\r... */\n      pop\n        /* \"ethernautTelephone.sol\":409:561  function solve() external returns (bytes memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:367   */\n    tag_10:\n        /* \"#utility.yul\":93:96   */\n      0x00\n        /* \"#utility.yul\":121:159   */\n      tag_12\n        /* \"#utility.yul\":153:158   */\n      dup3\n        /* \"#utility.yul\":121:159   */\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"#utility.yul\":175:245   */\n      tag_14\n        /* \"#utility.yul\":238:244   */\n      dup2\n        /* \"#utility.yul\":233:236   */\n      dup6\n        /* \"#utility.yul\":175:245   */\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":168:245   */\n      swap4\n      pop\n        /* \"#utility.yul\":254:306   */\n      tag_16\n        /* \"#utility.yul\":299:305   */\n      dup2\n        /* \"#utility.yul\":294:297   */\n      dup6\n        /* \"#utility.yul\":287:291   */\n      0x20\n        /* \"#utility.yul\":280:285   */\n      dup7\n        /* \"#utility.yul\":276:292   */\n      add\n        /* \"#utility.yul\":254:306   */\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":331:360   */\n      tag_18\n        /* \"#utility.yul\":353:359   */\n      dup2\n        /* \"#utility.yul\":331:360   */\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":326:329   */\n      dup5\n        /* \"#utility.yul\":322:361   */\n      add\n        /* \"#utility.yul\":315:361   */\n      swap2\n      pop\n        /* \"#utility.yul\":97:367   */\n      pop\n        /* \"#utility.yul\":7:367   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":373:682   */\n    tag_7:\n        /* \"#utility.yul\":484:488   */\n      0x00\n        /* \"#utility.yul\":522:524   */\n      0x20\n        /* \"#utility.yul\":511:520   */\n      dup3\n        /* \"#utility.yul\":507:525   */\n      add\n        /* \"#utility.yul\":499:525   */\n      swap1\n      pop\n        /* \"#utility.yul\":571:580   */\n      dup2\n        /* \"#utility.yul\":565:569   */\n      dup2\n        /* \"#utility.yul\":561:581   */\n      sub\n        /* \"#utility.yul\":557:558   */\n      0x00\n        /* \"#utility.yul\":546:555   */\n      dup4\n        /* \"#utility.yul\":542:559   */\n      add\n        /* \"#utility.yul\":535:582   */\n      mstore\n        /* \"#utility.yul\":599:675   */\n      tag_21\n        /* \"#utility.yul\":670:674   */\n      dup2\n        /* \"#utility.yul\":661:667   */\n      dup5\n        /* \"#utility.yul\":599:675   */\n      tag_10\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":591:675   */\n      swap1\n      pop\n        /* \"#utility.yul\":373:682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:786   */\n    tag_13:\n        /* \"#utility.yul\":739:745   */\n      0x00\n        /* \"#utility.yul\":773:778   */\n      dup2\n        /* \"#utility.yul\":767:779   */\n      mload\n        /* \"#utility.yul\":757:779   */\n      swap1\n      pop\n        /* \"#utility.yul\":688:786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":792:960   */\n    tag_15:\n        /* \"#utility.yul\":875:886   */\n      0x00\n        /* \"#utility.yul\":909:915   */\n      dup3\n        /* \"#utility.yul\":904:907   */\n      dup3\n        /* \"#utility.yul\":897:916   */\n      mstore\n        /* \"#utility.yul\":949:953   */\n      0x20\n        /* \"#utility.yul\":944:947   */\n      dup3\n        /* \"#utility.yul\":940:954   */\n      add\n        /* \"#utility.yul\":925:954   */\n      swap1\n      pop\n        /* \"#utility.yul\":792:960   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":966:1273   */\n    tag_17:\n        /* \"#utility.yul\":1034:1035   */\n      0x00\n        /* \"#utility.yul\":1044:1157   */\n    tag_25:\n        /* \"#utility.yul\":1058:1064   */\n      dup4\n        /* \"#utility.yul\":1055:1056   */\n      dup2\n        /* \"#utility.yul\":1052:1065   */\n      lt\n        /* \"#utility.yul\":1044:1157   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":1143:1144   */\n      dup1\n        /* \"#utility.yul\":1138:1141   */\n      dup3\n        /* \"#utility.yul\":1134:1145   */\n      add\n        /* \"#utility.yul\":1128:1146   */\n      mload\n        /* \"#utility.yul\":1124:1125   */\n      dup2\n        /* \"#utility.yul\":1119:1122   */\n      dup5\n        /* \"#utility.yul\":1115:1126   */\n      add\n        /* \"#utility.yul\":1108:1147   */\n      mstore\n        /* \"#utility.yul\":1080:1082   */\n      0x20\n        /* \"#utility.yul\":1077:1078   */\n      dup2\n        /* \"#utility.yul\":1073:1083   */\n      add\n        /* \"#utility.yul\":1068:1083   */\n      swap1\n      pop\n        /* \"#utility.yul\":1044:1157   */\n      jump(tag_25)\n    tag_27:\n        /* \"#utility.yul\":1175:1181   */\n      dup4\n        /* \"#utility.yul\":1172:1173   */\n      dup2\n        /* \"#utility.yul\":1169:1182   */\n      gt\n        /* \"#utility.yul\":1166:1267   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":1255:1256   */\n      0x00\n        /* \"#utility.yul\":1246:1252   */\n      dup5\n        /* \"#utility.yul\":1241:1244   */\n      dup5\n        /* \"#utility.yul\":1237:1253   */\n      add\n        /* \"#utility.yul\":1230:1257   */\n      mstore\n        /* \"#utility.yul\":1166:1267   */\n    tag_28:\n        /* \"#utility.yul\":1015:1273   */\n      pop\n        /* \"#utility.yul\":966:1273   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1279:1381   */\n    tag_19:\n        /* \"#utility.yul\":1320:1326   */\n      0x00\n        /* \"#utility.yul\":1371:1373   */\n      0x1f\n        /* \"#utility.yul\":1367:1374   */\n      not\n        /* \"#utility.yul\":1362:1364   */\n      0x1f\n        /* \"#utility.yul\":1355:1360   */\n      dup4\n        /* \"#utility.yul\":1351:1365   */\n      add\n        /* \"#utility.yul\":1347:1375   */\n      and\n        /* \"#utility.yul\":1337:1375   */\n      swap1\n      pop\n        /* \"#utility.yul\":1279:1381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a240233feaef2003136e71019ea12e30b4e0009ada151b88722c65207c1df7af64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061015e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063890d690814610030575b600080fd5b61003861004e565b60405161004591906100a6565b60405180910390f35b606060007303cbed7039bda6ae4523c6e7bb6579718a584f8390505090565b6000610078826100c8565b61008281856100d3565b93506100928185602086016100e4565b61009b81610117565b840191505092915050565b600060208201905081810360008301526100c0818461006d565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101025780820151818401526020810190506100e7565b83811115610111576000848401525b50505050565b6000601f19601f830116905091905056fea2646970667358221220a240233feaef2003136e71019ea12e30b4e0009ada151b88722c65207c1df7af64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH20 0x3CBED7039BDA6AE4523C6E7BB6579718A584F83 SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78 DUP3 PUSH2 0xC8 JUMP JUMPDEST PUSH2 0x82 DUP2 DUP6 PUSH2 0xD3 JUMP JUMPDEST SWAP4 POP PUSH2 0x92 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x9B DUP2 PUSH2 0x117 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC0 DUP2 DUP5 PUSH2 0x6D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x102 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 BLOCKHASH 0x23 EXTCODEHASH 0xEA 0xEF KECCAK256 SUB SGT PUSH15 0x71019EA12E30B4E0009ADA151B8872 0x2C PUSH6 0x207C1DF7AF64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "375:189:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@solve_49": {
									"entryPoint": 78,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1384:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "97:270:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "107:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "153:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "121:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "111:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "168:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "233:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "175:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "175:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "168:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "280:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "287:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "276:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "294:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "299:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "254:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "254:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "315:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "326:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "353:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "331:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "331:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "322:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "315:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "78:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "85:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "93:3:1",
														"type": ""
													}
												],
												"src": "7:360:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "489:193:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "499:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "511:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "507:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "507:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "499:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "546:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "557:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "565:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "571:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "561:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "535:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "535:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "535:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "591:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "661:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "670:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "599:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "591:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "461:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "484:4:1",
														"type": ""
													}
												],
												"src": "373:309:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "746:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "757:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "773:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "767:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "739:6:1",
														"type": ""
													}
												],
												"src": "688:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "887:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "904:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "909:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "897:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "897:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "897:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "925:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "944:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "940:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "940:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "925:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "859:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "864:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "875:11:1",
														"type": ""
													}
												],
												"src": "792:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1015:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1025:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1034:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1029:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1094:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1119:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1124:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1115:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1115:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1138:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1143:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1134:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1134:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1128:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1128:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1108:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1108:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1108:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1055:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1058:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1052:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1052:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1066:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1068:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1077:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1073:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1073:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1068:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1048:3:1",
																"statements": []
															},
															"src": "1044:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1191:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1241:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1246:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1237:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1237:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1255:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1230:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1230:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1230:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1172:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1169:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1169:13:1"
															},
															"nodeType": "YulIf",
															"src": "1166:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "997:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1002:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1007:6:1",
														"type": ""
													}
												],
												"src": "966:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1327:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1337:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1355:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1362:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1351:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1371:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1367:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1347:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1337:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1310:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1320:6:1",
														"type": ""
													}
												],
												"src": "1279:102:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063890d690814610030575b600080fd5b61003861004e565b60405161004591906100a6565b60405180910390f35b606060007303cbed7039bda6ae4523c6e7bb6579718a584f8390505090565b6000610078826100c8565b61008281856100d3565b93506100928185602086016100e4565b61009b81610117565b840191505092915050565b600060208201905081810360008301526100c0818461006d565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101025780820151818401526020810190506100e7565b83811115610111576000848401525b50505050565b6000601f19601f830116905091905056fea2646970667358221220a240233feaef2003136e71019ea12e30b4e0009ada151b88722c65207c1df7af64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH20 0x3CBED7039BDA6AE4523C6E7BB6579718A584F83 SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78 DUP3 PUSH2 0xC8 JUMP JUMPDEST PUSH2 0x82 DUP2 DUP6 PUSH2 0xD3 JUMP JUMPDEST SWAP4 POP PUSH2 0x92 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x9B DUP2 PUSH2 0x117 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC0 DUP2 DUP5 PUSH2 0x6D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x102 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 BLOCKHASH 0x23 EXTCODEHASH 0xEA 0xEF KECCAK256 SUB SGT PUSH15 0x71019EA12E30B4E0009ADA151B8872 0x2C PUSH6 0x207C1DF7AF64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "375:189:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:152;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;444:12;469:20;500:42;469:74;;458:103;409:152;:::o;7:360:1:-;93:3;121:38;153:5;121:38;:::i;:::-;175:70;238:6;233:3;175:70;:::i;:::-;168:77;;254:52;299:6;294:3;287:4;280:5;276:16;254:52;:::i;:::-;331:29;353:6;331:29;:::i;:::-;326:3;322:39;315:46;;97:270;7:360;;;;:::o;373:309::-;484:4;522:2;511:9;507:18;499:26;;571:9;565:4;561:20;557:1;546:9;542:17;535:47;599:76;670:4;661:6;599:76;:::i;:::-;591:84;;373:309;;;;:::o;688:98::-;739:6;773:5;767:12;757:22;;688:98;;;:::o;792:168::-;875:11;909:6;904:3;897:19;949:4;944:3;940:14;925:29;;792:168;;;;:::o;966:307::-;1034:1;1044:113;1058:6;1055:1;1052:13;1044:113;;;1143:1;1138:3;1134:11;1128:18;1124:1;1119:3;1115:11;1108:39;1080:2;1077:1;1073:10;1068:15;;1044:113;;;1175:6;1172:1;1169:13;1166:101;;;1255:1;1246:6;1241:3;1237:16;1230:27;1166:101;1015:258;966:307;;;:::o;1279:102::-;1320:6;1371:2;1367:7;1362:2;1355:5;1351:14;1347:28;1337:38;;1279:102;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "70000",
								"executionCost": "117",
								"totalCost": "70117"
							},
							"external": {
								"solve()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 375,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 375,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 375,
									"end": 564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 375,
									"end": 564,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 375,
									"end": 564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 375,
									"end": 564,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 375,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 375,
									"end": 564,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 375,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 375,
									"end": 564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 375,
									"end": 564,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 375,
									"end": 564,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 375,
									"end": 564,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 375,
									"end": 564,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 375,
									"end": 564,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 375,
									"end": 564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 375,
									"end": 564,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 375,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 375,
									"end": 564,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 375,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 375,
									"end": 564,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a240233feaef2003136e71019ea12e30b4e0009ada151b88722c65207c1df7af64736f6c63430008070033",
									".code": [
										{
											"begin": 375,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "890D6908"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 564,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 409,
											"end": 561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 409,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 409,
											"end": 561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 409,
											"end": 561,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 409,
											"end": 561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 409,
											"end": 561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 409,
											"end": 561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 409,
											"end": 561,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 409,
											"end": 561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 409,
											"end": 561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 444,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 469,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "3CBED7039BDA6AE4523C6E7BB6579718A584F83"
										},
										{
											"begin": 469,
											"end": 543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 561,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 367,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7,
											"end": 367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 93,
											"end": 96,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 153,
											"end": 158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 121,
											"end": 159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 121,
											"end": 159,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 121,
											"end": 159,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 121,
											"end": 159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 175,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 233,
											"end": 236,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 175,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 175,
											"end": 245,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 175,
											"end": 245,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 175,
											"end": 245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 245,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 168,
											"end": 245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 254,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 299,
											"end": 305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 294,
											"end": 297,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 287,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 280,
											"end": 285,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 276,
											"end": 292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 254,
											"end": 306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 254,
											"end": 306,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 254,
											"end": 306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 331,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 353,
											"end": 359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 331,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 331,
											"end": 360,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 360,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 331,
											"end": 360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 326,
											"end": 329,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 322,
											"end": 361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 315,
											"end": 361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 315,
											"end": 361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 97,
											"end": 367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 367,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 367,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 373,
											"end": 682,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 373,
											"end": 682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 484,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 507,
											"end": 525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 571,
											"end": 580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 565,
											"end": 569,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 581,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 542,
											"end": 559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 535,
											"end": 582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 599,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 670,
											"end": 674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 661,
											"end": 667,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 599,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 599,
											"end": 675,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 675,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 599,
											"end": 675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 591,
											"end": 675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 373,
											"end": 682,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 373,
											"end": 682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 373,
											"end": 682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 373,
											"end": 682,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 688,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 688,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 739,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 779,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 757,
											"end": 779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 757,
											"end": 779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 688,
											"end": 786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 688,
											"end": 786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 688,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 688,
											"end": 786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 792,
											"end": 960,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 792,
											"end": 960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 875,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 904,
											"end": 907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 949,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 944,
											"end": 947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 940,
											"end": 954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 925,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 925,
											"end": 954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 960,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 792,
											"end": 960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 792,
											"end": 960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 960,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 966,
											"end": 1273,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 966,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1044,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1065,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1157,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1044,
											"end": 1157,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1044,
											"end": 1157,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1044,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1181,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1182,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1267,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1166,
											"end": 1267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1252,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1244,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1267,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1166,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1279,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1279,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1373,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1367,
											"end": 1374,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1364,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1355,
											"end": 1360,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1381,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"solve()": "890d6908"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"solve\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernautTelephone.sol\":\"telephoneSolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernautTelephone.sol\":{\"keccak256\":\"0xadb58fec41bfb74031e293999af60df0f59ead53385324f347f43359e99f3890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecca8c6da1f46544f415cf8a0b7e328276864bb898088c2b00f048338a370e52\",\"dweb:/ipfs/QmbN3Jnsyj7FrpL6ax29zZJYdESNyciBxTSRpRtfyQYtqt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> ethernautTelephone.sol:12:3:\n   |\n12 |   constructor() public {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 246,
					"file": "ethernautTelephone.sol",
					"start": 194
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> ethernautTelephone.sol:25:40:\n   |\n25 |     function solve() external returns (bytes memory) {\n   |                                        ^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 456,
					"file": "ethernautTelephone.sol",
					"start": 444
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> ethernautTelephone.sol:26:9:\n   |\n26 |         address contractAddr = address(0x03cbED7039bDA6ae4523C6E7BB6579718A584f83);\n   |         ^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 489,
					"file": "ethernautTelephone.sol",
					"start": 469
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> ethernautTelephone.sol:25:5:\n   |\n25 |     function solve() external returns (bytes memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 561,
					"file": "ethernautTelephone.sol",
					"start": 409
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ethernautTelephone.sol": {
				"ast": {
					"absolutePath": "ethernautTelephone.sol",
					"exportedSymbols": {
						"ITelephone": [
							7
						],
						"Telephone": [
							36
						],
						"telephoneSolver": [
							50
						]
					},
					"id": 51,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 7,
							"linearizedBaseContracts": [
								7
							],
							"name": "ITelephone",
							"nameLocation": "70:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a6f9dae1",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeOwner",
									"nameLocation": "97:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "117:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "109:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:16:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "133:0:0"
									},
									"scope": 7,
									"src": "88:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 51,
							"src": "60:77:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36
							],
							"name": "Telephone",
							"nameLocation": "150:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 9,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "182:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 36,
									"src": "167:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "167:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "215:31:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "222:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 13,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "230:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "230:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "222:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "222:18:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:0:0"
									},
									"scope": 36,
									"src": "194:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "296:72:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 23,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967270,
															"src": "307:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"src": "307:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 25,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "320:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "320:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "307:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 33,
												"nodeType": "IfStatement",
												"src": "303:60:0",
												"trueBody": {
													"id": 32,
													"nodeType": "Block",
													"src": "332:31:0",
													"statements": [
														{
															"expression": {
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 28,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "341:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 29,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "349:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "341:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 31,
															"nodeType": "ExpressionStatement",
															"src": "341:14:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a6f9dae1",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeOwner",
									"nameLocation": "261:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "281:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "272:16:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:0:0"
									},
									"scope": 36,
									"src": "252:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 51,
							"src": "141:230:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 50,
							"linearizedBaseContracts": [
								50
							],
							"name": "telephoneSolver",
							"nameLocation": "384:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "458:103:0",
										"statements": [
											{
												"assignments": [
													42
												],
												"declarations": [
													{
														"constant": false,
														"id": 42,
														"mutability": "mutable",
														"name": "contractAddr",
														"nameLocation": "477:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 48,
														"src": "469:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 41,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "469:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 47,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307830336362454437303339624441366165343532334336453742423635373937313841353834663833",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "500:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x03cbED7039bDA6ae4523C6E7BB6579718A584f83"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 43,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "492:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "492:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "469:74:0"
											}
										]
									},
									"functionSelector": "890d6908",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solve",
									"nameLocation": "418:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "444:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 38,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "444:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:14:0"
									},
									"scope": 50,
									"src": "409:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 51,
							"src": "375:189:0",
							"usedErrors": []
						}
					],
					"src": "33:533:0"
				},
				"id": 0
			}
		}
	}
}