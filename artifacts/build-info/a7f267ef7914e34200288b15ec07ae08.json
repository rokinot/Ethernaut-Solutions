{
	"id": "a7f267ef7914e34200288b15ec07ae08",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "pragma solidity 0.8.7;\r\n\r\ncontract contracts_proper {\r\n\r\n    function test (uint256 aux) external pure returns (bool) {\r\n        return (aux != 27 || aux != 28);\r\n    }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"contracts_proper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "aux",
									"type": "uint256"
								}
							],
							"name": "test",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":26:173  contract contracts_proper {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":26:173  contract contracts_proper {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x29e99f07\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test.sol\":61:168  function test (uint256 aux) external pure returns (bool) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":364:378   */\n      swap1\n      iszero\n        /* \"#utility.yul\":357:379   */\n      iszero\n        /* \"#utility.yul\":339:380   */\n      dup2\n      mstore\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":312:330   */\n      add\n        /* \"test.sol\":61:168  function test (uint256 aux) external pure returns (bool) {\r... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"test.sol\":112:116  bool */\n      0x00\n        /* \"test.sol\":137:140  aux */\n      dup2\n        /* \"test.sol\":144:146  27 */\n      0x1b\n        /* \"test.sol\":137:146  aux != 27 */\n      eq\n      iszero\n        /* \"test.sol\":137:159  aux != 27 || aux != 28 */\n      dup1\n      tag_11\n      jumpi\n      pop\n        /* \"test.sol\":150:153  aux */\n      dup2\n        /* \"test.sol\":157:159  28 */\n      0x1c\n        /* \"test.sol\":150:159  aux != 28 */\n      eq\n      iszero\n        /* \"test.sol\":137:159  aux != 27 || aux != 28 */\n    tag_11:\n        /* \"test.sol\":129:160  return (aux != 27 || aux != 28) */\n      swap3\n        /* \"test.sol\":61:168  function test (uint256 aux) external pure returns (bool) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_6:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_14\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_14:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122038a9c012bf22511958f78fdbae918ca95a536b6e8c4f199324d3fe5e6a8f874a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060b68061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806329e99f0714602d575b600080fd5b603c60383660046068565b6050565b604051901515815260200160405180910390f35b600081601b1415806062575081601c14155b92915050565b600060208284031215607957600080fd5b503591905056fea264697066735822122038a9c012bf22511958f78fdbae918ca95a536b6e8c4f199324d3fe5e6a8f874a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB6 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29E99F07 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x68 JUMP JUMPDEST PUSH1 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1B EQ ISZERO DUP1 PUSH1 0x62 JUMPI POP DUP2 PUSH1 0x1C EQ ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xA9 0xC0 SLT 0xBF 0x22 MLOAD NOT PC 0xF7 DUP16 0xDB 0xAE SWAP2 DUP13 0xA9 GAS MSTORE8 PUSH12 0x6E8C4F199324D3FE5E6A8F87 0x4A PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "26:147:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@test_18": {
									"entryPoint": 80,
									"id": 18,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:388:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "304:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "312:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "312:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "304:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "346:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "371:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "364:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "364:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "357:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "357:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "339:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "339:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "339:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "263:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "285:4:1",
														"type": ""
													}
												],
												"src": "199:187:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c806329e99f0714602d575b600080fd5b603c60383660046068565b6050565b604051901515815260200160405180910390f35b600081601b1415806062575081601c14155b92915050565b600060208284031215607957600080fd5b503591905056fea264697066735822122038a9c012bf22511958f78fdbae918ca95a536b6e8c4f199324d3fe5e6a8f874a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29E99F07 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x68 JUMP JUMPDEST PUSH1 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1B EQ ISZERO DUP1 PUSH1 0x62 JUMPI POP DUP2 PUSH1 0x1C EQ ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xA9 0xC0 SLT 0xBF 0x22 MLOAD NOT PC 0xF7 DUP16 0xDB 0xAE SWAP2 DUP13 0xA9 GAS MSTORE8 PUSH12 0x6E8C4F199324D3FE5E6A8F87 0x4A PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "26:147:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;61:107;;;;;;:::i;:::-;;:::i;:::-;;;364:14:1;;357:22;339:41;;327:2;312:18;61:107:0;;;;;;;;112:4;137:3;144:2;137:9;;:22;;;;150:3;157:2;150:9;;137:22;129:31;61:107;-1:-1:-1;;61:107:0:o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "36400",
								"executionCost": "87",
								"totalCost": "36487"
							},
							"external": {
								"test(uint256)": "306"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 173,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 173,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 173,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 173,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 173,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 173,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 173,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 173,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 173,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 173,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 173,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 173,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 173,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 173,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 173,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 173,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 173,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 173,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 173,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 173,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 173,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038a9c012bf22511958f78fdbae918ca95a536b6e8c4f199324d3fe5e6a8f874a64736f6c63430008070033",
									".code": [
										{
											"begin": 26,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "29E99F07"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 173,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 168,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 364,
											"end": 378,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 357,
											"end": 379,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 339,
											"end": 380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 339,
											"end": 380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 61,
											"end": 168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 168,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61,
											"end": 168,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 112,
											"end": 116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 144,
											"end": 146,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 137,
											"end": 146,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 137,
											"end": 146,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 137,
											"end": 159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 137,
											"end": 159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 150,
											"end": 153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 157,
											"end": 159,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 150,
											"end": 159,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 150,
											"end": 159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 137,
											"end": 159,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 137,
											"end": 159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 160,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 61,
											"end": 168,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"test(uint256)": "29e99f07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aux\",\"type\":\"uint256\"}],\"name\":\"test\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"contracts_proper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x2157d49c22b9bbe8c2168595a64b2fc2d4058febf0b3e542343a00c6da870207\",\"urls\":[\"bzz-raw://278d800f1f3e0583e763b66eebfc64438de0eeb26e54d31a0267901f71830b3c\",\"dweb:/ipfs/QmSz4jL3q9oojfQPmDEvB1RDSpgVu7iXHifsXaRgc3R6uu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"contracts_proper": [
							19
						]
					},
					"id": 20,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 19,
							"linearizedBaseContracts": [
								19
							],
							"name": "contracts_proper",
							"nameLocation": "35:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "118:50:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 8,
																	"name": "aux",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "137:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "3237",
																	"id": 9,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "144:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_27_by_1",
																		"typeString": "int_const 27"
																	},
																	"value": "27"
																},
																"src": "137:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 11,
																	"name": "aux",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "150:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "3238",
																	"id": 12,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "157:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_28_by_1",
																		"typeString": "int_const 28"
																	},
																	"value": "28"
																},
																"src": "150:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "137:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 15,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "136:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 7,
												"id": 16,
												"nodeType": "Return",
												"src": "129:31:0"
											}
										]
									},
									"functionSelector": "29e99f07",
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "70:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "84:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "76:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75:13:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "112:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "112:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "111:6:0"
									},
									"scope": 19,
									"src": "61:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 20,
							"src": "26:147:0",
							"usedErrors": []
						}
					],
					"src": "0:175:0"
				},
				"id": 0
			}
		}
	}
}