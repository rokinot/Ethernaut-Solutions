{
	"id": "4d69b38e6838352e8cc65b72b7f4fd0c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "pragma solidity 0.8.7;\r\n\r\ncontract contracts_bad {\r\n\r\n    function test() public returns (uint256) {\r\n        return type(uint256).max - 1;\r\n    }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"contracts_bad": {
					"abi": [
						{
							"inputs": [],
							"name": "test",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":26:151  contract contracts_bad {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":26:151  contract contracts_bad {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test.sol\":58:146  function test() public returns (uint256) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"test.sol\":58:146  function test() public returns (uint256) {\r... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"test.sol\":90:97  uint256 */\n      0x00\n        /* \"test.sol\":117:138  type(uint256).max - 1 */\n      tag_9\n        /* \"test.sol\":137:138  1 */\n      0x01\n      not(0x00)\n        /* \"test.sol\":117:138  type(uint256).max - 1 */\n      tag_10\n      jump\t// in\n    tag_9:\n        /* \"test.sol\":110:138  return type(uint256).max - 1 */\n      swap1\n      pop\n        /* \"test.sol\":58:146  function test() public returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":196:418   */\n    tag_10:\n        /* \"#utility.yul\":236:240   */\n      0x00\n        /* \"#utility.yul\":264:265   */\n      dup3\n        /* \"#utility.yul\":261:262   */\n      dup3\n        /* \"#utility.yul\":258:266   */\n      lt\n        /* \"#utility.yul\":255:386   */\n      iszero\n      tag_14\n      jumpi\n        /* \"#utility.yul\":308:318   */\n      0x4e487b71\n        /* \"#utility.yul\":303:306   */\n      0xe0\n        /* \"#utility.yul\":299:319   */\n      shl\n        /* \"#utility.yul\":296:297   */\n      0x00\n        /* \"#utility.yul\":289:320   */\n      mstore\n        /* \"#utility.yul\":343:347   */\n      0x11\n        /* \"#utility.yul\":340:341   */\n      0x04\n        /* \"#utility.yul\":333:348   */\n      mstore\n        /* \"#utility.yul\":371:375   */\n      0x24\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":361:376   */\n      revert\n        /* \"#utility.yul\":255:386   */\n    tag_14:\n      pop\n        /* \"#utility.yul\":403:412   */\n      sub\n      swap1\n        /* \"#utility.yul\":196:418   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201d524f4d8c85f5fbfe026abfd711dcbdfa06093770a71ddcd94150d06ec4161d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060b18061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063f8a8fd6d14602d575b600080fd5b60336045565b60405190815260200160405180910390f35b6000605260016000196057565b905090565b600082821015607657634e487b7160e01b600052601160045260246000fd5b50039056fea26469706673582212201d524f4d8c85f5fbfe026abfd711dcbdfa06093770a71ddcd94150d06ec4161d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB1 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF8A8FD6D EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x45 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x52 PUSH1 0x1 PUSH1 0x0 NOT PUSH1 0x57 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH1 0x76 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR MSTORE 0x4F 0x4D DUP13 DUP6 CREATE2 0xFB INVALID MUL PUSH11 0xBFD711DCBDFA06093770A7 SAR 0xDC 0xD9 COINBASE POP 0xD0 PUSH15 0xC4161D64736F6C6343000807003300 ",
							"sourceMap": "26:125:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@test_15": {
									"entryPoint": 69,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 87,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:420:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "245:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "275:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "296:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "303:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "308:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "299:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "299:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "289:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "289:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "289:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "368:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "371:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "361:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "361:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "361:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "261:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "264:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "258:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "258:8:1"
															},
															"nodeType": "YulIf",
															"src": "255:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "395:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "407:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "410:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "403:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "403:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "395:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "227:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "230:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "236:4:1",
														"type": ""
													}
												],
												"src": "196:222:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063f8a8fd6d14602d575b600080fd5b60336045565b60405190815260200160405180910390f35b6000605260016000196057565b905090565b600082821015607657634e487b7160e01b600052601160045260246000fd5b50039056fea26469706673582212201d524f4d8c85f5fbfe026abfd711dcbdfa06093770a71ddcd94150d06ec4161d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF8A8FD6D EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x45 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x52 PUSH1 0x1 PUSH1 0x0 NOT PUSH1 0x57 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH1 0x76 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR MSTORE 0x4F 0x4D DUP13 DUP6 CREATE2 0xFB INVALID MUL PUSH11 0xBFD711DCBDFA06093770A7 SAR 0xDC 0xD9 COINBASE POP 0xD0 PUSH15 0xC4161D64736F6C6343000807003300 ",
							"sourceMap": "26:125:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58:88;;;:::i;:::-;;;160:25:1;;;148:2;133:18;58:88:0;;;;;;;;90:7;117:21;137:1;-1:-1:-1;;117:21:0;:::i;:::-;110:28;;58:88;:::o;196:222:1:-;236:4;264:1;261;258:8;255:131;;;308:10;303:3;299:20;296:1;289:31;343:4;340:1;333:15;371:4;368:1;361:15;255:131;-1:-1:-1;403:9:1;;196:222::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "35400",
								"executionCost": "87",
								"totalCost": "35487"
							},
							"external": {
								"test()": "248"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 151,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 151,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 151,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 151,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 151,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 151,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 151,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 151,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 151,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 151,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 151,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 151,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 151,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201d524f4d8c85f5fbfe026abfd711dcbdfa06093770a71ddcd94150d06ec4161d64736f6c63430008070033",
									".code": [
										{
											"begin": 26,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 146,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58,
											"end": 146,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58,
											"end": 146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58,
											"end": 146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58,
											"end": 146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 146,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 58,
											"end": 146,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 97,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 137,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 117,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 117,
											"end": 138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 117,
											"end": 138,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 117,
											"end": 138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 110,
											"end": 138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 110,
											"end": 138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 146,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 418,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 196,
											"end": 418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 236,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 258,
											"end": 266,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 255,
											"end": 386,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 255,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 255,
											"end": 386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 308,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 303,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 299,
											"end": 319,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 296,
											"end": 297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 343,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 333,
											"end": 348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 376,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 255,
											"end": 386,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 255,
											"end": 386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 403,
											"end": 412,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 403,
											"end": 412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 418,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"test()": "f8a8fd6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"contracts_bad\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x8206b03753335b77fd2768a3b376a77d5478f11e5d60bea479c96dba13dba1c4\",\"urls\":[\"bzz-raw://0ac751d6c0c7384e6766863b526f9ad5f23ce69aaf7d8c603218a04cdf294011\",\"dweb:/ipfs/QmZr4gc9AA7NqK7i4sUg5GRrRZgajDL4w21WvbuigqZeqS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n --> test.sol:5:5:\n  |\n5 |     function test() public returns (uint256) {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 146,
					"file": "test.sol",
					"start": 58
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"contracts_bad": [
							16
						]
					},
					"id": 17,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 16,
							"linearizedBaseContracts": [
								16
							],
							"name": "contracts_bad",
							"nameLocation": "35:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "99:47:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 8,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "122:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 7,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "122:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 6,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "117:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "117:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "117:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "137:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "117:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5,
												"id": 13,
												"nodeType": "Return",
												"src": "110:28:0"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 15,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "67:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "90:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "90:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "89:9:0"
									},
									"scope": 16,
									"src": "58:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 17,
							"src": "26:125:0",
							"usedErrors": []
						}
					],
					"src": "0:153:0"
				},
				"id": 0
			}
		}
	}
}