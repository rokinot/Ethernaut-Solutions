{
	"id": "3c212cea57ade1032cdc8d402cda1666",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test.sol": {
				"content": "pragma solidity 0.8.7;\r\n\r\ncontract contracts {\r\n\r\n    uint64 constant TEST4 = 0x4;\r\n    uint64 constant TEST1 = 0x2;\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test.sol": {
				"contracts": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test.sol\":26:121  contract contracts {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test.sol\":26:121  contract contracts {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205e949723483fc82295a8a7d25ffb2027e076630d8bc2c1025d393d3a758dad6764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205e949723483fc82295a8a7d25ffb2027e076630d8bc2c1025d393d3a758dad6764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E SWAP5 SWAP8 0x23 BASEFEE EXTCODEHASH 0xC8 0x22 SWAP6 0xA8 0xA7 0xD2 0x5F 0xFB KECCAK256 0x27 0xE0 PUSH23 0x630D8BC2C1025D393D3A758DAD6764736F6C6343000807 STOP CALLER ",
							"sourceMap": "26:95:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212205e949723483fc82295a8a7d25ffb2027e076630d8bc2c1025d393d3a758dad6764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E SWAP5 SWAP8 0x23 BASEFEE EXTCODEHASH 0xC8 0x22 SWAP6 0xA8 0xA7 0xD2 0x5F 0xFB KECCAK256 0x27 0xE0 PUSH23 0x630D8BC2C1025D393D3A758DAD6764736F6C6343000807 STOP CALLER ",
							"sourceMap": "26:95:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 121,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 121,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 121,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 121,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 121,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 121,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 121,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 121,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 121,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 121,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 121,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 121,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 121,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 121,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205e949723483fc82295a8a7d25ffb2027e076630d8bc2c1025d393d3a758dad6764736f6c63430008070033",
									".code": [
										{
											"begin": 26,
											"end": 121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 121,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test.sol\":\"contracts\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"test.sol\":{\"keccak256\":\"0x479d6d19ab70dbd9da2eadfe8621531cbf89b0a478a5162c14804b34aacc9ec1\",\"urls\":[\"bzz-raw://801c8a067a51bb87a56461cc8a935409a3791e7577355445d89e913dde5e4869\",\"dweb:/ipfs/QmTfpqqEFCqr48vVoFfQopQLpWGQwqfdxgPX5LFNS3dSVF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test.sol": {
				"ast": {
					"absolutePath": "test.sol",
					"exportedSymbols": {
						"contracts": [
							8
						]
					},
					"id": 9,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 8,
							"linearizedBaseContracts": [
								8
							],
							"name": "contracts",
							"nameLocation": "35:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"mutability": "constant",
									"name": "TEST4",
									"nameLocation": "70:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 8,
									"src": "54:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "54:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"hexValue": "307834",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "78:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "0x4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 7,
									"mutability": "constant",
									"name": "TEST1",
									"nameLocation": "104:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 8,
									"src": "88:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 5,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "88:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"hexValue": "307832",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "112:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "0x2"
									},
									"visibility": "internal"
								}
							],
							"scope": 9,
							"src": "26:95:0",
							"usedErrors": []
						}
					],
					"src": "0:123:0"
				},
				"id": 0
			}
		}
	}
}